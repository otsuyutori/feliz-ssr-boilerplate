/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Client/.fable/HSCode.js":
/*!*************************************!*\
  !*** ./src/Client/.fable/HSCode.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"model\": () => (/* binding */ model)\n/* harmony export */ });\n/* harmony import */ var _fable_modules_Thoth_Json_9_0_0_Decode_fs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fable_modules/Thoth.Json.9.0.0/Decode.fs.js */ \"./src/Client/.fable/fable_modules/Thoth.Json.9.0.0/Decode.fs.js\");\n/* harmony import */ var _fable_modules_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fable_modules/fable-library.3.7.2/Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _Shared_Types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Shared/Types.js */ \"./src/Client/.fable/Shared/Types.js\");\n/* harmony import */ var _fable_modules_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fable_modules/fable-library.3.7.2/Option.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _HSCode_Router_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./HSCode/Router.js */ \"./src/Client/.fable/HSCode/Router.js\");\n\n\n\n\n\n\n\nfunction init() {\n  var matchValue;\n  var json = window.__INIT_STATE__;\n  matchValue = (0,_fable_modules_Thoth_Json_9_0_0_Decode_fs_js__WEBPACK_IMPORTED_MODULE_4__.fromString)((0,_fable_modules_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_5__.uncurry)(2, (0,_fable_modules_Thoth_Json_9_0_0_Decode_fs_js__WEBPACK_IMPORTED_MODULE_4__.Auto_generateBoxedDecoder_79988AEF)((0,_Shared_Types_js__WEBPACK_IMPORTED_MODULE_0__.Model$reflection)(), void 0, void 0)), json);\n  if (matchValue.tag === 1) {\n    console.error((0,_fable_modules_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_6__.some)(\"Cannot decode init state\"), matchValue.fields[0], window.__INIT_STATE__);\n    return (0,_Shared_Types_js__WEBPACK_IMPORTED_MODULE_0__.Model_get_Empty)();\n  } else {\n    return matchValue.fields[0];\n  }\n}\nvar model = init();\n(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.render)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(_HSCode_Router_js__WEBPACK_IMPORTED_MODULE_3__.Router, null), document.getElementById(\"feliz-app\"));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9IU0NvZGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFZVUE7TUEyekNrQ0MsT0EzekNKQztFQUE5QkYsYUE2ekNFRyx3RkFBQUEsQ0FBQUEsbUZBQUFBLElBSkFDLGdIQUFBQSxDQUFBQSxrRUFBQUEsc0JBSW1CSDtFQTd6Q3JCO0lBR0ZJLGNBQWNDLGtGQUFBQSw4QkFBZE4sc0JBQThDRTtXQUM5Q0ssaUVBQUFBOztXQUhVUDs7O1lBTU5RO0FBRVpDLGlEQUFBQSxlQUFBQSxvREFBQUEsQ0FBQUEscURBQUFBLFNBRUlDLHdCQUF3QiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9IU0NvZGUuZnM/N2NkMSJdLCJuYW1lcyI6WyJtYXRjaFZhbHVlIiwianNvbiIsIndpbmRvdyIsImZyb21TdHJpbmciLCJBdXRvX2dlbmVyYXRlQm94ZWREZWNvZGVyXzc5OTg4QUVGIiwiY29uc29sZSIsInNvbWUiLCJNb2RlbF9nZXRfRW1wdHkiLCJpbml0IiwicmVuZGVyIiwiZG9jdW1lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Client/.fable/HSCode.js\n");

/***/ }),

/***/ "./src/Client/.fable/HSCode/Component.js":
/*!***********************************************!*\
  !*** ./src/Client/.fable/HSCode/Component.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Components\": () => (/* binding */ Components),\n/* harmony export */   \"Components$reflection\": () => (/* binding */ Components$reflection),\n/* harmony export */   \"Components_Counter_Z524259A4\": () => (/* binding */ Components_Counter_Z524259A4),\n/* harmony export */   \"Components_MyReactYouTube_Z721C83C5\": () => (/* binding */ Components_MyReactYouTube_Z721C83C5)\n/* harmony export */ });\n/* harmony import */ var _fable_modules_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fable_modules/fable-library.3.7.2/Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _fable_modules_Feliz_1_68_0_React_fs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../fable_modules/Feliz.1.68.0/React.fs.js */ \"./src/Client/.fable/fable_modules/Feliz.1.68.0/React.fs.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fable_modules/fable-library.3.7.2/List.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/List.js\");\n/* harmony import */ var _fable_modules_Feliz_1_68_0_Interop_fs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../fable_modules/Feliz.1.68.0/Interop.fs.js */ \"./src/Client/.fable/fable_modules/Feliz.1.68.0/Interop.fs.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\nvar Components = /*#__PURE__*/_createClass(function Components() {\n  _classCallCheck(this, Components);\n});\nfunction Components$reflection() {\n  return (0,_fable_modules_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_3__.class_type)(\"Client.HSCode.Component.Components\", void 0, Components);\n}\nfunction Components_Counter_Z524259A4(components_Counter_Z524259A4InputProps) {\n  var patternInput = (0,_fable_modules_Feliz_1_68_0_React_fs_js__WEBPACK_IMPORTED_MODULE_0__.useFeliz_React__React_useState_Static_1505)(components_Counter_Z524259A4InputProps.init);\n  var count = patternInput[0] | 0;\n  var children = (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_4__.ofArray)([/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(\"h1\", {\n    children: [count]\n  }), /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(\"button\", {\n    onClick: function onClick(_arg1) {\n      patternInput[1](count + 1);\n    },\n    children: \"Increment\"\n  })]);\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(\"div\", {\n    children: _fable_modules_Feliz_1_68_0_Interop_fs_js__WEBPACK_IMPORTED_MODULE_2__.Interop_reactApi.Children.toArray(Array.from(children))\n  });\n}\nfunction Components_MyReactYouTube_Z721C83C5(components_MyReactYouTube_Z721C83C5InputProps) {\n  return null;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9IU0NvZGUvQ29tcG9uZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQVdZQSxlQUFvQkMsbUhBQUFBO01BQW5CQyxRQUFERjtNQTBMa0JHLFdBekxiQyxtRkFBQUEsZUFtRHVEQyxvREFBQUEsQ0FtU0M7ZUFyVnJESDttQkFrRG9ERyxvREFBQUEsQ0F3QmI7OEJBeEV6QkM7TUFKdEJOLGdCQUlvQ0UsUUFBUTs7Y0FDOUI7O3NCQStDOENHLG9EQUFBQSxDQXNJdUI7Y0ExSHpDRSx3R0FBQUEsWUEwSCtDSiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9IU0NvZGUvQ29tcG9uZW50LmZzP2U2YTQiXSwibmFtZXMiOlsicGF0dGVybklucHV0IiwidXNlRmVsaXpfUmVhY3RfX1JlYWN0X3VzZVN0YXRlX1N0YXRpY18xNTA1IiwiY291bnQiLCJjaGlsZHJlbiIsIm9mQXJyYXkiLCJjcmVhdGVFbGVtZW50IiwiX2FyZzEiLCJJbnRlcm9wX3JlYWN0QXBpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Client/.fable/HSCode/Component.js\n");

/***/ }),

/***/ "./src/Client/.fable/HSCode/Router.js":
/*!********************************************!*\
  !*** ./src/Client/.fable/HSCode/Router.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("var react__WEBPACK_IMPORTED_MODULE_2___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Router\": () => (/* binding */ Router)\n/* harmony export */ });\n/* harmony import */ var _fable_modules_Feliz_1_68_0_React_fs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../fable_modules/Feliz.1.68.0/React.fs.js */ \"./src/Client/.fable/fable_modules/Feliz.1.68.0/React.fs.js\");\n/* harmony import */ var _fable_modules_Feliz_Router_3_10_0_Router_fs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fable_modules/Feliz.Router.3.10.0/Router.fs.js */ \"./src/Client/.fable/fable_modules/Feliz.Router.3.10.0/Router.fs.js\");\n/* harmony import */ var _fable_modules_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../fable_modules/fable-library.3.7.2/Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../fable_modules/fable-library.3.7.2/Seq.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Seq.js\");\n/* harmony import */ var _fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../fable_modules/fable-library.3.7.2/List.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/List.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _Component_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Component.js */ \"./src/Client/.fable/HSCode/Component.js\");\n/* harmony import */ var _Components_youtube_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Components/youtube.jsx */ \"./src/Client/Components/youtube.jsx\");\n/* harmony import */ var _fable_modules_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../fable_modules/fable-library.3.7.2/String.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n\n\n\n\n\nfunction Router() {\n  var elements;\n  var patternInput = (0,_fable_modules_Feliz_1_68_0_React_fs_js__WEBPACK_IMPORTED_MODULE_0__.useFeliz_React__React_useState_Static_1505)((0,_fable_modules_Feliz_Router_3_10_0_Router_fs_js__WEBPACK_IMPORTED_MODULE_1__.RouterModule_urlSegments)(window.location.hash, 1));\n  var currentUrl = patternInput[0];\n  return (0,_fable_modules_Feliz_Router_3_10_0_Router_fs_js__WEBPACK_IMPORTED_MODULE_1__.RouterModule_router)((0,_fable_modules_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_5__.createObj)((0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.ofArray)([[\"onUrlChanged\", patternInput[1]], (elements = (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.toList)((0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.delay)(function () {\n    var activePatternResult14871, userId, value_1;\n    return !(0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)(currentUrl) ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.head)(currentUrl) === \"suggest\" ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)((0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.tail)(currentUrl)) ? (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(_Component_js__WEBPACK_IMPORTED_MODULE_3__.Components_Counter_Z524259A4, {\n      init: 42\n    })) : !(0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)(currentUrl) ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.head)(currentUrl) === \"youtube\" ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)((0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.tail)(currentUrl)) ? (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(_Components_youtube_jsx__WEBPACK_IMPORTED_MODULE_4__.MyReactYouTube, {\n      videoId: \"ujLBD9pFPtY\"\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.head)(currentUrl) === \"master\" ? !(0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)((0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.tail)(currentUrl)) ? (activePatternResult14871 = (0,_fable_modules_Feliz_Router_3_10_0_Router_fs_js__WEBPACK_IMPORTED_MODULE_1__.Route_$007CInt$007C_$007C)((0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.head)((0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.tail)(currentUrl))), activePatternResult14871 != null ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)((0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.tail)((0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.tail)(currentUrl))) ? (userId = activePatternResult14871 | 0, (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)((value_1 = (0,_fable_modules_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_8__.toText)((0,_fable_modules_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_8__.printf)(\"User ID %d\"))(userId), /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [value_1]\n    })))) : !(0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)(currentUrl) ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.head)(currentUrl) === \"youtube\" ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)((0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.tail)(currentUrl)) ? (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(_Components_youtube_jsx__WEBPACK_IMPORTED_MODULE_4__.MyReactYouTube, {\n      videoId: \"ujLBD9pFPtY\"\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : !(0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)(currentUrl) ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.head)(currentUrl) === \"youtube\" ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)((0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.tail)(currentUrl)) ? (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(_Components_youtube_jsx__WEBPACK_IMPORTED_MODULE_4__.MyReactYouTube, {\n      videoId: \"ujLBD9pFPtY\"\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    }))) : !(0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)(currentUrl) ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.head)(currentUrl) === \"youtube\" ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)((0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.tail)(currentUrl)) ? (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(_Components_youtube_jsx__WEBPACK_IMPORTED_MODULE_4__.MyReactYouTube, {\n      videoId: \"ujLBD9pFPtY\"\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : !(0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)(currentUrl) ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.head)(currentUrl) === \"youtube\" ? (0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)((0,_fable_modules_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_6__.tail)(currentUrl)) ? (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(_Components_youtube_jsx__WEBPACK_IMPORTED_MODULE_4__.MyReactYouTube, {\n      videoId: \"ujLBD9pFPtY\"\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Not found\"]\n    })) : (0,_fable_modules_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_7__.singleton)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.createElement)(\"h1\", {\n      children: [\"Index\"]\n    }));\n  })), [\"application\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement.apply(/*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_2__, 2))), [react__WEBPACK_IMPORTED_MODULE_2__.Fragment, {}].concat(_toConsumableArray(elements)))])])));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9IU0NvZGUvUm91dGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUF1T21DQTtNQS9OM0JDLGVBQTBCQyxtSEFBQUEsQ0E2TzFCQyx5R0FBQUEsQ0FBbUJDO01BN09sQkMsYUFBREo7U0E2TElLLG9HQUFBQSxDQUFBQSxxRkFBQUEsQ0E1TEtDLG1GQUFBQSxHQW9Ob0YsZ0JBck43Rk4sbUJBK04yQkQsV0E1TlhRLGlGQUFBQSxDQUNOQyxnRkFBQUE7UUFHUUMsMEJBQVVDLFFBcVZQQztXQXhWWCxvTEFFSlAsZ0JBRkksaUxBRUpBLGVBSFVRLG9GQUFBQSxlQUFBQSxvREFBQUEsQ0FBQUEsdUVBQUFBO1lBRzBCO1VBRmhDLG9MQUlKUixnQkFKSSxpTEFJSkEsZUFMVVEsb0ZBQUFBLGVBQUFBLG9EQUFBQSxDQUFBQSxtRUFBQUE7ZUFLZ0M7VUFMaENBLG9GQUFBQSxlQW9EZ0RDLG9EQUFBQSxDQXFTSTtpQkFuVnpDO1VBTlhELG9GQUFBQSxlQW9EZ0RDLG9EQUFBQSxDQXFTSTtpQkFuVnpDO1VBTlhELG9GQUFBQSxlQW9EZ0RDLG9EQUFBQSxDQXFTSTtpQkFuVnpDO1VBTGpCQyxnRkFBQUEsQ0FFSlYsZ0JBRkksaUxBRUpBLGdCQUNZSywyQkFBQUEsMEdBQUFBLENBSFJLLGdGQUFBQSxDQUdKQyxnRkFBQUEsQ0FEQVgsZUFGSUssd0JBR1FBLFdBSFJPLG1GQUFBQSxDQUFBQSxnRkFBQUEsQ0FHSkQsZ0ZBQUFBLENBREFYLGlCQUNzQk0sU0FIbEJELDhCQURNRyxvRkFBQUEsRUF5VktELFVBclY0Qk0sb0ZBQUFBLENBQVFDLG9GQUFBQSxnQkFBYVIsc0JBZ0RORyxvREFBQUEsQ0FxU0k7aUJBQUtGO1lBeFYvRCxvTEFJSlAsZ0JBSkksaUxBSUpBLGVBTFVRLG9GQUFBQSxlQUFBQSxvREFBQUEsQ0FBQUEsbUVBQUFBO2VBS2dDO1VBTGhDQSxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBblZ6QztVQU5YRCxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBblZ6QztVQU5YRCxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBblZ6QztVQUxqQixvTEFJSlQsZ0JBSkksaUxBSUpBLGVBTFVRLG9GQUFBQSxlQUFBQSxvREFBQUEsQ0FBQUEsbUVBQUFBO2VBS2dDO1VBTGhDQSxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBblZ6QztVQU5YRCxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBblZ6QztVQU5YRCxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBblZ6QztXQUxqQixvTEFJSlQsZ0JBSkksaUxBSUpBLGVBTFVRLG9GQUFBQSxlQUFBQSxvREFBQUEsQ0FBQUEsbUVBQUFBO2VBS2dDO1VBTGhDQSxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBblZ6QztVQU5YRCxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBblZ6QztVQU5YRCxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBblZ6QztVQUxqQixvTEFJSlQsZ0JBSkksaUxBSUpBLGVBTFVRLG9GQUFBQSxlQUFBQSxvREFBQUEsQ0FBQUEsbUVBQUFBO2VBS2dDO1VBTGhDQSxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBblZ6QztVQU5YRCxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBblZ6QztVQU5YRCxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBblZ6QztVQU5YRCxvRkFBQUEsZUFvRGdEQyxvREFBQUEsQ0FxU0k7aUJBdlYvQzs7UUEwTjhELDRCQStHbkZNLHNEQUFBQSxDQUFBQSx5TEFBQUEsR0FBa0NBLDJDQUFBQSxnQ0EvRytFcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vSFNDb2RlL1JvdXRlci5mcz9kMzg0Il0sIm5hbWVzIjpbImVsZW1lbnRzIiwicGF0dGVybklucHV0IiwidXNlRmVsaXpfUmVhY3RfX1JlYWN0X3VzZVN0YXRlX1N0YXRpY18xNTA1IiwiUm91dGVyTW9kdWxlX3VybFNlZ21lbnRzIiwid2luZG93IiwiY3VycmVudFVybCIsIlJvdXRlck1vZHVsZV9yb3V0ZXIiLCJvZkFycmF5IiwidG9MaXN0IiwiZGVsYXkiLCJhY3RpdmVQYXR0ZXJuUmVzdWx0MTQ4NzEiLCJ1c2VySWQiLCJ2YWx1ZSIsInNpbmdsZXRvbiIsImNyZWF0ZUVsZW1lbnQiLCJoZWFkIiwidGFpbCIsImlzRW1wdHkiLCJ0b1RleHQiLCJwcmludGYiLCJyZWFjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Client/.fable/HSCode/Router.js\n");

/***/ }),

/***/ "./src/Client/.fable/Shared/Types.js":
/*!*******************************************!*\
  !*** ./src/Client/.fable/Shared/Types.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Model\": () => (/* binding */ Model),\n/* harmony export */   \"Model$reflection\": () => (/* binding */ Model$reflection),\n/* harmony export */   \"Model_get_Empty\": () => (/* binding */ Model_get_Empty)\n/* harmony export */ });\n/* harmony import */ var _fable_modules_fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../fable_modules/fable-library.3.7.2/Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _fable_modules_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fable_modules/fable-library.3.7.2/Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\nvar Model = /*#__PURE__*/function (_Record) {\n  _inherits(Model, _Record);\n  var _super = _createSuper(Model);\n  function Model(counter) {\n    var _this;\n    _classCallCheck(this, Model);\n    _this = _super.call(this);\n    _this.counter = counter;\n    return _this;\n  }\n  return _createClass(Model);\n}(_fable_modules_fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_0__.Record);\nfunction Model$reflection() {\n  return (0,_fable_modules_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.record_type)(\"Shared.Types.Model\", [], Model, function () {\n    return [[\"counter\", (0,_fable_modules_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.option_type)(_fable_modules_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.int32_type)]];\n  });\n}\nfunction Model_get_Empty() {\n  return new Model(void 0);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9TaGFyZWQvVHlwZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7U0FTUSxVQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uLy4uL1NoYXJlZC9UeXBlcy5mcz9hYWM5Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Client/.fable/Shared/Types.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/Feliz.1.68.0/Interop.fs.js":
/*!********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/Feliz.1.68.0/Interop.fs.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DateParsing_$007CBetween$007C_$007C\": () => (/* binding */ DateParsing_$007CBetween$007C_$007C),\n/* harmony export */   \"DateParsing_isLeapYear\": () => (/* binding */ DateParsing_isLeapYear),\n/* harmony export */   \"DateParsing_$007CInt$007C_$007C\": () => (/* binding */ DateParsing_$007CInt$007C_$007C),\n/* harmony export */   \"DateParsing_parse\": () => (/* binding */ DateParsing_parse),\n/* harmony export */   \"Interop_reactApi\": () => (/* binding */ Interop_reactApi)\n/* harmony export */ });\n/* harmony import */ var _fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fable-library.3.7.2/Option.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\");\n/* harmony import */ var _fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../fable-library.3.7.2/Date.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Date.js\");\n/* harmony import */ var _fable_library_3_7_2_Int32_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fable-library.3.7.2/Int32.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Int32.js\");\n/* harmony import */ var _fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fable-library.3.7.2/String.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js\");\n/* harmony import */ var _fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../fable-library.3.7.2/Array.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n\n\n\n\n\nfunction DateParsing_$007CBetween$007C_$007C(x, y, input) {\n  if (input >= x && input <= y) {\n    return (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_1__.some)(void 0);\n  } else {\n    return void 0;\n  }\n}\nfunction DateParsing_isLeapYear(year) {\n  return (0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_2__.isLeapYear)(year);\n}\nfunction DateParsing_$007CInt$007C_$007C(input) {\n  try {\n    return (0,_fable_library_3_7_2_Int32_js__WEBPACK_IMPORTED_MODULE_3__.parse)(input, 511, false, 32);\n  } catch (matchValue) {\n    return void 0;\n  }\n}\nfunction DateParsing_parse(input) {\n  try {\n    if ((0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_4__.isNullOrWhiteSpace)(input)) {\n      return void 0;\n    } else {\n      var parts = (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_4__.split)(input, [\"-\"], null, 0);\n      var patternInput;\n      var pattern_matching_result, month, year;\n      if (!(0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_5__.equalsWith)(function (x, y) {\n        return x === y;\n      }, parts, null) && parts.length === 2) {\n        var activePatternResult1731 = DateParsing_$007CInt$007C_$007C(parts[0]);\n        if (activePatternResult1731 != null) {\n          var activePatternResult1732 = DateParsing_$007CInt$007C_$007C(parts[1]);\n          if (activePatternResult1732 != null) {\n            pattern_matching_result = 0;\n            month = activePatternResult1732;\n            year = activePatternResult1731;\n          } else {\n            pattern_matching_result = 1;\n          }\n        } else {\n          pattern_matching_result = 1;\n        }\n      } else {\n        pattern_matching_result = 1;\n      }\n      switch (pattern_matching_result) {\n        case 0:\n          {\n            patternInput = [year, month, 1, 0, 0];\n            break;\n          }\n        case 1:\n          {\n            var pattern_matching_result_1, day, month_1, year_1;\n            if (!(0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_5__.equalsWith)(function (x_1, y_1) {\n              return x_1 === y_1;\n            }, parts, null) && parts.length === 3) {\n              var activePatternResult1728 = DateParsing_$007CInt$007C_$007C(parts[0]);\n              if (activePatternResult1728 != null) {\n                var activePatternResult1729 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                if (activePatternResult1729 != null) {\n                  var activePatternResult1730 = DateParsing_$007CInt$007C_$007C(parts[2]);\n                  if (activePatternResult1730 != null) {\n                    pattern_matching_result_1 = 0;\n                    day = activePatternResult1730;\n                    month_1 = activePatternResult1729;\n                    year_1 = activePatternResult1728;\n                  } else {\n                    pattern_matching_result_1 = 1;\n                  }\n                } else {\n                  pattern_matching_result_1 = 1;\n                }\n              } else {\n                pattern_matching_result_1 = 1;\n              }\n            } else {\n              pattern_matching_result_1 = 1;\n            }\n            switch (pattern_matching_result_1) {\n              case 0:\n                {\n                  patternInput = [year_1, month_1, day, 0, 0];\n                  break;\n                }\n              case 1:\n                {\n                  var pattern_matching_result_2, day_1, month_2, year_2;\n                  if (!(0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_5__.equalsWith)(function (x_2, y_2) {\n                    return x_2 === y_2;\n                  }, parts, null) && parts.length === 3) {\n                    var activePatternResult1726 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                    if (activePatternResult1726 != null) {\n                      var activePatternResult1727 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                      if (activePatternResult1727 != null) {\n                        pattern_matching_result_2 = 0;\n                        day_1 = parts[2];\n                        month_2 = activePatternResult1727;\n                        year_2 = activePatternResult1726;\n                      } else {\n                        pattern_matching_result_2 = 1;\n                      }\n                    } else {\n                      pattern_matching_result_2 = 1;\n                    }\n                  } else {\n                    pattern_matching_result_2 = 1;\n                  }\n                  switch (pattern_matching_result_2) {\n                    case 0:\n                      {\n                        if (day_1.indexOf(\"T\") >= 0) {\n                          var matchValue = (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_4__.split)(day_1, [\"T\"], null, 0);\n                          var pattern_matching_result_3, parsedDay, time;\n                          if (!(0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_5__.equalsWith)(function (x_3, y_3) {\n                            return x_3 === y_3;\n                          }, matchValue, null) && matchValue.length === 2) {\n                            var activePatternResult1725 = DateParsing_$007CInt$007C_$007C(matchValue[0]);\n                            if (activePatternResult1725 != null) {\n                              pattern_matching_result_3 = 0;\n                              parsedDay = activePatternResult1725;\n                              time = matchValue[1];\n                            } else {\n                              pattern_matching_result_3 = 1;\n                            }\n                          } else {\n                            pattern_matching_result_3 = 1;\n                          }\n                          switch (pattern_matching_result_3) {\n                            case 0:\n                              {\n                                var matchValue_1 = (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_4__.split)(time, [\":\"], null, 0);\n                                var pattern_matching_result_4, hour, minute;\n                                if (!(0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_5__.equalsWith)(function (x_4, y_4) {\n                                  return x_4 === y_4;\n                                }, matchValue_1, null) && matchValue_1.length === 2) {\n                                  var activePatternResult1723 = DateParsing_$007CInt$007C_$007C(matchValue_1[0]);\n                                  if (activePatternResult1723 != null) {\n                                    var activePatternResult1724 = DateParsing_$007CInt$007C_$007C(matchValue_1[1]);\n                                    if (activePatternResult1724 != null) {\n                                      pattern_matching_result_4 = 0;\n                                      hour = activePatternResult1723;\n                                      minute = activePatternResult1724;\n                                    } else {\n                                      pattern_matching_result_4 = 1;\n                                    }\n                                  } else {\n                                    pattern_matching_result_4 = 1;\n                                  }\n                                } else {\n                                  pattern_matching_result_4 = 1;\n                                }\n                                switch (pattern_matching_result_4) {\n                                  case 0:\n                                    {\n                                      var matchValue_2 = [hour, minute];\n                                      var pattern_matching_result_5;\n                                      if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[0]) != null) {\n                                        if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[1]) != null) {\n                                          pattern_matching_result_5 = 0;\n                                        } else {\n                                          pattern_matching_result_5 = 1;\n                                        }\n                                      } else {\n                                        pattern_matching_result_5 = 1;\n                                      }\n                                      switch (pattern_matching_result_5) {\n                                        case 0:\n                                          {\n                                            patternInput = [year_2, month_2, parsedDay, hour, minute];\n                                            break;\n                                          }\n                                        case 1:\n                                          {\n                                            patternInput = [-1, 1, 1, 0, 0];\n                                            break;\n                                          }\n                                      }\n                                      break;\n                                    }\n                                  case 1:\n                                    {\n                                      patternInput = [-1, 1, 1, 0, 0];\n                                      break;\n                                    }\n                                }\n                                break;\n                              }\n                            case 1:\n                              {\n                                patternInput = [-1, 1, 1, 0, 0];\n                                break;\n                              }\n                          }\n                        } else {\n                          patternInput = [-1, 1, 1, 0, 0];\n                        }\n                        break;\n                      }\n                    case 1:\n                      {\n                        patternInput = [-1, 1, 1, 0, 0];\n                        break;\n                      }\n                  }\n                  break;\n                }\n            }\n            break;\n          }\n      }\n      var year_3 = patternInput[0] | 0;\n      var month_3 = patternInput[1] | 0;\n      var minute_1 = patternInput[4] | 0;\n      var hour_1 = patternInput[3] | 0;\n      var day_2 = patternInput[2] | 0;\n      if (year_3 <= 0) {\n        return void 0;\n      } else {\n        var matchValue_3 = [month_3, day_2];\n        var pattern_matching_result_6;\n        if (matchValue_3[0] === 2) {\n          if (DateParsing_$007CBetween$007C_$007C(1, 29, matchValue_3[1]) != null) {\n            if (DateParsing_isLeapYear(year_3)) {\n              pattern_matching_result_6 = 0;\n            } else {\n              pattern_matching_result_6 = 1;\n            }\n          } else {\n            pattern_matching_result_6 = 1;\n          }\n        } else {\n          pattern_matching_result_6 = 1;\n        }\n        switch (pattern_matching_result_6) {\n          case 0:\n            {\n              return (0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_2__.create)(year_3, month_3, day_2, hour_1, minute_1, 0);\n            }\n          case 1:\n            {\n              var pattern_matching_result_7;\n              if (matchValue_3[0] === 2) {\n                if (DateParsing_$007CBetween$007C_$007C(1, 28, matchValue_3[1]) != null) {\n                  if (!DateParsing_isLeapYear(year_3)) {\n                    pattern_matching_result_7 = 0;\n                  } else {\n                    pattern_matching_result_7 = 1;\n                  }\n                } else {\n                  pattern_matching_result_7 = 1;\n                }\n              } else {\n                pattern_matching_result_7 = 1;\n              }\n              switch (pattern_matching_result_7) {\n                case 0:\n                  {\n                    return (0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_2__.create)(year_3, month_3, day_2, hour_1, minute_1, 0);\n                  }\n                case 1:\n                  {\n                    var pattern_matching_result_8;\n                    if (matchValue_3[0] === 1) {\n                      if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                        pattern_matching_result_8 = 0;\n                      } else {\n                        pattern_matching_result_8 = 1;\n                      }\n                    } else if (matchValue_3[0] === 3) {\n                      if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                        pattern_matching_result_8 = 0;\n                      } else {\n                        pattern_matching_result_8 = 1;\n                      }\n                    } else if (matchValue_3[0] === 5) {\n                      if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                        pattern_matching_result_8 = 0;\n                      } else {\n                        pattern_matching_result_8 = 1;\n                      }\n                    } else if (matchValue_3[0] === 7) {\n                      if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                        pattern_matching_result_8 = 0;\n                      } else {\n                        pattern_matching_result_8 = 1;\n                      }\n                    } else if (matchValue_3[0] === 8) {\n                      if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                        pattern_matching_result_8 = 0;\n                      } else {\n                        pattern_matching_result_8 = 1;\n                      }\n                    } else if (matchValue_3[0] === 10) {\n                      if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                        pattern_matching_result_8 = 0;\n                      } else {\n                        pattern_matching_result_8 = 1;\n                      }\n                    } else if (matchValue_3[0] === 12) {\n                      if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                        pattern_matching_result_8 = 0;\n                      } else {\n                        pattern_matching_result_8 = 1;\n                      }\n                    } else {\n                      pattern_matching_result_8 = 1;\n                    }\n                    switch (pattern_matching_result_8) {\n                      case 0:\n                        {\n                          return (0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_2__.create)(year_3, month_3, day_2, hour_1, minute_1, 0);\n                        }\n                      case 1:\n                        {\n                          var pattern_matching_result_9;\n                          if (matchValue_3[0] === 4) {\n                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                              pattern_matching_result_9 = 0;\n                            } else {\n                              pattern_matching_result_9 = 1;\n                            }\n                          } else if (matchValue_3[0] === 6) {\n                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                              pattern_matching_result_9 = 0;\n                            } else {\n                              pattern_matching_result_9 = 1;\n                            }\n                          } else if (matchValue_3[0] === 9) {\n                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                              pattern_matching_result_9 = 0;\n                            } else {\n                              pattern_matching_result_9 = 1;\n                            }\n                          } else if (matchValue_3[0] === 11) {\n                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                              pattern_matching_result_9 = 0;\n                            } else {\n                              pattern_matching_result_9 = 1;\n                            }\n                          } else {\n                            pattern_matching_result_9 = 1;\n                          }\n                          switch (pattern_matching_result_9) {\n                            case 0:\n                              {\n                                return (0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_2__.create)(year_3, month_3, day_2, hour_1, minute_1, 0);\n                              }\n                            case 1:\n                              {\n                                return void 0;\n                              }\n                          }\n                        }\n                    }\n                  }\n              }\n            }\n        }\n      }\n    }\n  } catch (matchValue_4) {\n    return void 0;\n  }\n}\nvar Interop_reactApi = react__WEBPACK_IMPORTED_MODULE_0__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL0ZlbGl6LjEuNjguMC9JbnRlcm9wLmZzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZDQVV1QkEsR0FBU0MsR0FBU0M7RUFDakMsSUFBR0EsU0FBU0YsS0FBS0UsU0FBU0Q7V0FDckJFLG9FQUFBQSxDQUFJOztXQUNKOzs7Z0NBQ09DO1NBQWFDLHdFQUFBQSxDQUFvQkQ7O3lDQUVsQ0Y7RUFDWDtXQUFXSSxvRUFBQUEsQ0FBSUo7V0FDZks7V0FBVTs7OzJCQUVITDtFQUNQO0lBQ0ksSUFBR00sa0ZBQUFBLENBQTBCTjthQUFXOztVQUVwQ08sUUFBUUMscUVBQUFBLFNBQVk7VUFDcEJDO21DQUVtQkMsT0FBVlI7TUFESDtRQUFBO01BQUE7WUFDRFMsMERBRENKO1FBQ0QsSUFEQ0ksdUJBQ0RBO2NBQVVDLDBEQURUTDtVQUNTLElBRFRLLHVCQUNTQTs7WUFBSUYsUUFEYkU7WUFDR1YsT0FESFM7Ozs7Ozs7Ozs7Ozs7WUFETkYsZ0JBRStCUCxNQUFNUSxPQUFPLEdBQUcsR0FBRzs7Ozs7MkNBQ3BCRyxLQUFYSCxTQUFWUjtZQUZIO2NBQUE7WUFBQTtrQkFFRFksMERBRkNQO2NBRUQsSUFGQ08sdUJBRURBO29CQUFVQywwREFGVFI7Z0JBRVMsSUFGVFEsdUJBRVNBO3NCQUFXQywwREFGcEJUO2tCQUVvQixJQUZwQlMsdUJBRW9CQTs7b0JBQUlILE1BRnhCRztvQkFFYU4sVUFGYks7b0JBRUdiLFNBRkhZOzs7Ozs7Ozs7Ozs7Ozs7O2tCQUROTCxnQkFHd0NQLFFBQU1RLFNBQU9HLEtBQUssR0FBRzs7Ozs7aURBQ25DQSxPQUFQSCxTQUFWUjtrQkFISDtvQkFBQTtrQkFBQTt3QkFHRGUsMERBSENWO29CQUdELElBSENVLHVCQUdEQTswQkFBVUMsMERBSFRYO3NCQUdTLElBSFRXLHVCQUdTQTs7d0JBQVdMLFFBSHBCTjt3QkFHYUcsVUFIYlE7d0JBR0doQixTQUhIZTs7Ozs7Ozs7Ozs7Ozt3QkFJRixJQUFHRSxjQUFhOzhCQUNOZCxhQUFBQSxxRUFBQUEsU0FBVTt5REFDUGUsV0FBV0M7MEJBRGQ7NEJBQUE7MEJBQUE7Z0NBQ0RDLDBEQURDakI7NEJBQ0QsSUFEQ2lCLHVCQUNEQTs7OEJBQUlGLFlBREhFOzhCQUNjRCxPQURkaEI7Ozs7Ozs7Ozs7b0NBRUlBLGVBQUFBLHFFQUFBQSxRQUFXOytEQUNSa0IsTUFBVUM7Z0NBRGI7a0NBQUE7Z0NBQUE7c0NBQ0RDLDBEQURDQztrQ0FDRCxJQURDRCx1QkFDREE7d0NBQVVFLDBEQURURDtvQ0FDUyxJQURUQyx1QkFDU0E7O3NDQUFOSixPQURIRTtzQ0FDYUQsU0FEYkc7Ozs7Ozs7Ozs7Ozs7MENBRUl0QixzQkFBTW1COztzQ0FDVixJQURJSSxtQ0FDSkMsQ0FBUSxHQUFFLElBRE5DO3dDQUNVLElBRFZGLG1DQUNVQyxDQUFRLEdBQUUsSUFEcEJDOzs7Ozs7Ozs7Ozs0Q0FWdEJyQixnQkFXZ0RQLFFBQU1RLFNBQU9VLFdBQVdHLE1BQU1DOzs7Ozs0Q0FYOUVmLGdCQWFvQixJQUFJLEdBQUcsR0FBRyxHQUFHOzs7Ozs7OztzQ0FiakNBLGdCQWVnQixJQUFJLEdBQUcsR0FBRyxHQUFHOzs7Ozs7OztnQ0FmN0JBLGdCQWlCWSxJQUFJLEdBQUcsR0FBRyxHQUFHOzs7OzswQkFqQnpCQSxnQkFtQlEsSUFBSSxHQUFHLEdBQUcsR0FBRzs7Ozs7O3dCQW5CckJBLGdCQXFCSSxJQUFJLEdBQUcsR0FBRyxHQUFHOzs7Ozs7Ozs7O1VBckJqQlA7VUFBTVEsVUFBTkQ7VUFBd0JlLFdBQXhCZjtVQUFrQmMsU0FBbEJkO1VBQWFJLFFBQWJKO01Bc0JKLElBQUdzQixVQUFRO2VBQ1A7O1lBRU0xQix5QkFBT1E7O1FBQVA7VUFDRCxJQURDZSxtQ0FDREMsQ0FBUSxHQUFFLElBRFRHO1lBQUEsSUFDaUJDLHVCQUFXL0I7Ozs7Ozs7Ozs7Ozs7O3FCQUFjZ0Msb0VBQUFBLENBQVNoQyxRQUFNUSxTQUFPRyxPQUFLVSxRQUFNQyxVQUFROzs7OztjQURuRjtnQkFFRCxJQUZDSSxtQ0FFREMsQ0FBUSxHQUFFLElBRlRHO2tCQUFBLElBRWlCLENBQUtDLHVCQUFXL0I7Ozs7Ozs7Ozs7Ozs7OzJCQUFlZ0Msb0VBQUFBLENBQVNoQyxRQUFNUSxTQUFPRyxPQUFLVSxRQUFNQyxVQUFROzs7OztvQkFGekY7c0JBRzJCLElBSDNCSSxtQ0FHMkJDLENBQVEsR0FBRSxJQUhyQ0c7Ozs7OzJCQUFBO3NCQUcyQixJQUgzQkosbUNBRzJCQyxDQUFRLEdBQUUsSUFIckNHOzs7OzsyQkFBQTtzQkFHMkIsSUFIM0JKLG1DQUcyQkMsQ0FBUSxHQUFFLElBSHJDRzs7Ozs7MkJBQUE7c0JBRzJCLElBSDNCSixtQ0FHMkJDLENBQVEsR0FBRSxJQUhyQ0c7Ozs7OzJCQUFBO3NCQUcyQixJQUgzQkosbUNBRzJCQyxDQUFRLEdBQUUsSUFIckNHOzs7OzsyQkFBQTtzQkFHMkIsSUFIM0JKLG1DQUcyQkMsQ0FBUSxHQUFFLElBSHJDRzs7Ozs7MkJBQUE7c0JBRzJCLElBSDNCSixtQ0FHMkJDLENBQVEsR0FBRSxJQUhyQ0c7Ozs7Ozs7Ozs7O2lDQUdpREUsb0VBQUFBLENBQVNoQyxRQUFNUSxTQUFPRyxPQUFLVSxRQUFNQyxVQUFROzs7OzswQkFIMUY7NEJBSWMsSUFKZEksbUNBSWNDLENBQVEsR0FBRSxJQUp4Qkc7Ozs7O2lDQUFBOzRCQUljLElBSmRKLG1DQUljQyxDQUFRLEdBQUUsSUFKeEJHOzs7OztpQ0FBQTs0QkFJYyxJQUpkSixtQ0FJY0MsQ0FBUSxHQUFFLElBSnhCRzs7Ozs7aUNBQUE7NEJBSWMsSUFKZEosbUNBSWNDLENBQVEsR0FBRSxJQUp4Qkc7Ozs7Ozs7Ozs7O3VDQUlvQ0Usb0VBQUFBLENBQVNoQyxRQUFNUSxTQUFPRyxPQUFLVSxRQUFNQyxVQUFROzs7O3VDQUM1RTs7Ozs7Ozs7Ozs7V0FDZm5CO1dBQ08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9JbnRlcm9wLmZzPzAxZmUiXSwibmFtZXMiOlsieCIsInkiLCJpbnB1dCIsInNvbWUiLCJ5ZWFyIiwiaXNMZWFwWWVhciIsInBhcnNlIiwibWF0Y2hWYWx1ZSIsImlzTnVsbE9yV2hpdGVTcGFjZSIsInBhcnRzIiwic3BsaXQiLCJwYXR0ZXJuSW5wdXQiLCJtb250aCIsImFjdGl2ZVBhdHRlcm5SZXN1bHQxNzMxIiwiYWN0aXZlUGF0dGVyblJlc3VsdDE3MzIiLCJkYXkiLCJhY3RpdmVQYXR0ZXJuUmVzdWx0MTcyOCIsImFjdGl2ZVBhdHRlcm5SZXN1bHQxNzI5IiwiYWN0aXZlUGF0dGVyblJlc3VsdDE3MzAiLCJhY3RpdmVQYXR0ZXJuUmVzdWx0MTcyNiIsImFjdGl2ZVBhdHRlcm5SZXN1bHQxNzI3IiwiZGF5XzEiLCJwYXJzZWREYXkiLCJ0aW1lIiwiYWN0aXZlUGF0dGVyblJlc3VsdDE3MjUiLCJob3VyIiwibWludXRlIiwiYWN0aXZlUGF0dGVyblJlc3VsdDE3MjMiLCJtYXRjaFZhbHVlXzEiLCJhY3RpdmVQYXR0ZXJuUmVzdWx0MTcyNCIsIkRhdGVQYXJzaW5nXyQwMDdDQmV0d2VlbiQwMDdDXyQwMDdDIiwiKHxCZXR3ZWVufF98KSIsIm1hdGNoVmFsdWVfMiIsInllYXJfMyIsIm1hdGNoVmFsdWVfMyIsIkRhdGVQYXJzaW5nX2lzTGVhcFllYXIiLCJjcmVhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/Feliz.1.68.0/Interop.fs.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/Feliz.1.68.0/React.fs.js":
/*!******************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/Feliz.1.68.0/React.fs.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("var react__WEBPACK_IMPORTED_MODULE_2___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ReactInterop_useDebugValueWithFormatter\": () => (/* binding */ ReactInterop_useDebugValueWithFormatter),\n/* harmony export */   \"ReactInterop_useEffect\": () => (/* binding */ ReactInterop_useEffect),\n/* harmony export */   \"ReactInterop_useEffectWithDeps\": () => (/* binding */ ReactInterop_useEffectWithDeps),\n/* harmony export */   \"ReactInterop_useLayoutEffect\": () => (/* binding */ ReactInterop_useLayoutEffect),\n/* harmony export */   \"ReactInterop_useLayoutEffectWithDeps\": () => (/* binding */ ReactInterop_useLayoutEffectWithDeps),\n/* harmony export */   \"Internal\": () => (/* binding */ Internal),\n/* harmony export */   \"Internal$reflection\": () => (/* binding */ Internal$reflection),\n/* harmony export */   \"Internal_$ctor\": () => (/* binding */ Internal_$ctor),\n/* harmony export */   \"Internal_functionComponent_Z1B155329\": () => (/* binding */ Internal_functionComponent_Z1B155329),\n/* harmony export */   \"Internal_memo_Z603636D8\": () => (/* binding */ Internal_memo_Z603636D8),\n/* harmony export */   \"React\": () => (/* binding */ React),\n/* harmony export */   \"React$reflection\": () => (/* binding */ React$reflection),\n/* harmony export */   \"React_createDisposable_3A5B6456\": () => (/* binding */ React_createDisposable_3A5B6456),\n/* harmony export */   \"useReact_useState_FCFD9EF\": () => (/* binding */ useReact_useState_FCFD9EF),\n/* harmony export */   \"useReact_useReducer_2B9E6EA0\": () => (/* binding */ useReact_useReducer_2B9E6EA0),\n/* harmony export */   \"useReact_useEffect_Z5ECA432F\": () => (/* binding */ useReact_useEffect_Z5ECA432F),\n/* harmony export */   \"useReact_useEffect_Z5234A374\": () => (/* binding */ useReact_useEffect_Z5234A374),\n/* harmony export */   \"useReact_useLayoutEffect_Z5ECA432F\": () => (/* binding */ useReact_useLayoutEffect_Z5ECA432F),\n/* harmony export */   \"useReact_useLayoutEffect_Z5234A374\": () => (/* binding */ useReact_useLayoutEffect_Z5234A374),\n/* harmony export */   \"useReact_useLayoutEffect_3A5B6456\": () => (/* binding */ useReact_useLayoutEffect_3A5B6456),\n/* harmony export */   \"useReact_useLayoutEffect_Z101E1A95\": () => (/* binding */ useReact_useLayoutEffect_Z101E1A95),\n/* harmony export */   \"useReact_useEffectOnce_3A5B6456\": () => (/* binding */ useReact_useEffectOnce_3A5B6456),\n/* harmony export */   \"useReact_useEffectOnce_Z5ECA432F\": () => (/* binding */ useReact_useEffectOnce_Z5ECA432F),\n/* harmony export */   \"useReact_useEffectOnce_6E825304\": () => (/* binding */ useReact_useEffectOnce_6E825304),\n/* harmony export */   \"useReact_useEffect_3A5B6456\": () => (/* binding */ useReact_useEffect_3A5B6456),\n/* harmony export */   \"useReact_useEffect_Z101E1A95\": () => (/* binding */ useReact_useEffect_Z101E1A95),\n/* harmony export */   \"useReact_useDebugValue_Z721C83C5\": () => (/* binding */ useReact_useDebugValue_Z721C83C5),\n/* harmony export */   \"useReact_useDebugValue_77A55D6D\": () => (/* binding */ useReact_useDebugValue_77A55D6D),\n/* harmony export */   \"useReact_useCallback_93353E\": () => (/* binding */ useReact_useCallback_93353E),\n/* harmony export */   \"useReact_useRef_1505\": () => (/* binding */ useReact_useRef_1505),\n/* harmony export */   \"useReact_useInputRef\": () => (/* binding */ useReact_useInputRef),\n/* harmony export */   \"useReact_useButtonRef\": () => (/* binding */ useReact_useButtonRef),\n/* harmony export */   \"useReact_useElementRef\": () => (/* binding */ useReact_useElementRef),\n/* harmony export */   \"useReact_useMemo_CF4EA67\": () => (/* binding */ useReact_useMemo_CF4EA67),\n/* harmony export */   \"React_functionComponent_2F9D7239\": () => (/* binding */ React_functionComponent_2F9D7239),\n/* harmony export */   \"React_functionComponent_Z4C5FE1BE\": () => (/* binding */ React_functionComponent_Z4C5FE1BE),\n/* harmony export */   \"React_functionComponent_19A12FB2\": () => (/* binding */ React_functionComponent_19A12FB2),\n/* harmony export */   \"React_functionComponent_2E1DD889\": () => (/* binding */ React_functionComponent_2E1DD889),\n/* harmony export */   \"React_memo_62A0F746\": () => (/* binding */ React_memo_62A0F746),\n/* harmony export */   \"React_memo_6648A89D\": () => (/* binding */ React_memo_6648A89D),\n/* harmony export */   \"React_memo_C2C6BED\": () => (/* binding */ React_memo_C2C6BED),\n/* harmony export */   \"React_memo_Z4FCC584A\": () => (/* binding */ React_memo_Z4FCC584A),\n/* harmony export */   \"React_createContext_1AE444D8\": () => (/* binding */ React_createContext_1AE444D8),\n/* harmony export */   \"React_contextProvider_34D9BBBD\": () => (/* binding */ React_contextProvider_34D9BBBD),\n/* harmony export */   \"React_contextProvider_138D2F56\": () => (/* binding */ React_contextProvider_138D2F56),\n/* harmony export */   \"React_contextConsumer_Z68910595\": () => (/* binding */ React_contextConsumer_Z68910595),\n/* harmony export */   \"React_contextConsumer_56D53A40\": () => (/* binding */ React_contextConsumer_56D53A40),\n/* harmony export */   \"useReact_useContext_37FA55CF\": () => (/* binding */ useReact_useContext_37FA55CF),\n/* harmony export */   \"useReact_useCallbackRef_7C4B0DD6\": () => (/* binding */ useReact_useCallbackRef_7C4B0DD6),\n/* harmony export */   \"React_useStateWithUpdater_1505\": () => (/* binding */ React_useStateWithUpdater_1505),\n/* harmony export */   \"React_forwardRef_3790D881\": () => (/* binding */ React_forwardRef_3790D881),\n/* harmony export */   \"React_forwardRef_7DC3DB1A\": () => (/* binding */ React_forwardRef_7DC3DB1A),\n/* harmony export */   \"React_strictMode_6E3A73D\": () => (/* binding */ React_strictMode_6E3A73D),\n/* harmony export */   \"React_lazy$0027_4712D3AE\": () => (/* binding */ React_lazy$0027_4712D3AE),\n/* harmony export */   \"React_lazy$0027_Z3D8450FC\": () => (/* binding */ React_lazy$0027_Z3D8450FC),\n/* harmony export */   \"React_suspense_6E3A73D\": () => (/* binding */ React_suspense_6E3A73D),\n/* harmony export */   \"React_suspense_Z3796A576\": () => (/* binding */ React_suspense_Z3796A576),\n/* harmony export */   \"useReact_useImperativeHandle_596DDC25\": () => (/* binding */ useReact_useImperativeHandle_596DDC25),\n/* harmony export */   \"useReact_useImperativeHandle_Z12F09548\": () => (/* binding */ useReact_useImperativeHandle_Z12F09548),\n/* harmony export */   \"useFeliz_React__React_useState_Static_1505\": () => (/* binding */ useFeliz_React__React_useState_Static_1505),\n/* harmony export */   \"Feliz_React__React_useStateWithUpdater_Static_FCFD9EF\": () => (/* binding */ Feliz_React__React_useStateWithUpdater_Static_FCFD9EF)\n/* harmony export */ });\n/* harmony import */ var _ReactInterop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ReactInterop.js */ \"./src/Client/.fable/fable_modules/Feliz.1.68.0/ReactInterop.js\");\n/* harmony import */ var _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fable-library.3.7.2/Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fable-library.3.7.2/Seq.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Seq.js\");\n/* harmony import */ var _fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../fable-library.3.7.2/Option.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\");\n/* harmony import */ var _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Interop.fs.js */ \"./src/Client/.fable/fable_modules/Feliz.1.68.0/Interop.fs.js\");\n/* harmony import */ var _fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../fable-library.3.7.2/Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\nvar ReactInterop_useDebugValueWithFormatter = _ReactInterop_js__WEBPACK_IMPORTED_MODULE_0__.useDebugValue;\nvar ReactInterop_useEffect = _ReactInterop_js__WEBPACK_IMPORTED_MODULE_0__.useEffect;\nvar ReactInterop_useEffectWithDeps = _ReactInterop_js__WEBPACK_IMPORTED_MODULE_0__.useEffectWithDeps;\nvar ReactInterop_useLayoutEffect = _ReactInterop_js__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect;\nvar ReactInterop_useLayoutEffectWithDeps = _ReactInterop_js__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffectWithDeps;\nvar Internal = /*#__PURE__*/_createClass(function Internal() {\n  _classCallCheck(this, Internal);\n});\nfunction Internal$reflection() {\n  return (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_3__.class_type)(\"Feliz.Internal\", void 0, Internal);\n}\nfunction Internal_$ctor() {\n  return new Internal();\n}\nfunction Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\n  (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_4__.iterate)(function (name_1) {\n    renderElement.displayName = name_1;\n  }, (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_5__.toArray)(name));\n  console.warn((0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_5__.some)(\"Feliz: using React.functionComponent in Fable 3 is obsolete, please consider using the [<ReactComponent>] attribute instead which makes Feliz output better Javascript code that is compatible with react-refresh\"));\n  return function (props) {\n    var props_2 = Internal_propsWithKey(withKey, props);\n    return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement(renderElement, props_2);\n  };\n}\nfunction Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\n  var memoElementType = _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.memo(renderElement, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_6__.uncurry)(2, (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_5__.defaultArg)((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_6__.curry)(2, areEqual), null)));\n  (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_4__.iterate)(function (name_1) {\n    renderElement.displayName = name_1;\n  }, (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_5__.toArray)(name));\n  return function (props) {\n    var props_2 = Internal_propsWithKey(withKey, props);\n    return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement(memoElementType, props_2);\n  };\n}\nfunction Internal_propsWithKey(withKey, props) {\n  if (withKey == null) {\n    return props;\n  } else {\n    var f = withKey;\n    props.key = f(props);\n    return props;\n  }\n}\nvar React = /*#__PURE__*/_createClass(function React() {\n  _classCallCheck(this, React);\n});\nfunction React$reflection() {\n  return (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_3__.class_type)(\"Feliz.React\", void 0, React);\n}\nfunction React_createDisposable_3A5B6456(dispose) {\n  return {\n    Dispose: function Dispose() {\n      dispose();\n    }\n  };\n}\nfunction useReact_useState_FCFD9EF(initializer) {\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.useState(initializer);\n}\nfunction useReact_useReducer_2B9E6EA0(update, initialState) {\n  var arg00 = update;\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.useReducer(arg00, initialState);\n}\nfunction useReact_useEffect_Z5ECA432F(effect) {\n  ReactInterop_useEffect(effect);\n}\nfunction useReact_useEffect_Z5234A374(effect, dependencies) {\n  ReactInterop_useEffectWithDeps(effect, dependencies);\n}\nfunction useReact_useLayoutEffect_Z5ECA432F(effect) {\n  ReactInterop_useLayoutEffect(effect);\n}\nfunction useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\n  ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\n}\nfunction useReact_useLayoutEffect_3A5B6456(effect) {\n  ReactInterop_useLayoutEffect(function (_arg1) {\n    effect();\n    return React_createDisposable_3A5B6456(function () {});\n  });\n}\nfunction useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\n  ReactInterop_useLayoutEffectWithDeps(function (_arg2) {\n    effect();\n    return React_createDisposable_3A5B6456(function () {});\n  }, dependencies);\n}\nfunction useReact_useEffectOnce_3A5B6456(effect) {\n  useReact_useEffect_Z101E1A95(effect, []);\n}\nfunction useReact_useEffectOnce_Z5ECA432F(effect) {\n  useReact_useEffect_Z5234A374(effect, []);\n}\nfunction useReact_useEffectOnce_6E825304(effect) {\n  useReact_useEffect_Z5234A374(function () {\n    var disposeOption = effect();\n    return {\n      Dispose: function Dispose() {\n        (function (option) {\n          (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_4__.iterate)(function (d) {\n            var copyOfStruct = d;\n            (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_6__.disposeSafe)(copyOfStruct);\n          }, (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_5__.toArray)(option));\n        })(disposeOption);\n      }\n    };\n  }, []);\n}\nfunction useReact_useEffect_3A5B6456(effect) {\n  ReactInterop_useEffect(function (_arg3) {\n    effect();\n    return React_createDisposable_3A5B6456(function () {});\n  });\n}\nfunction useReact_useEffect_Z101E1A95(effect, dependencies) {\n  ReactInterop_useEffectWithDeps(function (_arg4) {\n    effect();\n    return React_createDisposable_3A5B6456(function () {});\n  }, dependencies);\n}\nfunction useReact_useDebugValue_Z721C83C5(value) {\n  ReactInterop_useDebugValueWithFormatter(value, function (x) {\n    return x;\n  });\n}\nfunction useReact_useDebugValue_77A55D6D(value, formatter) {\n  ReactInterop_useDebugValueWithFormatter(value, formatter);\n}\nfunction useReact_useCallback_93353E(callbackFunction, dependencies) {\n  var arg10 = (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_5__.defaultArg)(dependencies, []);\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.useCallback(callbackFunction, arg10);\n}\nfunction useReact_useRef_1505(initialValue) {\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.useRef(initialValue);\n}\nfunction useReact_useInputRef() {\n  return useReact_useRef_1505(void 0);\n}\nfunction useReact_useButtonRef() {\n  return useReact_useRef_1505(void 0);\n}\nfunction useReact_useElementRef() {\n  return useReact_useRef_1505(void 0);\n}\nfunction useReact_useMemo_CF4EA67(createFunction, dependencies) {\n  var arg10 = (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_5__.defaultArg)(dependencies, []);\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.useMemo(createFunction, arg10);\n}\nfunction React_functionComponent_2F9D7239(render, withKey) {\n  return Internal_functionComponent_Z1B155329(render, void 0, withKey);\n}\nfunction React_functionComponent_Z4C5FE1BE(name, render, withKey) {\n  return Internal_functionComponent_Z1B155329(render, name, withKey);\n}\nfunction React_functionComponent_19A12FB2(render, withKey) {\n  return Internal_functionComponent_Z1B155329(function (arg) {\n    var arg00 = render(arg);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement.apply(/*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_2__, 2))), [react__WEBPACK_IMPORTED_MODULE_2__.Fragment, {}].concat(_toConsumableArray(arg00)));\n  }, void 0, withKey);\n}\nfunction React_functionComponent_2E1DD889(name, render, withKey) {\n  return Internal_functionComponent_Z1B155329(function (arg) {\n    var arg00 = render(arg);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement.apply(/*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_2__, 2))), [react__WEBPACK_IMPORTED_MODULE_2__.Fragment, {}].concat(_toConsumableArray(arg00)));\n  }, name, withKey);\n}\nfunction React_memo_62A0F746(render, withKey, areEqual) {\n  return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\n}\nfunction React_memo_6648A89D(name, render, withKey, areEqual) {\n  return Internal_memo_Z603636D8(render, name, areEqual, withKey);\n}\nfunction React_memo_C2C6BED(render, withKey, areEqual) {\n  return Internal_memo_Z603636D8(function (arg) {\n    var arg00 = render(arg);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement.apply(/*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_2__, 2))), [react__WEBPACK_IMPORTED_MODULE_2__.Fragment, {}].concat(_toConsumableArray(arg00)));\n  }, void 0, areEqual, withKey);\n}\nfunction React_memo_Z4FCC584A(name, render, withKey, areEqual) {\n  return Internal_memo_Z603636D8(function (arg) {\n    var arg00 = render(arg);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement.apply(/*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_2__, 2))), [react__WEBPACK_IMPORTED_MODULE_2__.Fragment, {}].concat(_toConsumableArray(arg00)));\n  }, name, areEqual, withKey);\n}\nfunction React_createContext_1AE444D8(name, defaultValue) {\n  var contextObject = _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createContext((0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_5__.defaultArg)(defaultValue, void 0));\n  (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_4__.iterate)(function (name_1) {\n    contextObject.displayName = name_1;\n  }, (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_5__.toArray)(name));\n  return contextObject;\n}\nfunction React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement(contextObject.Provider, {\n    value: contextValue\n  }, child);\n}\nfunction React_contextProvider_138D2F56(contextObject, contextValue, children) {\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement.apply(_Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi, [contextObject.Provider, {\n    value: contextValue\n  }].concat(_toConsumableArray(children)));\n}\nfunction React_contextConsumer_Z68910595(contextObject, render) {\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement(contextObject.Consumer, null, render);\n}\nfunction React_contextConsumer_56D53A40(contextObject, render) {\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement(contextObject.Consumer, null, function (arg) {\n    var arg00 = render(arg);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement.apply(/*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_2__, 2))), [react__WEBPACK_IMPORTED_MODULE_2__.Fragment, {}].concat(_toConsumableArray(arg00)));\n  });\n}\nfunction useReact_useContext_37FA55CF(contextObject) {\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.useContext(contextObject);\n}\nfunction useReact_useCallbackRef_7C4B0DD6(callback) {\n  var lastRenderCallbackRef = useReact_useRef_1505(callback);\n  var callbackRef = useReact_useCallback_93353E(function (arg) {\n    return lastRenderCallbackRef.current(arg);\n  }, []);\n  useReact_useLayoutEffect_3A5B6456(function () {\n    lastRenderCallbackRef.current = callback;\n  });\n  return callbackRef;\n}\nvar React_useStateWithUpdater_1505 = react__WEBPACK_IMPORTED_MODULE_2__.useState;\nfunction React_forwardRef_3790D881(render) {\n  var forwardRefType = _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.forwardRef(function (props, ref) {\n    return render([props, ref]);\n  });\n  return function (tupledArg) {\n    var propsObj = Object.assign({}, tupledArg[0]);\n    propsObj.ref = tupledArg[1];\n    return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement(forwardRefType, propsObj);\n  };\n}\nfunction React_forwardRef_7DC3DB1A(name, render) {\n  var forwardRefType = _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.forwardRef(function (props, ref) {\n    return render([props, ref]);\n  });\n  render.displayName = name;\n  return function (tupledArg) {\n    var propsObj = Object.assign({}, tupledArg[0]);\n    propsObj.ref = tupledArg[1];\n    return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement(forwardRefType, propsObj);\n  };\n}\nfunction React_strictMode_6E3A73D(children) {\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement.apply(_Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi, [_Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.StrictMode, void 0].concat(_toConsumableArray(children)));\n}\nfunction React_lazy$0027_4712D3AE(dynamicImport, props) {\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement(_Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.lazy(function () {\n    return dynamicImport;\n  }), props);\n}\nfunction React_lazy$0027_Z3D8450FC(dynamicImport, props) {\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement(_Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.lazy(dynamicImport), props);\n}\nfunction React_suspense_6E3A73D(children) {\n  var o;\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement.apply(_Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi, [_Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.Suspense, (o = {\n    fallback: null\n  }, Object.assign({}, o))].concat(_toConsumableArray(children)));\n}\nfunction React_suspense_Z3796A576(children, fallback) {\n  var o;\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.createElement.apply(_Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi, [_Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.Suspense, (o = {\n    fallback: fallback\n  }, Object.assign({}, o))].concat(_toConsumableArray(children)));\n}\nfunction useReact_useImperativeHandle_596DDC25(ref, createHandle) {\n  _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.useImperativeHandle(ref, createHandle);\n}\nfunction useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\n  _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.useImperativeHandle(ref, createHandle, dependencies);\n}\nfunction useFeliz_React__React_useState_Static_1505(initial) {\n  return _Interop_fs_js__WEBPACK_IMPORTED_MODULE_1__.Interop_reactApi.useState(initial);\n}\nvar Feliz_React__React_useStateWithUpdater_Static_FCFD9EF = react__WEBPACK_IMPORTED_MODULE_2__.useState;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL0ZlbGl6LjEuNjguMC9SZWFjdC5mcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzhDQStCWUEsZUFDQ0MsTUFDQUM7RUFHT0Msb0VBQUFBLFdBQWlCRjtJQUFRRCw0QkFBNkJDOzZFQUE5REE7RUFFQUcsYUFBeUJDLG9FQUFBQTttQkFFckJDO1FBQ0lBLFVBQWlCQywrQkFBVEQ7V0FDWkUsMEVBQUFBLENBQStCUixlQUFlTTs7O2lDQUlsRE4sZUFDQ0MsTUFDQVEsVUFDQVA7TUFHR1Esa0JBQWtCRixpRUFBQUEsQ0FBc0JSLGVBQUFBLHFFQUFBQSxJQUFnQlcsMEVBQUFBLENBQUFBLG1FQUFBQSxJQUFXRjtFQUMvRE4sb0VBQUFBLFdBQWlCRjtJQUFRRCw0QkFBNkJDOzZFQUE5REE7bUJBQ0lLO1FBQ0lBLFVBQWlCQywrQkFBVEQ7V0FDWkUsMEVBQUFBLENBQStCRSxpQkFBaUJKOzs7K0JBbENuQ0osU0FBb0NJO0VBQ25EO1dBSUlBOztRQUhITSxJQUNIVjtJQUFBSSxZQUFhTSxFQUFFTjtXQUNmQTs7Ozs7Ozs7O3lDQWtDdUJPOzs7TUFDaUJBOzs7O21DQWVyQkM7U0FBMkJOLHFFQUFBQSxDQUF5Q007O3NDQUl0RUMsUUFBUUM7TUFBZ0JDLFFBQTRCRjtTQUE1QlAsdUVBQUFBLFFBQW1DUTs7c0NBTzVERTtFQUF1Q0MsdUJBQXVCRDs7c0NBWTlEQSxRQUE4QkU7RUFBK0JDLCtCQUErQkgsUUFBT0U7OzRDQWM3RkY7RUFBdUNJLDZCQUE2Qko7OzRDQWNwRUEsUUFBOEJFO0VBQStCRyxxQ0FBcUNMLFFBQU9FOzsyQ0FZekdGO0VBQzFCSSx1Q0FDU0U7SUFDRE47V0FDQU87Ozs0Q0FJa0JQLFFBQXNCRTtFQUNoREcsK0NBQ1NHO0lBQ0RSO1dBQ0FPO0tBQ0pMOzt5Q0FpQm9CRjtFQUN4QkMsNkJBQWdCRDs7MENBS1FBO0VBQ3hCQyw2QkFBZ0JEOzt5Q0FJUUE7RUFDeEJDO1FBQTBCUSxnQkFBVlQ7OztRQWxLNkIsV0FBaUJVO1VBQUF6QixvRUFBQUEsV0FBaUIwQjtnQkFBS0M7WUFBQUMseUVBQUFBO3FGQUF0Qkg7V0FrS3BDRDs7Ozs7cUNBUU5UO0VBQ3BCQyxpQ0FDU2E7SUFDRGQ7V0FDQU87OztzQ0FNWVAsUUFBc0JFO0VBQzFDQyx5Q0FDU1k7SUFDRGY7V0FDQU87S0FDSkw7OzBDQUlvQmM7RUFDeEJDLHdDQUF3Q0QsaUJBQU9FO0lBQUFBO0VBQUFBOzt5Q0FJdkJGLE9BQVdHO0VBQ25DRix3Q0FBd0NELE9BQU9HOztxQ0FVekJDLGtCQUE2QmxCO01BQ25EbUIsUUFBK0M1QiwwRUFBQUEsQ0FBV1M7U0FBMURaLHdFQUFBQSxDQUE2QjhCLGtCQUE3QkM7OzhCQU1pQkM7U0FBZ0JoQyxtRUFBQUEsQ0FBd0JnQzs7O1NBTU1DLHFCQUFhOzs7U0FJWEEscUJBQWE7OztTQU1sQkEscUJBQWE7O2tDQVV2REMsZ0JBQTZCdEI7TUFDL0NtQixRQUF5QzVCLDBFQUFBQSxDQUFXUztTQUFwRFosb0VBQUFBLENBQXlCa0MsZ0JBQXpCSDs7MENBWTRCSSxRQUFpQ3pDO1NBQzdEMEMscUNBQTJCRCxRQUEzQixRQUE0Q3pDOzsyQ0FTaEJELE1BQWMwQyxRQUFpQ3pDO1NBQzNFMEMscUNBQTJCRCxRQUFRMUMsTUFBZUM7OzBDQVF0QnlDLFFBQXVDekM7U0FDbkUwQztRQUFxQzNCLFFBQVYwQjt3QkFvRDNCRSxzREFBQUEsQ0FBQUEseUxBQUFBLEdBQWtDQSwyQ0FBQUEsZ0NBcERHNUI7S0FBckMsUUFBOERmOzswQ0FTbENELE1BQWMwQyxRQUF1Q3pDO1NBQ2pGMEM7UUFBcUMzQixRQUFWMEI7d0JBMEMzQkUsc0RBQUFBLENBQUFBLHlMQUFBQSxHQUFrQ0EsMkNBQUFBLGdDQTFDRzVCO0tBQWdCaEIsTUFBZUM7OzZCQWNyRHlDLFFBQWlDekMsU0FBNEJPO1NBQzVFcUMsd0JBQWNILFFBQWQsUUFBZ0NsQyxVQUFtQlA7OzZCQVdwQ0QsTUFBYzBDLFFBQWlDekMsU0FBNEJPO1NBQzFGcUMsd0JBQWNILFFBQVExQyxNQUFnQlEsVUFBbUJQOzs0QkFVMUN5QyxRQUF1Q3pDLFNBQTRCTztTQUNsRnFDO1FBQXdCN0IsUUFBVjBCO3dCQUlkRSxzREFBQUEsQ0FBQUEseUxBQUFBLEdBQWtDQSwyQ0FBQUEsZ0NBSlY1QjtLQUF4QixRQUFrRFIsVUFBbUJQOzs4QkFXdERELE1BQWMwQyxRQUF1Q3pDLFNBQTRCTztTQUNoR3FDO1FBQXdCN0IsUUFBVjBCO3dCQVJkRSxzREFBQUEsQ0FBQUEseUxBQUFBLEdBQWtDQSwyQ0FBQUEsZ0NBUVY1QjtLQUFnQmhCLE1BQWdCUSxVQUFtQlA7O3NDQVk5Q0QsTUFBZThDO01BQ3hDQyxnQkFBZ0J4QywwRUFBQUEsQ0FBZ0NHLDBFQUFBQSxDQUFXb0MsY0FBYTtFQUNwRTVDLG9FQUFBQSxXQUFpQkY7SUFBUStDLDRCQUE2Qi9DOzZFQUE5REE7U0FDQStDOzt3Q0FRMEJBLGVBQXlDQyxjQUFrQkM7U0FDckYxQywwRUFBQUEsQ0FBK0J3QztXQUErQ0M7S0FBZ0JDOzt3Q0FPcEVGLGVBQXlDQyxjQUFrQkU7U0FDckYzQyxnRkFBQUEsQ0FBQUEsNERBQUFBLEdBQStCd0M7V0FBK0NDOytCQUFlRTs7eUNBT25FSCxlQUF5Q0w7U0FDbkVuQywwRUFBQUEsQ0FBK0J3Qyw4QkFBaUNMOzt3Q0FNdENLLGVBQXlDTDtTQUNuRW5DLDBFQUFBQSxDQUErQndDO1FBQTRDL0IsUUFBVjBCO3dCQXZEakVFLHNEQUFBQSxDQUFBQSx5TEFBQUEsR0FBa0NBLDJDQUFBQSxnQ0F1RHlDNUI7OztzQ0FRdEQrQjtTQUEyQ3hDLHVFQUFBQSxDQUE0QndDOzswQ0FhbkVJO01BQ3JCQyx3QkFBd0JaLHFCQUFhVztNQUVyQ0UsY0FDQUMsc0NBQXdCQztJQUFBQSxPQUNwQkgsOEJBQThCRztFQUFBQTtFQUd0Q2xDO0lBRUkrQixnQ0FBaUNEOztTQUdyQ0U7OzttQ0FjcUJYO01BQ2pCYyxpQkFBaUJqRCx1RUFBQUEsV0FBeUVGLE9BQU1vRDtJQUFBQSxPQUFPZixRQUFPckMsT0FBTW9EO0VBQUFBO21CQUNuSEM7UUFDR0MsV0FBb0JDLGtCQUR2QkY7SUFFREMsZUFGQ0Q7V0FHRG5ELDBFQUFBQSxDQUErQmlELGdCQUFnQkc7OzttQ0FPOUIzRCxNQUFjMEM7TUFDL0JjLGlCQUFpQmpELHVFQUFBQSxXQUF5RUYsT0FBTW9EO0lBQUFBLE9BQU9mLFFBQU9yQyxPQUFNb0Q7RUFBQUE7RUFDeEhmLHFCQUFzQjFDO21CQUNqQjBEO1FBQ0dDLFdBQW9CQyxrQkFEdkJGO0lBRURDLGVBRkNEO1dBR0RuRCwwRUFBQUEsQ0FBK0JpRCxnQkFBZ0JHOzs7a0NBVzlCVDtTQUNyQjNDLGdGQUFBQSxDQUFBQSw0REFBQUEsR0FBK0JBLHVFQUFBQSxFQUE2QixrQ0FBTTJDOztrQ0FhdkNXLGVBQStCeEQ7U0FDMURFLDBFQUFBQSxDQUErQkEsaUVBQUFBO0lBQUEsT0FBaUNzRDtFQUFBQSxJQUFleEQ7O21DQWFwRHdELGVBQXVDeEQ7U0FDbEVFLDBFQUFBQSxDQUErQkEsaUVBQUFBLENBQXVCc0QsZ0JBQWV4RDs7Z0NBU2xENkM7TUFDcUVZO1NBQXhGdkQsZ0ZBQUFBLENBQUFBLDREQUFBQSxHQUErQkEscUVBQUFBLEdBQXlEdUQ7O0tBQUFGLGlEQUF3QlY7O2tDQVM3RkEsVUFBNkJhO01BQ3VDRDtTQUF2RnZELGdGQUFBQSxDQUFBQSw0REFBQUEsR0FBK0JBLHFFQUFBQSxHQUF3RHVEO2NBQWZDO0tBQWVILGlEQUF3QlY7OytDQVNqRk8sS0FBb0JPO0VBQ2xEekQsZ0ZBQUFBLENBQTJDa0QsS0FBSU87O2dEQVlqQlAsS0FBb0JPLGNBQTBCN0M7RUFDNUVaLGdGQUFBQSxDQUFxQ2tELEtBQUlPLGNBQWE3Qzs7b0RBa0QzQjhDO1NBQWUxRCxxRUFBQUEsQ0FBaUMwRCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL1JlYWN0LmZzPzdmODIiXSwibmFtZXMiOlsicmVuZGVyRWxlbWVudCIsIm5hbWUiLCJ3aXRoS2V5IiwiaXRlcmF0ZSIsImNvbnNvbGUiLCJzb21lIiwicHJvcHMiLCJJbnRlcm5hbF9wcm9wc1dpdGhLZXkiLCJJbnRlcm9wX3JlYWN0QXBpIiwiYXJlRXF1YWwiLCJtZW1vRWxlbWVudFR5cGUiLCJkZWZhdWx0QXJnIiwiZiIsImRpc3Bvc2UiLCJpbml0aWFsaXplciIsInVwZGF0ZSIsImluaXRpYWxTdGF0ZSIsImFyZzAwIiwiZWZmZWN0IiwidXNlRWZmZWN0IiwiZGVwZW5kZW5jaWVzIiwidXNlRWZmZWN0V2l0aERlcHMiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VMYXlvdXRFZmZlY3RXaXRoRGVwcyIsIl9hcmcxIiwiUmVhY3RfY3JlYXRlRGlzcG9zYWJsZV8zQTVCNjQ1NiIsIl9hcmcyIiwiZGlzcG9zZU9wdGlvbiIsIm9wdGlvbiIsImQiLCJjb3B5T2ZTdHJ1Y3QiLCJkaXNwb3NlU2FmZSIsIl9hcmczIiwiX2FyZzQiLCJ2YWx1ZSIsInVzZURlYnVnVmFsdWVXaXRoRm9ybWF0dGVyIiwieCIsImZvcm1hdHRlciIsImNhbGxiYWNrRnVuY3Rpb24iLCJhcmcxMCIsImluaXRpYWxWYWx1ZSIsInVzZVJlYWN0X3VzZVJlZl8xNTA1IiwiY3JlYXRlRnVuY3Rpb24iLCJyZW5kZXIiLCJJbnRlcm5hbF9mdW5jdGlvbkNvbXBvbmVudF9aMUIxNTUzMjkiLCJyZWFjdCIsIkludGVybmFsX21lbW9fWjYwMzYzNkQ4IiwiZGVmYXVsdFZhbHVlIiwiY29udGV4dE9iamVjdCIsImNvbnRleHRWYWx1ZSIsImNoaWxkIiwiY2hpbGRyZW4iLCJjYWxsYmFjayIsImxhc3RSZW5kZXJDYWxsYmFja1JlZiIsImNhbGxiYWNrUmVmIiwidXNlUmVhY3RfdXNlQ2FsbGJhY2tfOTMzNTNFIiwiYXJnIiwiZm9yd2FyZFJlZlR5cGUiLCJyZWYiLCJ0dXBsZWRBcmciLCJwcm9wc09iaiIsIk9iamVjdCIsImR5bmFtaWNJbXBvcnQiLCJvIiwiZmFsbGJhY2siLCJjcmVhdGVIYW5kbGUiLCJpbml0aWFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/Feliz.1.68.0/React.fs.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/Feliz.1.68.0/ReactInterop.js":
/*!**********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/Feliz.1.68.0/ReactInterop.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useEffect\": () => (/* binding */ useEffect),\n/* harmony export */   \"useEffectWithDeps\": () => (/* binding */ useEffectWithDeps),\n/* harmony export */   \"useLayoutEffect\": () => (/* binding */ useLayoutEffect),\n/* harmony export */   \"useLayoutEffectWithDeps\": () => (/* binding */ useLayoutEffectWithDeps),\n/* harmony export */   \"useDebugValue\": () => (/* binding */ useDebugValue)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar useEffect = function useEffect(getDisposable) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    var disposable = getDisposable();\n    return function () {\n      disposable.Dispose();\n    };\n  });\n};\nvar useEffectWithDeps = function useEffectWithDeps(getDisposable, deps) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    var disposable = getDisposable();\n    return function () {\n      disposable.Dispose();\n    };\n  }, deps);\n};\nvar useLayoutEffect = function useLayoutEffect(getDisposable) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(function () {\n    var disposable = getDisposable();\n    return function () {\n      disposable.Dispose();\n    };\n  });\n};\nvar useLayoutEffectWithDeps = function useLayoutEffectWithDeps(getDisposable, deps) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(function () {\n    var disposable = getDisposable();\n    return function () {\n      disposable.Dispose();\n    };\n  }, deps);\n};\nvar useDebugValue = function useDebugValue(value, formatter) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(value, formatter);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL0ZlbGl6LjEuNjguMC9SZWFjdEludGVyb3AuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR3NEO0FBRS9DLElBQU1BLFNBQVMsR0FBRyxTQUFaQSxTQUFTLENBQUdNLGFBQWEsRUFBSTtFQUN0Q0wsZ0RBQWMsQ0FBQyxZQUFNO0lBQ2pCLElBQU1NLFVBQVUsR0FBR0QsYUFBYSxFQUFFO0lBQ2xDLE9BQU8sWUFBTTtNQUNUQyxVQUFVLENBQUNDLE9BQU8sRUFBRTtJQUN4QixDQUFDO0VBQ0wsQ0FBQyxDQUFDO0FBQ04sQ0FBQztBQUVNLElBQU1DLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBaUIsQ0FBSUgsYUFBYSxFQUFFSSxJQUFJLEVBQUs7RUFDdERULGdEQUFjLENBQUMsWUFBTTtJQUNqQixJQUFNTSxVQUFVLEdBQUdELGFBQWEsRUFBRTtJQUNsQyxPQUFPLFlBQU07TUFDVEMsVUFBVSxDQUFDQyxPQUFPLEVBQUU7SUFDeEIsQ0FBQztFQUNMLENBQUMsRUFBRUUsSUFBSSxDQUFDO0FBQ1osQ0FBQztBQUVNLElBQU1SLGVBQWUsR0FBRyxTQUFsQkEsZUFBZSxDQUFHSSxhQUFhLEVBQUk7RUFDNUNILHNEQUFvQixDQUFDLFlBQU07SUFDdkIsSUFBTUksVUFBVSxHQUFHRCxhQUFhLEVBQUU7SUFDbEMsT0FBTyxZQUFNO01BQ1RDLFVBQVUsQ0FBQ0MsT0FBTyxFQUFFO0lBQ3hCLENBQUM7RUFDTCxDQUFDLENBQUM7QUFDTixDQUFDO0FBRU0sSUFBTUcsdUJBQXVCLEdBQUcsU0FBMUJBLHVCQUF1QixDQUFJTCxhQUFhLEVBQUVJLElBQUksRUFBSztFQUM1RFAsc0RBQW9CLENBQUMsWUFBTTtJQUN2QixJQUFNSSxVQUFVLEdBQUdELGFBQWEsRUFBRTtJQUNsQyxPQUFPLFlBQU07TUFDVEMsVUFBVSxDQUFDQyxPQUFPLEVBQUU7SUFDeEIsQ0FBQztFQUNMLENBQUMsRUFBRUUsSUFBSSxDQUFDO0FBQ1osQ0FBQztBQUVNLElBQU1OLGFBQWEsR0FBRyxTQUFoQkEsYUFBYSxDQUFJUSxLQUFLLEVBQUVDLFNBQVM7RUFBQSxPQUFLUixvREFBa0IsQ0FBQ08sS0FBSyxFQUFFQyxTQUFTLENBQUM7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9DbGllbnQvLmZhYmxlL2ZhYmxlX21vZHVsZXMvRmVsaXouMS42OC4wL1JlYWN0SW50ZXJvcC5qcz8yNDc5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgdXNlRWZmZWN0IGFzIHVzZUVmZmVjdFJlYWN0LFxuICAgIHVzZUxheW91dEVmZmVjdCBhcyB1c2VMYXlvdXRFZmZlY3RSZWFjdCxcbiAgICB1c2VEZWJ1Z1ZhbHVlIGFzIHVzZURlYnVnVmFsdWVSZWFjdCB9IGZyb20gJ3JlYWN0J1xuXG5leHBvcnQgY29uc3QgdXNlRWZmZWN0ID0gZ2V0RGlzcG9zYWJsZSA9PiB7XG4gICAgdXNlRWZmZWN0UmVhY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCBkaXNwb3NhYmxlID0gZ2V0RGlzcG9zYWJsZSgpXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBkaXNwb3NhYmxlLkRpc3Bvc2UoKTtcbiAgICAgICAgfVxuICAgIH0pXG59XG5cbmV4cG9ydCBjb25zdCB1c2VFZmZlY3RXaXRoRGVwcyA9IChnZXREaXNwb3NhYmxlLCBkZXBzKSA9PiB7XG4gICAgdXNlRWZmZWN0UmVhY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCBkaXNwb3NhYmxlID0gZ2V0RGlzcG9zYWJsZSgpXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBkaXNwb3NhYmxlLkRpc3Bvc2UoKTtcbiAgICAgICAgfVxuICAgIH0sIGRlcHMpXG59XG5cbmV4cG9ydCBjb25zdCB1c2VMYXlvdXRFZmZlY3QgPSBnZXREaXNwb3NhYmxlID0+IHtcbiAgICB1c2VMYXlvdXRFZmZlY3RSZWFjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpc3Bvc2FibGUgPSBnZXREaXNwb3NhYmxlKClcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIGRpc3Bvc2FibGUuRGlzcG9zZSgpO1xuICAgICAgICB9XG4gICAgfSlcbn1cblxuZXhwb3J0IGNvbnN0IHVzZUxheW91dEVmZmVjdFdpdGhEZXBzID0gKGdldERpc3Bvc2FibGUsIGRlcHMpID0+IHtcbiAgICB1c2VMYXlvdXRFZmZlY3RSZWFjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpc3Bvc2FibGUgPSBnZXREaXNwb3NhYmxlKClcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIGRpc3Bvc2FibGUuRGlzcG9zZSgpO1xuICAgICAgICB9XG4gICAgfSwgZGVwcylcbn1cblxuZXhwb3J0IGNvbnN0IHVzZURlYnVnVmFsdWUgPSAodmFsdWUsIGZvcm1hdHRlcikgPT4gdXNlRGVidWdWYWx1ZVJlYWN0KHZhbHVlLCBmb3JtYXR0ZXIpIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZUVmZmVjdFJlYWN0IiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTGF5b3V0RWZmZWN0UmVhY3QiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRGVidWdWYWx1ZVJlYWN0IiwiZ2V0RGlzcG9zYWJsZSIsImRpc3Bvc2FibGUiLCJEaXNwb3NlIiwidXNlRWZmZWN0V2l0aERlcHMiLCJkZXBzIiwidXNlTGF5b3V0RWZmZWN0V2l0aERlcHMiLCJ2YWx1ZSIsImZvcm1hdHRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/Feliz.1.68.0/ReactInterop.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/Feliz.Router.3.10.0/Router.fs.js":
/*!**************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/Feliz.Router.3.10.0/Router.fs.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RouterModule_String_$007CPrefix$007C\": () => (/* binding */ RouterModule_String_$007CPrefix$007C),\n/* harmony export */   \"RouterModule_String_$007CSuffix$007C\": () => (/* binding */ RouterModule_String_$007CSuffix$007C),\n/* harmony export */   \"RouterModule_encodeQueryString\": () => (/* binding */ RouterModule_encodeQueryString),\n/* harmony export */   \"RouterModule_encodeQueryStringInts\": () => (/* binding */ RouterModule_encodeQueryStringInts),\n/* harmony export */   \"RouterModule_encodeParts\": () => (/* binding */ RouterModule_encodeParts),\n/* harmony export */   \"RouterModule_trySeparateLast\": () => (/* binding */ RouterModule_trySeparateLast),\n/* harmony export */   \"RouterModule_nav\": () => (/* binding */ RouterModule_nav),\n/* harmony export */   \"RouterModule_urlSegments\": () => (/* binding */ RouterModule_urlSegments),\n/* harmony export */   \"RouterModule_onUrlChange\": () => (/* binding */ RouterModule_onUrlChange),\n/* harmony export */   \"RouterModule_router\": () => (/* binding */ RouterModule_router),\n/* harmony export */   \"Route_$007CInt$007C_$007C\": () => (/* binding */ Route_$007CInt$007C_$007C),\n/* harmony export */   \"Route_$007CInt64$007C_$007C\": () => (/* binding */ Route_$007CInt64$007C_$007C),\n/* harmony export */   \"Route_$007CGuid$007C_$007C\": () => (/* binding */ Route_$007CGuid$007C_$007C),\n/* harmony export */   \"Route_$007CNumber$007C_$007C\": () => (/* binding */ Route_$007CNumber$007C_$007C),\n/* harmony export */   \"Route_$007CDecimal$007C_$007C\": () => (/* binding */ Route_$007CDecimal$007C_$007C),\n/* harmony export */   \"Route_$007CBool$007C_$007C\": () => (/* binding */ Route_$007CBool$007C_$007C),\n/* harmony export */   \"Route_$007CQuery$007C_$007C\": () => (/* binding */ Route_$007CQuery$007C_$007C)\n/* harmony export */ });\n/* harmony import */ var _fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fable-library.3.7.2/String.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js\");\n/* harmony import */ var _fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../fable-library.3.7.2/List.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/List.js\");\n/* harmony import */ var _fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fable-library.3.7.2/Array.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js\");\n/* harmony import */ var _Feliz_1_68_0_React_fs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Feliz.1.68.0/React.fs.js */ \"./src/Client/.fable/fable_modules/Feliz.1.68.0/React.fs.js\");\n/* harmony import */ var _fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fable-library.3.7.2/Option.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\");\n/* harmony import */ var _fable_library_3_7_2_Int32_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../fable-library.3.7.2/Int32.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Int32.js\");\n/* harmony import */ var _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../fable-library.3.7.2/Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../fable-library.3.7.2/Long.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Long.js\");\n/* harmony import */ var _fable_library_3_7_2_Guid_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../fable-library.3.7.2/Guid.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Guid.js\");\n/* harmony import */ var _fable_library_3_7_2_Double_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../fable-library.3.7.2/Double.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Double.js\");\n/* harmony import */ var _fable_library_3_7_2_Decimal_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../fable-library.3.7.2/Decimal.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Decimal.js\");\n/* harmony import */ var _fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../fable-library.3.7.2/Seq.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Seq.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction RouterModule_String_$007CPrefix$007C(prefix, str) {\n  if (str.indexOf(prefix) === 0) {\n    return str;\n  } else {\n    return void 0;\n  }\n}\nfunction RouterModule_String_$007CSuffix$007C(suffix, str) {\n  if ((0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_1__.endsWith)(str, suffix)) {\n    return str;\n  } else {\n    return void 0;\n  }\n}\nfunction RouterModule_encodeQueryString(queryStringPairs) {\n  var _arg1 = (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_1__.join)(\"&\", (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.map)(function (tupledArg) {\n    return (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_1__.join)(\"=\", [encodeURIComponent(tupledArg[0]), encodeURIComponent(tupledArg[1])]);\n  }, queryStringPairs));\n  if (_arg1 === \"\") {\n    return \"\";\n  } else {\n    return \"?\" + _arg1;\n  }\n}\nfunction RouterModule_encodeQueryStringInts(queryStringIntPairs) {\n  var _arg1 = (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_1__.join)(\"&\", (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.map)(function (tupledArg) {\n    return (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_1__.join)(\"=\", [encodeURIComponent(tupledArg[0]), tupledArg[1]]);\n  }, queryStringIntPairs));\n  if (_arg1 === \"\") {\n    return \"\";\n  } else {\n    return \"?\" + _arg1;\n  }\n}\nfunction RouterModule_normalizeRoute(routeMode) {\n  if (routeMode === 1) {\n    return function (_arg1) {\n      var activePatternResult11224, path, activePatternResult11225, path_1, activePatternResult11226, path_2;\n      return activePatternResult11224 = RouterModule_String_$007CPrefix$007C(\"/\", _arg1), activePatternResult11224 != null ? (path = activePatternResult11224, \"#\" + path) : (activePatternResult11225 = RouterModule_String_$007CPrefix$007C(\"#/\", _arg1), activePatternResult11225 != null ? (path_1 = activePatternResult11225, path_1) : (activePatternResult11226 = RouterModule_String_$007CPrefix$007C(\"#\", _arg1), activePatternResult11226 != null ? (path_2 = activePatternResult11226, \"#/\" + (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_1__.substring)(path_2, 1, path_2.length - 1)) : \"#/\" + _arg1));\n    };\n  } else {\n    return function (_arg2) {\n      var activePatternResult11234, path_4;\n      return activePatternResult11234 = RouterModule_String_$007CPrefix$007C(\"/\", _arg2), activePatternResult11234 != null ? (path_4 = activePatternResult11234, path_4) : \"/\" + _arg2;\n    };\n  }\n}\nfunction RouterModule_encodeParts(xs, routeMode) {\n  return RouterModule_normalizeRoute(routeMode)((0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_1__.join)(\"/\", (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.map)(function (part) {\n    if ((part.indexOf(\"?\") >= 0 ? true : part.indexOf(\"#\") === 0) ? true : part.indexOf(\"/\") === 0) {\n      return part;\n    } else {\n      return encodeURIComponent(part);\n    }\n  }, xs)));\n}\nfunction RouterModule_trySeparateLast(xs) {\n  var matchValue = (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.reverse)(xs);\n  if (!(0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.isEmpty)(matchValue)) {\n    if ((0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.isEmpty)((0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.tail)(matchValue))) {\n      return [(0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.empty)(), (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.head)(matchValue)];\n    } else {\n      return [(0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.reverse)((0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.tail)(matchValue)), (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.head)(matchValue)];\n    }\n  } else {\n    return void 0;\n  }\n}\nfunction RouterModule_nav(xs, mode, routeMode) {\n  if (mode === 1) {\n    history.pushState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\n  } else {\n    history.replaceState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\n  }\n  var ev = document.createEvent(\"CustomEvent\");\n  ev.initEvent(\"CUSTOM_NAVIGATION_EVENT\", true, true);\n  window.dispatchEvent(ev);\n}\nfunction RouterModule_urlSegments(path, mode) {\n  return (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.collect)(function (segment) {\n    if ((0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_1__.isNullOrWhiteSpace)(segment)) {\n      return (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.empty)();\n    } else {\n      var segment_1 = (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_1__.trimEnd)(segment, \"#\");\n      if (segment_1 === \"?\") {\n        return (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.empty)();\n      } else if (RouterModule_String_$007CPrefix$007C(\"?\", segment_1) != null) {\n        return (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.singleton)(segment_1);\n      } else {\n        var matchValue = segment_1.split(\"?\");\n        if (!(0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_3__.equalsWith)(function (x, y) {\n          return x === y;\n        }, matchValue, null) && matchValue.length === 1) {\n          var value = matchValue[0];\n          return (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.singleton)(decodeURIComponent(value));\n        } else if (!(0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_3__.equalsWith)(function (x_1, y_1) {\n          return x_1 === y_1;\n        }, matchValue, null) && matchValue.length === 2) {\n          if (matchValue[1] === \"\") {\n            var value_1 = matchValue[0];\n            return (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.singleton)(decodeURIComponent(value_1));\n          } else {\n            var value_2 = matchValue[0];\n            var query = matchValue[1];\n            return (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.ofArray)([decodeURIComponent(value_2), \"?\" + query]);\n          }\n        } else {\n          return (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.empty)();\n        }\n      }\n    }\n  }, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_2__.ofArray)((0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_1__.split)(RouterModule_String_$007CPrefix$007C(\"#\", path) != null ? (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_1__.substring)(path, 1, path.length - 1) : mode === 1 ? RouterModule_String_$007CSuffix$007C(\"#\", path) != null ? \"\" : RouterModule_String_$007CSuffix$007C(\"#/\", path) != null ? \"\" : path : path, [\"/\"], null, 0)));\n}\nfunction RouterModule_onUrlChange(routeMode, urlChanged, ev) {\n  return urlChanged(RouterModule_urlSegments(routeMode === 2 ? window.location.pathname + window.location.search : window.location.hash, routeMode));\n}\nvar RouterModule_router = (0,_Feliz_1_68_0_React_fs_js__WEBPACK_IMPORTED_MODULE_0__.React_memo_62A0F746)(function (input) {\n  var onChange = (0,_Feliz_1_68_0_React_fs_js__WEBPACK_IMPORTED_MODULE_0__.useReact_useCallbackRef_7C4B0DD6)(function (ev) {\n    var urlChanged = (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_4__.defaultArg)(input.onUrlChanged, function (value) {});\n    RouterModule_onUrlChange((0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_4__.defaultArg)(input.hashMode, 1), urlChanged, ev);\n  });\n  (0,_Feliz_1_68_0_React_fs_js__WEBPACK_IMPORTED_MODULE_0__.useReact_useEffectOnce_Z5ECA432F)(function () {\n    if (window.navigator.userAgent.indexOf(\"Trident\") >= 0 ? true : window.navigator.userAgent.indexOf(\"MSIE\") >= 0) {\n      window.addEventListener(\"hashchange\", onChange);\n    } else {\n      window.addEventListener(\"popstate\", onChange);\n    }\n    window.addEventListener(\"CUSTOM_NAVIGATION_EVENT\", onChange);\n    return (0,_Feliz_1_68_0_React_fs_js__WEBPACK_IMPORTED_MODULE_0__.React_createDisposable_3A5B6456)(function () {\n      if (window.navigator.userAgent.indexOf(\"Trident\") >= 0 ? true : window.navigator.userAgent.indexOf(\"MSIE\") >= 0) {\n        window.removeEventListener(\"hashchange\", onChange);\n      } else {\n        window.removeEventListener(\"popstate\", onChange);\n      }\n      window.removeEventListener(\"CUSTOM_NAVIGATION_EVENT\", onChange);\n    });\n  });\n  (0,_Feliz_1_68_0_React_fs_js__WEBPACK_IMPORTED_MODULE_0__.useReact_useEffectOnce_3A5B6456)(function () {\n    var ev_1 = document.createEvent(\"CustomEvent\");\n    ev_1.initEvent(\"CUSTOM_NAVIGATION_EVENT\", true, true);\n    window.dispatchEvent(ev_1);\n  });\n  var matchValue = input.application;\n  return matchValue == null ? null : matchValue;\n});\nfunction Route_$007CInt$007C_$007C(input) {\n  var matchValue;\n  var outArg = 0;\n  matchValue = [(0,_fable_library_3_7_2_Int32_js__WEBPACK_IMPORTED_MODULE_5__.tryParse)(input, 511, false, 32, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_6__.FSharpRef(function () {\n    return outArg;\n  }, function (v) {\n    outArg = v | 0;\n  })), outArg];\n  if (matchValue[0]) {\n    return matchValue[1];\n  } else {\n    return void 0;\n  }\n}\nfunction Route_$007CInt64$007C_$007C(input) {\n  var matchValue;\n  var outArg = (0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_7__.fromInt)(0);\n  matchValue = [(0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_7__.tryParse)(input, 511, false, 64, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_6__.FSharpRef(function () {\n    return outArg;\n  }, function (v) {\n    outArg = v;\n  })), outArg];\n  if (matchValue[0]) {\n    return matchValue[1];\n  } else {\n    return void 0;\n  }\n}\nfunction Route_$007CGuid$007C_$007C(input) {\n  var matchValue;\n  var outArg = \"00000000-0000-0000-0000-000000000000\";\n  matchValue = [(0,_fable_library_3_7_2_Guid_js__WEBPACK_IMPORTED_MODULE_8__.tryParse)(input, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_6__.FSharpRef(function () {\n    return outArg;\n  }, function (v) {\n    outArg = v;\n  })), outArg];\n  if (matchValue[0]) {\n    return matchValue[1];\n  } else {\n    return void 0;\n  }\n}\nfunction Route_$007CNumber$007C_$007C(input) {\n  var matchValue;\n  var outArg = 0;\n  matchValue = [(0,_fable_library_3_7_2_Double_js__WEBPACK_IMPORTED_MODULE_9__.tryParse)(input, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_6__.FSharpRef(function () {\n    return outArg;\n  }, function (v) {\n    outArg = v;\n  })), outArg];\n  if (matchValue[0]) {\n    return matchValue[1];\n  } else {\n    return void 0;\n  }\n}\nfunction Route_$007CDecimal$007C_$007C(input) {\n  var matchValue;\n  var outArg = new _fable_library_3_7_2_Decimal_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](0);\n  matchValue = [(0,_fable_library_3_7_2_Decimal_js__WEBPACK_IMPORTED_MODULE_10__.tryParse)(input, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_6__.FSharpRef(function () {\n    return outArg;\n  }, function (v) {\n    outArg = v;\n  })), outArg];\n  if (matchValue[0]) {\n    return matchValue[1];\n  } else {\n    return void 0;\n  }\n}\nfunction Route_$007CBool$007C_$007C(input) {\n  var matchValue = input.toLocaleLowerCase();\n  switch (matchValue) {\n    case \"1\":\n    case \"true\":\n      {\n        return true;\n      }\n    case \"0\":\n    case \"false\":\n      {\n        return false;\n      }\n    case \"\":\n      {\n        return true;\n      }\n    default:\n      {\n        return void 0;\n      }\n  }\n}\nfunction Route_$007CQuery$007C_$007C(input) {\n  try {\n    var urlParams = new URLSearchParams(input);\n    return (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_11__.toList)((0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_11__.delay)(function () {\n      return (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_11__.map)(function (entry) {\n        return [entry[0], entry[1]];\n      }, urlParams.entries());\n    }));\n  } catch (matchValue) {\n    return void 0;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL0ZlbGl6LlJvdXRlci4zLjEwLjAvUm91dGVyLmZzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs4Q0FnQ3dCQSxRQUFpQkM7RUFDN0IsSUFBR0EsWUFBZUQ7V0FBaUJDOztXQUM5Qjs7OzhDQUVPQyxRQUFpQkQ7RUFDN0IsSUFBR0Usd0VBQUFBLE1BQWFEO1dBQWlCRDs7V0FDNUI7Ozt3Q0FrQlNHO01BS2ZDLFFBREFDLG9FQUFBQSxDQUFjLEtBRmRDLGlFQUFBQSxXQUFlQztJQUFBQSxPQUNkRixvRUFBQUEsQ0FBYyxNQUFNRyxtQkFETkQsZUFDOEJDLG1CQUQ5QkQ7RUFBQUEsR0FEbEJKO0VBSUc7V0FDUzs7V0FDRzs7OzRDQUVPTTtNQUtuQkwsUUFEQUMsb0VBQUFBLENBQWMsS0FGZEMsaUVBQUFBLFdBQWVDO0lBQUFBLE9BQ2RGLG9FQUFBQSxDQUFjLE1BQU1HLG1CQURORDtFQUFBQSxHQURsQkU7RUFJRztXQUNTOztXQUNHOzs7cUNBRVFDO0VBQ3ZCLElBQUdBO3FCQUNDTjtVQUNFTywwQkFBd0JDLE1BQ3hCQywwQkFBeUJELFFBQ3pCRSwwQkFBd0JGO2FBRnhCRCxnRUFBYyxLQURoQlAsZ0NBQ0VPLFlBQXdCQyxPQUFMRCwwQkFBYyxNQUFNQyxTQUN2Q0MsZ0VBQWMsTUFGaEJULGdDQUVFUyxZQUF5QkQsU0FBTEMsMEJBQWNELFdBQ2xDRSxnRUFBYyxLQUhoQlYsZ0NBR0VVLFlBQXdCRixTQUFMRSwwQkFBYyxPQUFPQyx5RUFBQUEsU0FBZSxHQUFHQyxnQkFBYyxNQUNoRSxPQUpWWjs7O3FCQU1BYTtVQUNFQywwQkFBd0JOO2FBQXhCTSxnRUFBYyxLQURoQkQsZ0NBQ0VDLFlBQXdCTixTQUFMTSwwQkFBY04sVUFDekIsTUFGVks7Ozs7a0NBSVFFLElBQUdUO1NBQ2ZVLDJCQUtHQyxDQUFlWCxXQS9DRUwsb0VBQUFBLENBQWMsS0EyQy9CQyxpRUFBQUEsV0FBZWdCO0lBQ2QsSUFBRyxjQUFjLFlBQWQsT0FBcUJBLGFBQWdCLGNBQXJDLE9BQTRDQSxhQUFnQjthQUFTQTs7YUFDbkVkLG1CQUFtQmM7O0tBSDVCSDs7c0NBUWdCQTtNQUNWSSxhQUFNQyxxRUFBQUEsQ0FBTkw7RUFBQTtJQUFBLDZJQUVKSTtjQUFtQkUsbUVBQUFBLElBRmZDLGtFQUFBQSxDQUVKSDs7Y0FDbUNDLHFFQUFBQSxDQUFiRyxrRUFBQUEsQ0FIbEJKLGNBR3lDRyxrRUFBQUEsQ0FIekNIOzs7V0FDRTs7OzBCQUlKSixJQUFJUyxNQUFvQmxCO0VBQzVCLElBQUdrQjtJQUNFQyxrQkFBbUIsUUFBSSxJQUFJQyx5QkFBWVgsSUFBR1Q7O0lBQzFDbUIscUJBQXFCLFFBQUksSUFBSUMseUJBQVlYLElBQUdUOztNQUU3Q3FCLEtBQUtDLHFCQUFxQjtFQUU5QkQsYUFBYywyQkFBdUIsTUFBTTtFQUMzQ0UscUJBQXFCRjs7a0NBR1JuQixNQUFlZ0I7U0FhekJNLHFFQUFBQSxXQUFrQkM7SUFDakIsSUFBR0Msa0ZBQUFBLENBQTBCRDthQUFhVixtRUFBQUE7O1VBRWxDVSxZQUFVRSx1RUFBQUEsVUFBZ0I7TUFFeEI7ZUFDR1osbUVBQUFBO2FBQ1AsSUFGSWEsb0NBRUpDLENBQWMsS0FGVko7ZUFFMEJLLHVFQUFBQSxDQUFFTDs7WUFFeEJaLDZCQUFpQjtRQUFqQjtVQUFBO1FBQUE7Y0FDRGtCLFFBQVlsQjtpQkFBQWlCLHVFQUFBQSxDQUFFRSxtQkFBbUJEO2VBRGhDO1VBQUE7UUFBQTtVQUFBO2dCQUVEQSxVQUFnQmxCO21CQUFBaUIsdUVBQUFBLENBQUVFLG1CQUFtQkQ7O2dCQUNyQ0EsVUFBbUJsQjtnQkFBWm9CLFFBQVlwQjttQkFBQXFCLHFFQUFBQSxFQUFFRixtQkFBbUJELFVBQU8sTUFBTUU7OztpQkFDbkRsQixtRUFBQUE7Ozs7S0FkaEJtQixxRUFBQUEsQ0FuRkNDLHFFQUFBQSxDQXdFRVAsb0NBQ0pDLENBQWMsS0FEVjNCLGdCQUdGRyx5RUFBQUEsT0FBZSxHQUFHSCxjQUFjLEtBQzNCZ0IsYUFDQ2tCLG9DQUNKQyxDQUFjLEtBRFZuQyxnQkFFMkIsS0FGM0JrQyxvQ0FFSkMsQ0FBYyxNQUZWbkMsZ0JBRTJCLEtBQzFCQSxPQUNKQSxPQUNTOztrQ0F1QkpGLFdBQVVzQyxZQUFZakI7U0FDbENpQixVQUlHQSxDQURZQyx5QkFIVHZDLGtCQUNjdUIsMkJBQTJCQSx5QkFDeENBLHNCQUN5QnZCOzswQkFHdkJ3Qyw4RUFBQUEsV0FBZ0JDO01BQ3JCQyxXQUFXQywyRkFBQUEsV0FBMEJ0QjtRQUNqQ2lCLGFBQWFNLDBFQUFBQSxDQUEyQkgsOEJBQVBWO0lBRXJDYyx5QkFEZ0JELDBFQUFBQSxDQUFtQ0gsb0JBQzdCSCxZQUFXakI7O0VBR3JDeUIsMkZBQUFBO0lBQ0ksSUFBR3ZCLG1DQUE0QixrQkFBNUIsT0FBeUNBLG1DQUE0QjtNQUNwRUEsd0JBQXdCLGNBQWNtQjs7TUFFdENuQix3QkFBd0IsWUFBWW1COztJQUV4Q25CLHdCQUF3QiwyQkFBdUJtQjtXQUUvQ0ssMEZBQUFBO01BQ0ksSUFBR3hCLG1DQUE0QixrQkFBNUIsT0FBeUNBLG1DQUE0QjtRQUNwRUEsMkJBQTJCLGNBQWNtQjs7UUFFekNuQiwyQkFBMkIsWUFBWW1COztNQUUzQ25CLDJCQUEyQiwyQkFBdUJtQjs7O0VBSzFETSwwRkFBQUE7UUFDUTNCLE9BQUtDLHFCQUFxQjtJQUM5QkQsZUFBYywyQkFBdUIsTUFBTTtJQUMzQ0UscUJBQXFCRjs7TUFHbkJSO1NBQUFBLDRCQUNTQTs7bUNBNHRDSjRCO01BQ0w1QjtNQUFBb0M7RUFBQXBDLGNBQUFBLHVFQUFBQSxDQUFlNEIsMkJBQUFBLG9FQUFBQTtJQUFBQSxPQUFmUTtFQUFBQTtJQUFBQTtPQUFBQTtFQUFBO1dBQ1dwQzs7V0FDVjs7O3FDQUVNNEI7TUFDUDVCO01BQUFvQyxTQUFBQSxxRUFBQUE7RUFBQXBDLGNBQUFBLHNFQUFBQSxDQUFlNEIsMkJBQUFBLG9FQUFBQTtJQUFBQSxPQUFmUTtFQUFBQTtJQUFBQTtPQUFBQTtFQUFBO1dBQ1dwQzs7V0FDVjs7O29DQUVLNEI7TUFDTjVCO01BQUFvQztFQUFBcEMsY0FBQUEsc0VBQUFBLENBQWM0QixXQUFBQSxvRUFBQUE7SUFBQUEsT0FBZFE7RUFBQUE7SUFBQUE7T0FBQUE7RUFBQTtXQUNXcEM7O1dBQ1Y7OztzQ0FFTzRCO01BQ1I1QjtNQUFBb0M7RUFBQXBDLGNBQUFBLHdFQUFBQSxDQUFnQjRCLFdBQUFBLG9FQUFBQTtJQUFBQSxPQUFoQlE7RUFBQUE7SUFBQUE7T0FBQUE7RUFBQTtXQUNXcEM7O1dBQ1Y7Ozt1Q0FFUTRCO01BQ1Q1QjtNQUFBb0MsYUFBQUEsd0VBQUFBO0VBQUFwQyxjQUFBQSwwRUFBQUEsQ0FBaUI0QixXQUFBQSxvRUFBQUE7SUFBQUEsT0FBakJRO0VBQUFBO0lBQUFBO09BQUFBO0VBQUE7V0FDV3BDOztXQUNWOzs7b0NBRUs0QjtNQUNONUI7VUFBQUE7U0FBQTtTQUFBO01BQUE7ZUFDa0I7O1NBRGxCO1NBQUE7TUFBQTtlQUVrQjs7U0FGbEI7TUFBQTtlQUdPOzs7O2VBQ047Ozs7cUNBZU00QjtFQUNiO1FBQ1FTLFlBQVksb0JBQTZCVDtXQUN4Q1Usb0VBQUFBLENBQUVDLG1FQUFBQTtNQUFBLG1GQUFJQztRQUFBQSxRQUFnQ0EsTUFBTyxJQUFJQSxNQUFPO01BQUEsR0FBekNIO0lBQUFBO1dBQ3hCckM7V0FDTyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL1JvdXRlci5mcz9mOWUyIl0sIm5hbWVzIjpbInByZWZpeCIsInN0ciIsInN1ZmZpeCIsImVuZHNXaXRoIiwicXVlcnlTdHJpbmdQYWlycyIsIl9hcmcxIiwiam9pbiIsIm1hcCIsInR1cGxlZEFyZyIsImVuY29kZVVSSUNvbXBvbmVudCIsInF1ZXJ5U3RyaW5nSW50UGFpcnMiLCJyb3V0ZU1vZGUiLCJhY3RpdmVQYXR0ZXJuUmVzdWx0MTEyMjQiLCJwYXRoIiwiYWN0aXZlUGF0dGVyblJlc3VsdDExMjI1IiwiYWN0aXZlUGF0dGVyblJlc3VsdDExMjI2Iiwic3Vic3RyaW5nIiwicGF0aF8yIiwiX2FyZzIiLCJhY3RpdmVQYXR0ZXJuUmVzdWx0MTEyMzQiLCJ4cyIsIlJvdXRlck1vZHVsZV9ub3JtYWxpemVSb3V0ZSIsIm5vcm1hbGl6ZVJvdXRlIiwicGFydCIsIm1hdGNoVmFsdWUiLCJyZXZlcnNlIiwiZW1wdHkiLCJoZWFkIiwidGFpbCIsIm1vZGUiLCJoaXN0b3J5IiwiUm91dGVyTW9kdWxlX2VuY29kZVBhcnRzIiwiZXYiLCJkb2N1bWVudCIsIndpbmRvdyIsImNvbGxlY3QiLCJzZWdtZW50IiwiaXNOdWxsT3JXaGl0ZVNwYWNlIiwidHJpbUVuZCIsIlJvdXRlck1vZHVsZV9TdHJpbmdfJDAwN0NQcmVmaXgkMDA3QyIsIih8UHJlZml4fCkiLCJzaW5nbGV0b24iLCJ2YWx1ZSIsImRlY29kZVVSSUNvbXBvbmVudCIsInF1ZXJ5Iiwib2ZBcnJheSIsInNwbGl0IiwiUm91dGVyTW9kdWxlX1N0cmluZ18kMDA3Q1N1ZmZpeCQwMDdDIiwiKHxTdWZmaXh8KSIsInVybENoYW5nZWQiLCJSb3V0ZXJNb2R1bGVfdXJsU2VnbWVudHMiLCJSZWFjdF9tZW1vXzYyQTBGNzQ2IiwiaW5wdXQiLCJvbkNoYW5nZSIsInVzZVJlYWN0X3VzZUNhbGxiYWNrUmVmXzdDNEIwREQ2IiwiZGVmYXVsdEFyZyIsIm9uVXJsQ2hhbmdlIiwidXNlUmVhY3RfdXNlRWZmZWN0T25jZV9aNUVDQTQzMkYiLCJSZWFjdF9jcmVhdGVEaXNwb3NhYmxlXzNBNUI2NDU2IiwidXNlUmVhY3RfdXNlRWZmZWN0T25jZV8zQTVCNjQ1NiIsIm91dEFyZyIsInVybFBhcmFtcyIsInRvTGlzdCIsImRlbGF5IiwiZW50cnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/Feliz.Router.3.10.0/Router.fs.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/Thoth.Json.9.0.0/Decode.fs.js":
/*!***********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/Thoth.Json.9.0.0/Decode.fs.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Helpers_isUndefined\": () => (/* binding */ Helpers_isUndefined),\n/* harmony export */   \"fromValue\": () => (/* binding */ fromValue),\n/* harmony export */   \"fromString\": () => (/* binding */ fromString),\n/* harmony export */   \"unsafeFromString\": () => (/* binding */ unsafeFromString),\n/* harmony export */   \"decodeValue\": () => (/* binding */ decodeValue),\n/* harmony export */   \"decodeString\": () => (/* binding */ decodeString),\n/* harmony export */   \"string\": () => (/* binding */ string),\n/* harmony export */   \"char\": () => (/* binding */ _char),\n/* harmony export */   \"guid\": () => (/* binding */ guid),\n/* harmony export */   \"unit\": () => (/* binding */ unit),\n/* harmony export */   \"sbyte\": () => (/* binding */ sbyte),\n/* harmony export */   \"byte\": () => (/* binding */ _byte),\n/* harmony export */   \"int16\": () => (/* binding */ int16),\n/* harmony export */   \"uint16\": () => (/* binding */ uint16),\n/* harmony export */   \"int\": () => (/* binding */ _int),\n/* harmony export */   \"uint32\": () => (/* binding */ uint32),\n/* harmony export */   \"int64\": () => (/* binding */ int64),\n/* harmony export */   \"uint64\": () => (/* binding */ uint64),\n/* harmony export */   \"bigint\": () => (/* binding */ bigint),\n/* harmony export */   \"bool\": () => (/* binding */ bool),\n/* harmony export */   \"float\": () => (/* binding */ _float),\n/* harmony export */   \"float32\": () => (/* binding */ float32),\n/* harmony export */   \"decimal\": () => (/* binding */ decimal),\n/* harmony export */   \"datetime\": () => (/* binding */ datetime),\n/* harmony export */   \"datetimeUtc\": () => (/* binding */ datetimeUtc),\n/* harmony export */   \"datetimeLocal\": () => (/* binding */ datetimeLocal),\n/* harmony export */   \"datetimeOffset\": () => (/* binding */ datetimeOffset),\n/* harmony export */   \"timespan\": () => (/* binding */ timespan),\n/* harmony export */   \"optional\": () => (/* binding */ optional),\n/* harmony export */   \"optionalAt\": () => (/* binding */ optionalAt),\n/* harmony export */   \"field\": () => (/* binding */ field),\n/* harmony export */   \"at\": () => (/* binding */ at),\n/* harmony export */   \"index\": () => (/* binding */ index),\n/* harmony export */   \"option\": () => (/* binding */ option),\n/* harmony export */   \"list\": () => (/* binding */ list),\n/* harmony export */   \"seq\": () => (/* binding */ seq),\n/* harmony export */   \"array\": () => (/* binding */ array),\n/* harmony export */   \"keys\": () => (/* binding */ keys),\n/* harmony export */   \"keyValuePairs\": () => (/* binding */ keyValuePairs),\n/* harmony export */   \"oneOf\": () => (/* binding */ oneOf),\n/* harmony export */   \"nil\": () => (/* binding */ nil),\n/* harmony export */   \"value\": () => (/* binding */ value),\n/* harmony export */   \"succeed\": () => (/* binding */ succeed),\n/* harmony export */   \"fail\": () => (/* binding */ fail),\n/* harmony export */   \"andThen\": () => (/* binding */ andThen),\n/* harmony export */   \"all\": () => (/* binding */ all),\n/* harmony export */   \"map\": () => (/* binding */ map),\n/* harmony export */   \"map2\": () => (/* binding */ map2),\n/* harmony export */   \"map3\": () => (/* binding */ map3),\n/* harmony export */   \"map4\": () => (/* binding */ map4),\n/* harmony export */   \"map5\": () => (/* binding */ map5),\n/* harmony export */   \"map6\": () => (/* binding */ map6),\n/* harmony export */   \"map7\": () => (/* binding */ map7),\n/* harmony export */   \"map8\": () => (/* binding */ map8),\n/* harmony export */   \"andMap\": () => (/* binding */ andMap),\n/* harmony export */   \"Getters$1\": () => (/* binding */ Getters$1),\n/* harmony export */   \"Getters$1$reflection\": () => (/* binding */ Getters$1$reflection),\n/* harmony export */   \"Getters$1_$ctor_4A51B60E\": () => (/* binding */ Getters$1_$ctor_4A51B60E),\n/* harmony export */   \"Getters$1__get_Errors\": () => (/* binding */ Getters$1__get_Errors),\n/* harmony export */   \"object\": () => (/* binding */ object),\n/* harmony export */   \"tuple2\": () => (/* binding */ tuple2),\n/* harmony export */   \"tuple3\": () => (/* binding */ tuple3),\n/* harmony export */   \"tuple4\": () => (/* binding */ tuple4),\n/* harmony export */   \"tuple5\": () => (/* binding */ tuple5),\n/* harmony export */   \"tuple6\": () => (/* binding */ tuple6),\n/* harmony export */   \"tuple7\": () => (/* binding */ tuple7),\n/* harmony export */   \"tuple8\": () => (/* binding */ tuple8),\n/* harmony export */   \"dict\": () => (/* binding */ dict),\n/* harmony export */   \"map$0027\": () => (/* binding */ map$0027),\n/* harmony export */   \"Auto\": () => (/* binding */ Auto),\n/* harmony export */   \"Auto$reflection\": () => (/* binding */ Auto$reflection),\n/* harmony export */   \"Auto_generateBoxedDecoderCached_79988AEF\": () => (/* binding */ Auto_generateBoxedDecoderCached_79988AEF),\n/* harmony export */   \"Auto_generateBoxedDecoder_79988AEF\": () => (/* binding */ Auto_generateBoxedDecoder_79988AEF)\n/* harmony export */ });\n/* harmony import */ var _fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../fable-library.3.7.2/String.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js\");\n/* harmony import */ var _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fable-library.3.7.2/Choice.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Choice.js\");\n/* harmony import */ var _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Types.fs.js */ \"./src/Client/.fable/fable_modules/Thoth.Json.9.0.0/Types.fs.js\");\n/* harmony import */ var _fable_library_3_7_2_Guid_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fable-library.3.7.2/Guid.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Guid.js\");\n/* harmony import */ var _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fable-library.3.7.2/Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _fable_library_3_7_2_Int32_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../fable-library.3.7.2/Int32.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Int32.js\");\n/* harmony import */ var _fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../fable-library.3.7.2/Long.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Long.js\");\n/* harmony import */ var _fable_library_3_7_2_BigInt_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../fable-library.3.7.2/BigInt.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/BigInt.js\");\n/* harmony import */ var _fable_library_3_7_2_Decimal_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../fable-library.3.7.2/Decimal.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Decimal.js\");\n/* harmony import */ var _fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../fable-library.3.7.2/Date.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Date.js\");\n/* harmony import */ var _fable_library_3_7_2_DateOffset_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../fable-library.3.7.2/DateOffset.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/DateOffset.js\");\n/* harmony import */ var _fable_library_3_7_2_TimeSpan_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../fable-library.3.7.2/TimeSpan.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/TimeSpan.js\");\n/* harmony import */ var _fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../fable-library.3.7.2/Option.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\");\n/* harmony import */ var _fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../fable-library.3.7.2/List.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/List.js\");\n/* harmony import */ var _fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../fable-library.3.7.2/Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../fable-library.3.7.2/Array.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js\");\n/* harmony import */ var _fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../fable-library.3.7.2/Seq.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Seq.js\");\n/* harmony import */ var _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../fable-library.3.7.2/Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _fable_library_3_7_2_Map_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../fable-library.3.7.2/Map.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Map.js\");\n/* harmony import */ var _fable_library_3_7_2_Set_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../fable-library.3.7.2/Set.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Set.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction Helpers_isUndefined(o) {\n  return typeof o === \"undefined\";\n}\nfunction genericMsg(msg, value_1, newLine) {\n  try {\n    return \"Expecting \" + msg + \" but instead got:\" + (newLine ? \"\\n\" : \" \") + (JSON.stringify(value_1, null, 4) + '');\n  } catch (matchValue) {\n    return \"Expecting \" + msg + \" but decoder failed. Couldn't report given value due to circular structure.\" + (newLine ? \"\\n\" : \" \");\n  }\n}\nfunction errorToString(path, error) {\n  var reason_1 = error.tag === 2 ? genericMsg(error.fields[0], error.fields[1], true) : error.tag === 1 ? genericMsg(error.fields[0], error.fields[1], false) + \"\\nReason: \" + error.fields[2] : error.tag === 3 ? genericMsg(error.fields[0], error.fields[1], true) : error.tag === 4 ? genericMsg(error.fields[0], error.fields[1], true) + (\"\\nNode `\" + error.fields[2] + \"` is unkown.\") : error.tag === 5 ? \"Expecting \" + error.fields[0] + \".\\n\" + (JSON.stringify(error.fields[1], null, 4) + '') : error.tag === 7 ? \"The following errors were found:\\n\\n\" + (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_0__.join)(\"\\n\\n\", error.fields[0]) : error.tag === 6 ? \"The following `failure` occurred with the decoder: \" + error.fields[0] : genericMsg(error.fields[0], error.fields[1], false);\n  if (error.tag === 7) {\n    return reason_1;\n  } else {\n    return \"Error at: `\" + path + \"`\\n\" + reason_1;\n  }\n}\nfunction fromValue(path, decoder, value_1) {\n  var matchValue = decoder(path, value_1);\n  if (matchValue.tag === 1) {\n    var error = matchValue.fields[0];\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, errorToString(error[0], error[1]));\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue.fields[0]);\n  }\n}\nfunction fromString(decoder, value_1) {\n  try {\n    return fromValue(\"$\", decoder, JSON.parse(value_1));\n  } catch (matchValue) {\n    if (matchValue instanceof SyntaxError) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, \"Given an invalid JSON: \" + matchValue.message);\n    } else {\n      throw matchValue;\n    }\n  }\n}\nfunction unsafeFromString(decoder, value_1) {\n  var matchValue = fromString(decoder, value_1);\n  if (matchValue.tag === 1) {\n    throw new Error(matchValue.fields[0]);\n  } else {\n    return matchValue.fields[0];\n  }\n}\nfunction decodeValue(path, decoder) {\n  var decoder_1 = decoder;\n  return function (value_1) {\n    return fromValue(path, decoder_1, value_1);\n  };\n}\nfunction decodeString(decoder) {\n  var decoder_1 = decoder;\n  return function (value_1) {\n    return fromString(decoder_1, value_1);\n  };\n}\nfunction string(path, value_1) {\n  if (typeof value_1 === \"string\") {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, value_1);\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a string\", value_1)]);\n  }\n}\nfunction _char(path, value_1) {\n  if (typeof value_1 === \"string\") {\n    var str = value_1;\n    if (str.length === 1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, str[0]);\n    } else {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a single character string\", value_1)]);\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a char\", value_1)]);\n  }\n}\n\nfunction guid(path, value_1) {\n  if (typeof value_1 === \"string\") {\n    var matchValue;\n    var outArg = \"00000000-0000-0000-0000-000000000000\";\n    matchValue = [(0,_fable_library_3_7_2_Guid_js__WEBPACK_IMPORTED_MODULE_3__.tryParse)(value_1, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]);\n    } else {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a guid\", value_1)]);\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a guid\", value_1)]);\n  }\n}\nfunction unit(path, value_1) {\n  if (value_1 == null) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, void 0);\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"null\", value_1)]);\n  }\n}\nvar sbyte = function sbyte(path) {\n  return function (value_2) {\n    var value_1_1, matchValue, outArg;\n    var name_1 = \"a sbyte\";\n    var path_1 = path;\n    var value_3 = value_2;\n    return typeof value_3 === \"number\" ? (value_1_1 = value_3, isFinite(value_1_1) && Math.floor(value_1_1) === value_1_1 ? -128 <= value_1_1 && value_1_1 <= 127 ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (value_1_1 + 0x80 & 0xFF) - 0x80) : function (arg0) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value was either too large or too small for \" + name_1)]) : function (arg0_1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_1);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value is not an integral value\")])) : typeof value_3 === \"string\" ? (matchValue = (outArg = 0, [(0,_fable_library_3_7_2_Int32_js__WEBPACK_IMPORTED_MODULE_5__.tryParse)(value_3, 511, false, 8, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v | 0;\n    })), outArg]), matchValue[0] ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]) : function (arg0_2) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_2);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)])) : function (arg0_3) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_3);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)]);\n  };\n};\nvar _byte = function _byte(path) {\n  return function (value_2) {\n    var value_1_1, matchValue, outArg;\n    var name_1 = \"a byte\";\n    var path_1 = path;\n    var value_3 = value_2;\n    return typeof value_3 === \"number\" ? (value_1_1 = value_3, isFinite(value_1_1) && Math.floor(value_1_1) === value_1_1 ? 0 <= value_1_1 && value_1_1 <= 255 ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, value_1_1 & 0xFF) : function (arg0) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value was either too large or too small for \" + name_1)]) : function (arg0_1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_1);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value is not an integral value\")])) : typeof value_3 === \"string\" ? (matchValue = (outArg = 0, [(0,_fable_library_3_7_2_Int32_js__WEBPACK_IMPORTED_MODULE_5__.tryParse)(value_3, 511, true, 8, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v;\n    })), outArg]), matchValue[0] ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]) : function (arg0_2) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_2);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)])) : function (arg0_3) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_3);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)]);\n  };\n};\n\nvar int16 = function int16(path) {\n  return function (value_2) {\n    var value_1_1, matchValue, outArg;\n    var name_1 = \"an int16\";\n    var path_1 = path;\n    var value_3 = value_2;\n    return typeof value_3 === \"number\" ? (value_1_1 = value_3, isFinite(value_1_1) && Math.floor(value_1_1) === value_1_1 ? -32768 <= value_1_1 && value_1_1 <= 32767 ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (value_1_1 + 0x8000 & 0xFFFF) - 0x8000) : function (arg0) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value was either too large or too small for \" + name_1)]) : function (arg0_1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_1);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value is not an integral value\")])) : typeof value_3 === \"string\" ? (matchValue = (outArg = 0, [(0,_fable_library_3_7_2_Int32_js__WEBPACK_IMPORTED_MODULE_5__.tryParse)(value_3, 511, false, 16, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v | 0;\n    })), outArg]), matchValue[0] ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]) : function (arg0_2) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_2);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)])) : function (arg0_3) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_3);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)]);\n  };\n};\nvar uint16 = function uint16(path) {\n  return function (value_2) {\n    var value_1_1, matchValue, outArg;\n    var name_1 = \"an uint16\";\n    var path_1 = path;\n    var value_3 = value_2;\n    return typeof value_3 === \"number\" ? (value_1_1 = value_3, isFinite(value_1_1) && Math.floor(value_1_1) === value_1_1 ? 0 <= value_1_1 && value_1_1 <= 65535 ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, value_1_1 & 0xFFFF) : function (arg0) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value was either too large or too small for \" + name_1)]) : function (arg0_1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_1);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value is not an integral value\")])) : typeof value_3 === \"string\" ? (matchValue = (outArg = 0, [(0,_fable_library_3_7_2_Int32_js__WEBPACK_IMPORTED_MODULE_5__.tryParse)(value_3, 511, true, 16, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v;\n    })), outArg]), matchValue[0] ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]) : function (arg0_2) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_2);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)])) : function (arg0_3) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_3);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)]);\n  };\n};\nvar _int = function _int(path) {\n  return function (value_2) {\n    var value_1_1, matchValue, outArg;\n    var name_1 = \"an int\";\n    var path_1 = path;\n    var value_3 = value_2;\n    return typeof value_3 === \"number\" ? (value_1_1 = value_3, isFinite(value_1_1) && Math.floor(value_1_1) === value_1_1 ? -2147483648 <= value_1_1 && value_1_1 <= 2147483647 ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, ~~value_1_1) : function (arg0) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value was either too large or too small for \" + name_1)]) : function (arg0_1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_1);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value is not an integral value\")])) : typeof value_3 === \"string\" ? (matchValue = (outArg = 0, [(0,_fable_library_3_7_2_Int32_js__WEBPACK_IMPORTED_MODULE_5__.tryParse)(value_3, 511, false, 32, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v | 0;\n    })), outArg]), matchValue[0] ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]) : function (arg0_2) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_2);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)])) : function (arg0_3) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_3);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)]);\n  };\n};\n\nvar uint32 = function uint32(path) {\n  return function (value_2) {\n    var value_1_1, matchValue, outArg;\n    var name_1 = \"an uint32\";\n    var path_1 = path;\n    var value_3 = value_2;\n    return typeof value_3 === \"number\" ? (value_1_1 = value_3, isFinite(value_1_1) && Math.floor(value_1_1) === value_1_1 ? 0 <= value_1_1 && value_1_1 <= 4294967295 ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, value_1_1 >>> 0) : function (arg0) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value was either too large or too small for \" + name_1)]) : function (arg0_1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_1);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value is not an integral value\")])) : typeof value_3 === \"string\" ? (matchValue = (outArg = 0, [(0,_fable_library_3_7_2_Int32_js__WEBPACK_IMPORTED_MODULE_5__.tryParse)(value_3, 511, true, 32, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v;\n    })), outArg]), matchValue[0] ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]) : function (arg0_2) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_2);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)])) : function (arg0_3) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_3);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)]);\n  };\n};\nvar int64 = function int64(path) {\n  return function (value_2) {\n    var value_1_1, matchValue, outArg;\n    var name_1 = \"an int64\";\n    var path_1 = path;\n    var value_3 = value_2;\n    return typeof value_3 === \"number\" ? (value_1_1 = value_3, isFinite(value_1_1) && Math.floor(value_1_1) === value_1_1 ? (0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.toNumber)((0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.fromBits)(0, 2147483648, false)) <= value_1_1 && value_1_1 <= (0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.toNumber)((0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.fromBits)(4294967295, 2147483647, false)) ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.fromNumber)(value_1_1, false)) : function (arg0) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value was either too large or too small for \" + name_1)]) : function (arg0_1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_1);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value is not an integral value\")])) : typeof value_3 === \"string\" ? (matchValue = (outArg = (0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.fromInt)(0), [(0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.tryParse)(value_3, 511, false, 64, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v;\n    })), outArg]), matchValue[0] ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]) : function (arg0_2) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_2);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)])) : function (arg0_3) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_3);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)]);\n  };\n};\nvar uint64 = function uint64(path) {\n  return function (value_2) {\n    var value_1_1, matchValue, outArg;\n    var name_1 = \"an uint64\";\n    var path_1 = path;\n    var value_3 = value_2;\n    return typeof value_3 === \"number\" ? (value_1_1 = value_3, isFinite(value_1_1) && Math.floor(value_1_1) === value_1_1 ? (0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.toNumber)((0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.fromBits)(0, 0, true)) <= value_1_1 && value_1_1 <= (0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.toNumber)((0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.fromBits)(4294967295, 4294967295, true)) ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.fromNumber)(value_1_1, true)) : function (arg0) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value was either too large or too small for \" + name_1)]) : function (arg0_1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_1);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, name_1, value_1_1, \"Value is not an integral value\")])) : typeof value_3 === \"string\" ? (matchValue = (outArg = (0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.fromInt)(0), [(0,_fable_library_3_7_2_Long_js__WEBPACK_IMPORTED_MODULE_6__.tryParse)(value_3, 511, true, 64, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v;\n    })), outArg]), matchValue[0] ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]) : function (arg0_2) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_2);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)])) : function (arg0_3) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, arg0_3);\n    }([path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, name_1, value_3)]);\n  };\n};\nfunction bigint(path, value_1) {\n  if (typeof value_1 === \"number\") {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_BigInt_js__WEBPACK_IMPORTED_MODULE_7__.fromInt32)(value_1));\n  } else if (typeof value_1 === \"string\") {\n    try {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_BigInt_js__WEBPACK_IMPORTED_MODULE_7__.parse)(value_1));\n    } catch (matchValue) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a bigint\", value_1)]);\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a bigint\", value_1)]);\n  }\n}\nfunction bool(path, value_1) {\n  if (typeof value_1 === \"boolean\") {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, value_1);\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a boolean\", value_1)]);\n  }\n}\nfunction _float(path, value_1) {\n  if (typeof value_1 === \"number\") {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, value_1);\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a float\", value_1)]);\n  }\n}\n\nfunction float32(path, value_1) {\n  if (typeof value_1 === \"number\") {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, value_1);\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a float32\", value_1)]);\n  }\n}\nfunction decimal(path, value_1) {\n  if (typeof value_1 === \"number\") {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, new _fable_library_3_7_2_Decimal_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"](value_1));\n  } else if (typeof value_1 === \"string\") {\n    var matchValue;\n    var outArg = new _fable_library_3_7_2_Decimal_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"](0);\n    matchValue = [(0,_fable_library_3_7_2_Decimal_js__WEBPACK_IMPORTED_MODULE_8__.tryParse)(value_1, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]);\n    } else {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a decimal\", value_1)]);\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a decimal\", value_1)]);\n  }\n}\nfunction datetime(path, value_1) {\n  if (typeof value_1 === \"string\") {\n    var matchValue;\n    var outArg = (0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_9__.minValue)();\n    matchValue = [(0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_9__.tryParse)(value_1, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_9__.toUniversalTime)(matchValue[1]));\n    } else {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a datetime\", value_1)]);\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a datetime\", value_1)]);\n  }\n}\nfunction datetimeUtc(path, value_1) {\n  if (typeof value_1 === \"string\") {\n    var matchValue;\n    var outArg = (0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_9__.minValue)();\n    matchValue = [(0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_9__.tryParse)(value_1, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_9__.toUniversalTime)(matchValue[1]));\n    } else {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a datetime\", value_1)]);\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a datetime\", value_1)]);\n  }\n}\nfunction datetimeLocal(path, value_1) {\n  if (typeof value_1 === \"string\") {\n    var matchValue;\n    var outArg = (0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_9__.minValue)();\n    matchValue = [(0,_fable_library_3_7_2_Date_js__WEBPACK_IMPORTED_MODULE_9__.tryParse)(value_1, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]);\n    } else {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a datetime\", value_1)]);\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a datetime\", value_1)]);\n  }\n}\nfunction datetimeOffset(path, value_1) {\n  if (typeof value_1 === \"string\") {\n    var matchValue;\n    var outArg = (0,_fable_library_3_7_2_DateOffset_js__WEBPACK_IMPORTED_MODULE_10__.minValue)();\n    matchValue = [(0,_fable_library_3_7_2_DateOffset_js__WEBPACK_IMPORTED_MODULE_10__.tryParse)(value_1, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]);\n    } else {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a datetimeoffset\", value_1)]);\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a datetime\", value_1)]);\n  }\n}\nfunction timespan(path, value_1) {\n  if (typeof value_1 === \"string\") {\n    var matchValue;\n    var outArg = 0;\n    matchValue = [(0,_fable_library_3_7_2_TimeSpan_js__WEBPACK_IMPORTED_MODULE_11__.tryParse)(value_1, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(function () {\n      return outArg;\n    }, function (v) {\n      outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue[1]);\n    } else {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a timespan\", value_1)]);\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a timespan\", value_1)]);\n  }\n}\nfunction decodeMaybeNull(path, decoder, value_1) {\n  var matchValue = decoder(path, value_1);\n  if (matchValue.tag === 1) {\n    if (value_1 == null) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, void 0);\n    } else if (matchValue.tag === 1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue.fields[0]);\n    } else {\n      throw new Error(\"Match failure\");\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_12__.some)(matchValue.fields[0]));\n  }\n}\nfunction optional(fieldName, decoder, path, value_1) {\n  if (value_1 === null ? false : Object.getPrototypeOf(value_1 || false) === Object.prototype) {\n    var fieldValue = value_1[fieldName];\n    if (Helpers_isUndefined(fieldValue)) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, void 0);\n    } else {\n      return decodeMaybeNull(path + \".\" + fieldName, decoder, fieldValue);\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(2, \"an object\", value_1)]);\n  }\n}\nfunction badPathError(fieldNames, currentPath, value_1) {\n  return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [(0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_12__.defaultArg)(currentPath, (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_0__.join)(\".\", (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.cons)(\"$\", fieldNames))), new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(4, \"an object with path `\" + (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_0__.join)(\".\", fieldNames) + \"`\", value_1, (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_12__.defaultArg)((0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.tryLast)(fieldNames), \"\"))]);\n}\nfunction optionalAt(fieldNames, decoder, firstPath, firstValue) {\n  var _arg1 = (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.fold)((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, function (tupledArg) {\n    var curPath = tupledArg[0];\n    var curValue = tupledArg[1];\n    var res = tupledArg[2];\n    return function (field_1) {\n      return res == null ? curValue == null ? [curPath, curValue, new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, void 0)] : (curValue === null ? false : Object.getPrototypeOf(curValue || false) === Object.prototype) ? [curPath + \".\" + field_1, curValue[field_1], void 0] : [curPath, curValue, new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [curPath, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(2, \"an object\", curValue)])] : [curPath, curValue, res];\n    };\n  }), [firstPath, firstValue, void 0], fieldNames);\n  if (_arg1[2] == null) {\n    var lastValue = _arg1[1];\n    if (Helpers_isUndefined(lastValue)) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, void 0);\n    } else {\n      return decodeMaybeNull(_arg1[0], decoder, lastValue);\n    }\n  } else {\n    return _arg1[2];\n  }\n}\nfunction field(fieldName, decoder, path, value_1) {\n  if (value_1 === null ? false : Object.getPrototypeOf(value_1 || false) === Object.prototype) {\n    var fieldValue = value_1[fieldName];\n    if (Helpers_isUndefined(fieldValue)) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(3, \"an object with a field named `\" + fieldName + \"`\", value_1)]);\n    } else {\n      return decoder(path + \".\" + fieldName, fieldValue);\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(2, \"an object\", value_1)]);\n  }\n}\nfunction at(fieldNames, decoder, firstPath, firstValue) {\n  var _arg1 = (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.fold)((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, function (tupledArg) {\n    var curPath = tupledArg[0];\n    var curValue = tupledArg[1];\n    var res = tupledArg[2];\n    return function (field_1) {\n      if (res == null) {\n        if (curValue == null) {\n          return [curPath, curValue, badPathError(fieldNames, curPath, firstValue)];\n        } else if (curValue === null ? false : Object.getPrototypeOf(curValue || false) === Object.prototype) {\n          var curValue_1 = curValue[field_1];\n          return Helpers_isUndefined(curValue_1) ? [curPath, curValue_1, badPathError(fieldNames, void 0, firstValue)] : [curPath + \".\" + field_1, curValue_1, void 0];\n        } else {\n          return [curPath, curValue, new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [curPath, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(2, \"an object\", curValue)])];\n        }\n      } else {\n        return [curPath, curValue, res];\n      }\n    };\n  }), [firstPath, firstValue, void 0], fieldNames);\n  if (_arg1[2] == null) {\n    return decoder(_arg1[0], _arg1[1]);\n  } else {\n    return _arg1[2];\n  }\n}\nfunction index(requestedIndex, decoder, path, value_1) {\n  var copyOfStruct;\n  var currentPath = path + \".[\" + (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.int32ToString)(requestedIndex) + \"]\";\n  if (Array.isArray(value_1)) {\n    var vArray = value_1;\n    if (requestedIndex < vArray.length) {\n      return decoder(currentPath, vArray[requestedIndex]);\n    } else {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [currentPath, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(5, \"a longer array. Need index `\" + (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.int32ToString)(requestedIndex) + \"` but there are only `\" + (copyOfStruct = vArray.length, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.int32ToString)(copyOfStruct)) + \"` entries\", value_1)]);\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [currentPath, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"an array\", value_1)]);\n  }\n}\nfunction option(decoder, path, value_1) {\n  if (value_1 == null) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, void 0);\n  } else {\n    return (0,_fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.Result_Map)(_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_12__.some, decoder(path, value_1));\n  }\n}\nfunction list(decoder, path, value_1) {\n  if (Array.isArray(value_1)) {\n    var i = -1;\n    return (0,_fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.Result_Map)(_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.reverse, (0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_15__.fold)(function (acc, value_2) {\n      i = i + 1 | 0;\n      if (acc.tag === 0) {\n        var matchValue = decoder(path + \".[\" + (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.int32ToString)(i) + \"]\", value_2);\n        if (matchValue.tag === 0) {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.cons)(matchValue.fields[0], acc.fields[0]));\n        } else {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue.fields[0]);\n        }\n      } else {\n        return acc;\n      }\n    }, new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.empty)()), value_1));\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a list\", value_1)]);\n  }\n}\nfunction seq(decoder, path, value_1) {\n  if (Array.isArray(value_1)) {\n    var i = -1;\n    return (0,_fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.Result_Map)(_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_16__.reverse, (0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_15__.fold)(function (acc, value_2) {\n      i = i + 1 | 0;\n      if (acc.tag === 0) {\n        var matchValue = decoder(path + \".[\" + (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.int32ToString)(i) + \"]\", value_2);\n        if (matchValue.tag === 0) {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_16__.append)([matchValue.fields[0]], acc.fields[0]));\n        } else {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue.fields[0]);\n        }\n      } else {\n        return acc;\n      }\n    }, new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, []), value_1));\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a seq\", value_1)]);\n  }\n}\nfunction array(decoder, path, value_1) {\n  if (Array.isArray(value_1)) {\n    var i = -1;\n    var tokens = value_1;\n    return (0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_15__.fold)(function (acc, value_2) {\n      i = i + 1 | 0;\n      if (acc.tag === 0) {\n        var acc_1 = acc.fields[0];\n        var matchValue = decoder(path + \".[\" + (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.int32ToString)(i) + \"]\", value_2);\n        if (matchValue.tag === 0) {\n          acc_1[i] = matchValue.fields[0];\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, acc_1);\n        } else {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue.fields[0]);\n        }\n      } else {\n        return acc;\n      }\n    }, new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_15__.fill)(new Array(tokens.length), 0, tokens.length, null)), tokens);\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"an array\", value_1)]);\n  }\n}\nfunction keys(path, value_1) {\n  if (value_1 === null ? false : Object.getPrototypeOf(value_1 || false) === Object.prototype) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.ofSeq)(Object.keys(value_1)));\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"an object\", value_1)]);\n  }\n}\nfunction keyValuePairs(decoder, path, value_1) {\n  var matchValue = keys(path, value_1);\n  if (matchValue.tag === 1) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue.fields[0]);\n  } else {\n    return (0,_fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.Result_Map)(_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.reverse, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.fold)(function (acc, prop) {\n      if (acc.tag === 0) {\n        var matchValue_1 = decoder(path, value_1[prop]);\n        if (matchValue_1.tag === 0) {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.cons)([prop, matchValue_1.fields[0]], acc.fields[0]));\n        } else {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue_1.fields[0]);\n        }\n      } else {\n        return acc;\n      }\n    }, new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.empty)()), matchValue.fields[0]));\n  }\n}\nfunction oneOf(decoders, path, value_1) {\n  var runner = function runner(decoders_1_mut, errors_mut) {\n    runner: while (true) {\n      var decoders_1 = decoders_1_mut,\n        errors = errors_mut;\n      if ((0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.isEmpty)(decoders_1)) {\n        return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(7, errors)]);\n      } else {\n        var matchValue = fromValue(path, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.head)(decoders_1)), value_1);\n        if (matchValue.tag === 1) {\n          decoders_1_mut = (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.tail)(decoders_1);\n          errors_mut = (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.append)(errors, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.singleton)(matchValue.fields[0]));\n          continue runner;\n        } else {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, matchValue.fields[0]);\n        }\n      }\n      break;\n    }\n  };\n  return runner(decoders, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.empty)());\n}\nfunction nil(output, path, value_1) {\n  if (value_1 == null) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, output);\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"null\", value_1)]);\n  }\n}\nfunction value(_arg1, v) {\n  return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, v);\n}\nfunction succeed(output, _arg2, _arg1) {\n  return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, output);\n}\nfunction fail(msg, path, _arg1) {\n  return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(6, msg)]);\n}\nfunction andThen(cb, decoder, path, value_1) {\n  var matchValue = decoder(path, value_1);\n  if (matchValue.tag === 0) {\n    return cb(matchValue.fields[0], path, value_1);\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue.fields[0]);\n  }\n}\nfunction all(decoders, path, value_1) {\n  var runner = function runner(decoders_1_mut, values_mut) {\n    runner: while (true) {\n      var decoders_1 = decoders_1_mut,\n        values = values_mut;\n      if ((0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.isEmpty)(decoders_1)) {\n        return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, values);\n      } else {\n        var matchValue = (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.head)(decoders_1)(path)(value_1);\n        if (matchValue.tag === 1) {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue.fields[0]);\n        } else {\n          decoders_1_mut = (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.tail)(decoders_1);\n          values_mut = (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.append)(values, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.singleton)(matchValue.fields[0]));\n          continue runner;\n        }\n      }\n      break;\n    }\n  };\n  return runner(decoders, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.empty)());\n}\nfunction map(ctor, d1, path, value_1) {\n  var matchValue = d1(path, value_1);\n  if (matchValue.tag === 1) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue.fields[0]);\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, ctor(matchValue.fields[0]));\n  }\n}\nfunction map2(ctor, d1, d2, path, value_1) {\n  var matchValue = [d1(path, value_1), d2(path, value_1)];\n  var copyOfStruct = matchValue[0];\n  if (copyOfStruct.tag === 1) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct.fields[0]);\n  } else {\n    var copyOfStruct_1 = matchValue[1];\n    if (copyOfStruct_1.tag === 1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_1.fields[0]);\n    } else {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0]));\n    }\n  }\n}\nfunction map3(ctor, d1, d2, d3, path, value_1) {\n  var matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1)];\n  var copyOfStruct = matchValue[0];\n  if (copyOfStruct.tag === 1) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct.fields[0]);\n  } else {\n    var copyOfStruct_1 = matchValue[1];\n    if (copyOfStruct_1.tag === 1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_1.fields[0]);\n    } else {\n      var copyOfStruct_2 = matchValue[2];\n      if (copyOfStruct_2.tag === 1) {\n        return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_2.fields[0]);\n      } else {\n        return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0]));\n      }\n    }\n  }\n}\nfunction map4(ctor, d1, d2, d3, d4, path, value_1) {\n  var matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1)];\n  var copyOfStruct = matchValue[0];\n  if (copyOfStruct.tag === 1) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct.fields[0]);\n  } else {\n    var copyOfStruct_1 = matchValue[1];\n    if (copyOfStruct_1.tag === 1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_1.fields[0]);\n    } else {\n      var copyOfStruct_2 = matchValue[2];\n      if (copyOfStruct_2.tag === 1) {\n        return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_2.fields[0]);\n      } else {\n        var copyOfStruct_3 = matchValue[3];\n        if (copyOfStruct_3.tag === 1) {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_3.fields[0]);\n        } else {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0]));\n        }\n      }\n    }\n  }\n}\nfunction map5(ctor, d1, d2, d3, d4, d5, path, value_1) {\n  var matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1)];\n  var copyOfStruct = matchValue[0];\n  if (copyOfStruct.tag === 1) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct.fields[0]);\n  } else {\n    var copyOfStruct_1 = matchValue[1];\n    if (copyOfStruct_1.tag === 1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_1.fields[0]);\n    } else {\n      var copyOfStruct_2 = matchValue[2];\n      if (copyOfStruct_2.tag === 1) {\n        return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_2.fields[0]);\n      } else {\n        var copyOfStruct_3 = matchValue[3];\n        if (copyOfStruct_3.tag === 1) {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_3.fields[0]);\n        } else {\n          var copyOfStruct_4 = matchValue[4];\n          if (copyOfStruct_4.tag === 1) {\n            return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_4.fields[0]);\n          } else {\n            return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0]));\n          }\n        }\n      }\n    }\n  }\n}\nfunction map6(ctor, d1, d2, d3, d4, d5, d6, path, value_1) {\n  var matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1)];\n  var copyOfStruct = matchValue[0];\n  if (copyOfStruct.tag === 1) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct.fields[0]);\n  } else {\n    var copyOfStruct_1 = matchValue[1];\n    if (copyOfStruct_1.tag === 1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_1.fields[0]);\n    } else {\n      var copyOfStruct_2 = matchValue[2];\n      if (copyOfStruct_2.tag === 1) {\n        return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_2.fields[0]);\n      } else {\n        var copyOfStruct_3 = matchValue[3];\n        if (copyOfStruct_3.tag === 1) {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_3.fields[0]);\n        } else {\n          var copyOfStruct_4 = matchValue[4];\n          if (copyOfStruct_4.tag === 1) {\n            return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_4.fields[0]);\n          } else {\n            var copyOfStruct_5 = matchValue[5];\n            if (copyOfStruct_5.tag === 1) {\n              return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_5.fields[0]);\n            } else {\n              return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0]));\n            }\n          }\n        }\n      }\n    }\n  }\n}\nfunction map7(ctor, d1, d2, d3, d4, d5, d6, d7, path, value_1) {\n  var matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1)];\n  var copyOfStruct = matchValue[0];\n  if (copyOfStruct.tag === 1) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct.fields[0]);\n  } else {\n    var copyOfStruct_1 = matchValue[1];\n    if (copyOfStruct_1.tag === 1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_1.fields[0]);\n    } else {\n      var copyOfStruct_2 = matchValue[2];\n      if (copyOfStruct_2.tag === 1) {\n        return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_2.fields[0]);\n      } else {\n        var copyOfStruct_3 = matchValue[3];\n        if (copyOfStruct_3.tag === 1) {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_3.fields[0]);\n        } else {\n          var copyOfStruct_4 = matchValue[4];\n          if (copyOfStruct_4.tag === 1) {\n            return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_4.fields[0]);\n          } else {\n            var copyOfStruct_5 = matchValue[5];\n            if (copyOfStruct_5.tag === 1) {\n              return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_5.fields[0]);\n            } else {\n              var copyOfStruct_6 = matchValue[6];\n              if (copyOfStruct_6.tag === 1) {\n                return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_6.fields[0]);\n              } else {\n                return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0], copyOfStruct_6.fields[0]));\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\nfunction map8(ctor, d1, d2, d3, d4, d5, d6, d7, d8, path, value_1) {\n  var matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1), d8(path, value_1)];\n  var copyOfStruct = matchValue[0];\n  if (copyOfStruct.tag === 1) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct.fields[0]);\n  } else {\n    var copyOfStruct_1 = matchValue[1];\n    if (copyOfStruct_1.tag === 1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_1.fields[0]);\n    } else {\n      var copyOfStruct_2 = matchValue[2];\n      if (copyOfStruct_2.tag === 1) {\n        return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_2.fields[0]);\n      } else {\n        var copyOfStruct_3 = matchValue[3];\n        if (copyOfStruct_3.tag === 1) {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_3.fields[0]);\n        } else {\n          var copyOfStruct_4 = matchValue[4];\n          if (copyOfStruct_4.tag === 1) {\n            return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_4.fields[0]);\n          } else {\n            var copyOfStruct_5 = matchValue[5];\n            if (copyOfStruct_5.tag === 1) {\n              return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_5.fields[0]);\n            } else {\n              var copyOfStruct_6 = matchValue[6];\n              if (copyOfStruct_6.tag === 1) {\n                return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_6.fields[0]);\n              } else {\n                var copyOfStruct_7 = matchValue[7];\n                if (copyOfStruct_7.tag === 1) {\n                  return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, copyOfStruct_7.fields[0]);\n                } else {\n                  return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0], copyOfStruct_6.fields[0], copyOfStruct_7.fields[0]));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\nfunction andMap() {\n  return function (d1) {\n    return function (d2) {\n      return function (path) {\n        return function (value_1) {\n          return map2(function (arg, func) {\n            return func(arg);\n          }, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, d1), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, d2), path, value_1);\n        };\n      };\n    };\n  };\n}\nfunction unwrapWith(errors, path, decoder, value_1) {\n  var matchValue = decoder(path, value_1);\n  if (matchValue.tag === 1) {\n    void errors.push(matchValue.fields[0]);\n    return null;\n  } else {\n    return matchValue.fields[0];\n  }\n}\nvar Getters$1 = /*#__PURE__*/function () {\n  function Getters$1(path, v) {\n    _classCallCheck(this, Getters$1);\n    var _this, _this_1;\n    this.errors = [];\n    this.required = (_this = this, {\n      Field: function Field(fieldName, decoder) {\n        return unwrapWith(_this.errors, path, function (path_1, value_1) {\n          return field(fieldName, decoder, path_1, value_1);\n        }, v);\n      },\n      At: function At(fieldNames, decoder_2) {\n        return unwrapWith(_this.errors, path, function (firstPath, firstValue) {\n          return at(fieldNames, decoder_2, firstPath, firstValue);\n        }, v);\n      },\n      Raw: function Raw(decoder_4) {\n        return unwrapWith(_this.errors, path, decoder_4, v);\n      }\n    });\n    this.optional = (_this_1 = this, {\n      Field: function Field(fieldName_1, decoder_5) {\n        return unwrapWith(_this_1.errors, path, function (path_2, value_2) {\n          return optional(fieldName_1, decoder_5, path_2, value_2);\n        }, v);\n      },\n      At: function At(fieldNames_1, decoder_7) {\n        return unwrapWith(_this_1.errors, path, function (firstPath_1, firstValue_1) {\n          return optionalAt(fieldNames_1, decoder_7, firstPath_1, firstValue_1);\n        }, v);\n      },\n      Raw: function Raw(decoder_9) {\n        var matchValue = decoder_9(path, v);\n        if (matchValue.tag === 1) {\n          var reason = matchValue.fields[0][1];\n          var error = matchValue.fields[0];\n          var pattern_matching_result, v_2;\n          switch (reason.tag) {\n            case 1:\n              {\n                pattern_matching_result = 0;\n                v_2 = reason.fields[1];\n                break;\n              }\n            case 2:\n              {\n                pattern_matching_result = 0;\n                v_2 = reason.fields[1];\n                break;\n              }\n            case 3:\n            case 4:\n              {\n                pattern_matching_result = 1;\n                break;\n              }\n            case 5:\n            case 6:\n            case 7:\n              {\n                pattern_matching_result = 2;\n                break;\n              }\n            default:\n              {\n                pattern_matching_result = 0;\n                v_2 = reason.fields[1];\n              }\n          }\n          switch (pattern_matching_result) {\n            case 0:\n              {\n                if (v_2 == null) {\n                  return void 0;\n                } else {\n                  void _this_1.errors.push(error);\n                  return null;\n                }\n              }\n            case 1:\n              {\n                return void 0;\n              }\n            case 2:\n              {\n                void _this_1.errors.push(error);\n                return null;\n              }\n          }\n        } else {\n          return (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_12__.some)(matchValue.fields[0]);\n        }\n      }\n    });\n  }\n  _createClass(Getters$1, [{\n    key: \"Required\",\n    get: function get() {\n      var __ = this;\n      return __.required;\n    }\n  }, {\n    key: \"Optional\",\n    get: function get() {\n      var __ = this;\n      return __.optional;\n    }\n  }]);\n  return Getters$1;\n}();\nfunction Getters$1$reflection(gen0) {\n  return (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.class_type)(\"Thoth.Json.Decode.Getters`1\", [gen0], Getters$1);\n}\nfunction Getters$1_$ctor_4A51B60E(path, v) {\n  return new Getters$1(path, v);\n}\nfunction Getters$1__get_Errors(__) {\n  return (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_16__.toList)(__.errors);\n}\nfunction object(builder, path, v) {\n  var getters = Getters$1_$ctor_4A51B60E(path, v);\n  var result = builder(getters);\n  var matchValue = Getters$1__get_Errors(getters);\n  if (!(0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.isEmpty)(matchValue)) {\n    var errors = matchValue;\n    if ((0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.length)(errors) > 1) {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(7, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.map)(function (tupledArg) {\n        return errorToString(tupledArg[0], tupledArg[1]);\n      }, errors))]);\n    } else {\n      return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.head)(matchValue));\n    }\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, result);\n  }\n}\nfunction tuple2(decoder1, decoder2) {\n  var decoder_3;\n  var decoder = decoder1;\n  decoder_3 = function decoder_3(path) {\n    return function (value_1) {\n      return index(0, decoder, path, value_1);\n    };\n  };\n  return function (path_3) {\n    return function (value_4) {\n      return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v1) {\n        var decoder_2;\n        var decoder_1 = decoder2;\n        decoder_2 = function decoder_2(path_1) {\n          return function (value_2) {\n            return index(1, decoder_1, path_1, value_2);\n          };\n        };\n        return function (path_2) {\n          return function (value_3) {\n            return andThen(function (v2, arg10$0040, arg20$0040) {\n              return succeed([v1, v2], arg10$0040, arg20$0040);\n            }, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_2), path_2, value_3);\n          };\n        };\n      }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_3), path_3, value_4);\n    };\n  };\n}\nfunction tuple3(decoder1, decoder2, decoder3) {\n  var decoder_5;\n  var decoder = decoder1;\n  decoder_5 = function decoder_5(path) {\n    return function (value_1) {\n      return index(0, decoder, path, value_1);\n    };\n  };\n  return function (path_5) {\n    return function (value_6) {\n      return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v1) {\n        var decoder_4;\n        var decoder_1 = decoder2;\n        decoder_4 = function decoder_4(path_1) {\n          return function (value_2) {\n            return index(1, decoder_1, path_1, value_2);\n          };\n        };\n        return function (path_4) {\n          return function (value_5) {\n            return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v2) {\n              var decoder_3;\n              var decoder_2 = decoder3;\n              decoder_3 = function decoder_3(path_2) {\n                return function (value_3) {\n                  return index(2, decoder_2, path_2, value_3);\n                };\n              };\n              return function (path_3) {\n                return function (value_4) {\n                  return andThen(function (v3, arg10$0040, arg20$0040) {\n                    return succeed([v1, v2, v3], arg10$0040, arg20$0040);\n                  }, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_3), path_3, value_4);\n                };\n              };\n            }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_4), path_4, value_5);\n          };\n        };\n      }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_5), path_5, value_6);\n    };\n  };\n}\nfunction tuple4(decoder1, decoder2, decoder3, decoder4) {\n  var decoder_7;\n  var decoder = decoder1;\n  decoder_7 = function decoder_7(path) {\n    return function (value_1) {\n      return index(0, decoder, path, value_1);\n    };\n  };\n  return function (path_7) {\n    return function (value_8) {\n      return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v1) {\n        var decoder_6;\n        var decoder_1 = decoder2;\n        decoder_6 = function decoder_6(path_1) {\n          return function (value_2) {\n            return index(1, decoder_1, path_1, value_2);\n          };\n        };\n        return function (path_6) {\n          return function (value_7) {\n            return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v2) {\n              var decoder_5;\n              var decoder_2 = decoder3;\n              decoder_5 = function decoder_5(path_2) {\n                return function (value_3) {\n                  return index(2, decoder_2, path_2, value_3);\n                };\n              };\n              return function (path_5) {\n                return function (value_6) {\n                  return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v3) {\n                    var decoder_4;\n                    var decoder_3 = decoder4;\n                    decoder_4 = function decoder_4(path_3) {\n                      return function (value_4) {\n                        return index(3, decoder_3, path_3, value_4);\n                      };\n                    };\n                    return function (path_4) {\n                      return function (value_5) {\n                        return andThen(function (v4, arg10$0040, arg20$0040) {\n                          return succeed([v1, v2, v3, v4], arg10$0040, arg20$0040);\n                        }, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_4), path_4, value_5);\n                      };\n                    };\n                  }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_5), path_5, value_6);\n                };\n              };\n            }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_6), path_6, value_7);\n          };\n        };\n      }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_7), path_7, value_8);\n    };\n  };\n}\nfunction tuple5(decoder1, decoder2, decoder3, decoder4, decoder5) {\n  var decoder_9;\n  var decoder = decoder1;\n  decoder_9 = function decoder_9(path) {\n    return function (value_1) {\n      return index(0, decoder, path, value_1);\n    };\n  };\n  return function (path_9) {\n    return function (value_10) {\n      return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v1) {\n        var decoder_8;\n        var decoder_1 = decoder2;\n        decoder_8 = function decoder_8(path_1) {\n          return function (value_2) {\n            return index(1, decoder_1, path_1, value_2);\n          };\n        };\n        return function (path_8) {\n          return function (value_9) {\n            return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v2) {\n              var decoder_7;\n              var decoder_2 = decoder3;\n              decoder_7 = function decoder_7(path_2) {\n                return function (value_3) {\n                  return index(2, decoder_2, path_2, value_3);\n                };\n              };\n              return function (path_7) {\n                return function (value_8) {\n                  return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v3) {\n                    var decoder_6;\n                    var decoder_3 = decoder4;\n                    decoder_6 = function decoder_6(path_3) {\n                      return function (value_4) {\n                        return index(3, decoder_3, path_3, value_4);\n                      };\n                    };\n                    return function (path_6) {\n                      return function (value_7) {\n                        return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v4) {\n                          var decoder_5;\n                          var decoder_4 = decoder5;\n                          decoder_5 = function decoder_5(path_4) {\n                            return function (value_5) {\n                              return index(4, decoder_4, path_4, value_5);\n                            };\n                          };\n                          return function (path_5) {\n                            return function (value_6) {\n                              return andThen(function (v5, arg10$0040, arg20$0040) {\n                                return succeed([v1, v2, v3, v4, v5], arg10$0040, arg20$0040);\n                              }, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_5), path_5, value_6);\n                            };\n                          };\n                        }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_6), path_6, value_7);\n                      };\n                    };\n                  }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_7), path_7, value_8);\n                };\n              };\n            }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_8), path_8, value_9);\n          };\n        };\n      }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_9), path_9, value_10);\n    };\n  };\n}\nfunction tuple6(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6) {\n  var decoder_11;\n  var decoder = decoder1;\n  decoder_11 = function decoder_11(path) {\n    return function (value_1) {\n      return index(0, decoder, path, value_1);\n    };\n  };\n  return function (path_11) {\n    return function (value_12) {\n      return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v1) {\n        var decoder_10;\n        var decoder_1 = decoder2;\n        decoder_10 = function decoder_10(path_1) {\n          return function (value_2) {\n            return index(1, decoder_1, path_1, value_2);\n          };\n        };\n        return function (path_10) {\n          return function (value_11) {\n            return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v2) {\n              var decoder_9;\n              var decoder_2 = decoder3;\n              decoder_9 = function decoder_9(path_2) {\n                return function (value_3) {\n                  return index(2, decoder_2, path_2, value_3);\n                };\n              };\n              return function (path_9) {\n                return function (value_10) {\n                  return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v3) {\n                    var decoder_8;\n                    var decoder_3 = decoder4;\n                    decoder_8 = function decoder_8(path_3) {\n                      return function (value_4) {\n                        return index(3, decoder_3, path_3, value_4);\n                      };\n                    };\n                    return function (path_8) {\n                      return function (value_9) {\n                        return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v4) {\n                          var decoder_7;\n                          var decoder_4 = decoder5;\n                          decoder_7 = function decoder_7(path_4) {\n                            return function (value_5) {\n                              return index(4, decoder_4, path_4, value_5);\n                            };\n                          };\n                          return function (path_7) {\n                            return function (value_8) {\n                              return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v5) {\n                                var decoder_6;\n                                var decoder_5 = decoder6;\n                                decoder_6 = function decoder_6(path_5) {\n                                  return function (value_6) {\n                                    return index(5, decoder_5, path_5, value_6);\n                                  };\n                                };\n                                return function (path_6) {\n                                  return function (value_7) {\n                                    return andThen(function (v6, arg10$0040, arg20$0040) {\n                                      return succeed([v1, v2, v3, v4, v5, v6], arg10$0040, arg20$0040);\n                                    }, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_6), path_6, value_7);\n                                  };\n                                };\n                              }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_7), path_7, value_8);\n                            };\n                          };\n                        }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_8), path_8, value_9);\n                      };\n                    };\n                  }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_9), path_9, value_10);\n                };\n              };\n            }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_10), path_10, value_11);\n          };\n        };\n      }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_11), path_11, value_12);\n    };\n  };\n}\nfunction tuple7(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7) {\n  var decoder_13;\n  var decoder = decoder1;\n  decoder_13 = function decoder_13(path) {\n    return function (value_1) {\n      return index(0, decoder, path, value_1);\n    };\n  };\n  return function (path_13) {\n    return function (value_14) {\n      return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v1) {\n        var decoder_12;\n        var decoder_1 = decoder2;\n        decoder_12 = function decoder_12(path_1) {\n          return function (value_2) {\n            return index(1, decoder_1, path_1, value_2);\n          };\n        };\n        return function (path_12) {\n          return function (value_13) {\n            return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v2) {\n              var decoder_11;\n              var decoder_2 = decoder3;\n              decoder_11 = function decoder_11(path_2) {\n                return function (value_3) {\n                  return index(2, decoder_2, path_2, value_3);\n                };\n              };\n              return function (path_11) {\n                return function (value_12) {\n                  return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v3) {\n                    var decoder_10;\n                    var decoder_3 = decoder4;\n                    decoder_10 = function decoder_10(path_3) {\n                      return function (value_4) {\n                        return index(3, decoder_3, path_3, value_4);\n                      };\n                    };\n                    return function (path_10) {\n                      return function (value_11) {\n                        return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v4) {\n                          var decoder_9;\n                          var decoder_4 = decoder5;\n                          decoder_9 = function decoder_9(path_4) {\n                            return function (value_5) {\n                              return index(4, decoder_4, path_4, value_5);\n                            };\n                          };\n                          return function (path_9) {\n                            return function (value_10) {\n                              return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v5) {\n                                var decoder_8;\n                                var decoder_5 = decoder6;\n                                decoder_8 = function decoder_8(path_5) {\n                                  return function (value_6) {\n                                    return index(5, decoder_5, path_5, value_6);\n                                  };\n                                };\n                                return function (path_8) {\n                                  return function (value_9) {\n                                    return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v6) {\n                                      var decoder_7;\n                                      var decoder_6 = decoder7;\n                                      decoder_7 = function decoder_7(path_6) {\n                                        return function (value_7) {\n                                          return index(6, decoder_6, path_6, value_7);\n                                        };\n                                      };\n                                      return function (path_7) {\n                                        return function (value_8) {\n                                          return andThen(function (v7, arg10$0040, arg20$0040) {\n                                            return succeed([v1, v2, v3, v4, v5, v6, v7], arg10$0040, arg20$0040);\n                                          }, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_7), path_7, value_8);\n                                        };\n                                      };\n                                    }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_8), path_8, value_9);\n                                  };\n                                };\n                              }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_9), path_9, value_10);\n                            };\n                          };\n                        }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_10), path_10, value_11);\n                      };\n                    };\n                  }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_11), path_11, value_12);\n                };\n              };\n            }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_12), path_12, value_13);\n          };\n        };\n      }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_13), path_13, value_14);\n    };\n  };\n}\nfunction tuple8(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7, decoder8) {\n  var decoder_15;\n  var decoder = decoder1;\n  decoder_15 = function decoder_15(path) {\n    return function (value_1) {\n      return index(0, decoder, path, value_1);\n    };\n  };\n  return function (path_15) {\n    return function (value_16) {\n      return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v1) {\n        var decoder_14;\n        var decoder_1 = decoder2;\n        decoder_14 = function decoder_14(path_1) {\n          return function (value_2) {\n            return index(1, decoder_1, path_1, value_2);\n          };\n        };\n        return function (path_14) {\n          return function (value_15) {\n            return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v2) {\n              var decoder_13;\n              var decoder_2 = decoder3;\n              decoder_13 = function decoder_13(path_2) {\n                return function (value_3) {\n                  return index(2, decoder_2, path_2, value_3);\n                };\n              };\n              return function (path_13) {\n                return function (value_14) {\n                  return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v3) {\n                    var decoder_12;\n                    var decoder_3 = decoder4;\n                    decoder_12 = function decoder_12(path_3) {\n                      return function (value_4) {\n                        return index(3, decoder_3, path_3, value_4);\n                      };\n                    };\n                    return function (path_12) {\n                      return function (value_13) {\n                        return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v4) {\n                          var decoder_11;\n                          var decoder_4 = decoder5;\n                          decoder_11 = function decoder_11(path_4) {\n                            return function (value_5) {\n                              return index(4, decoder_4, path_4, value_5);\n                            };\n                          };\n                          return function (path_11) {\n                            return function (value_12) {\n                              return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v5) {\n                                var decoder_10;\n                                var decoder_5 = decoder6;\n                                decoder_10 = function decoder_10(path_5) {\n                                  return function (value_6) {\n                                    return index(5, decoder_5, path_5, value_6);\n                                  };\n                                };\n                                return function (path_10) {\n                                  return function (value_11) {\n                                    return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v6) {\n                                      var decoder_9;\n                                      var decoder_6 = decoder7;\n                                      decoder_9 = function decoder_9(path_6) {\n                                        return function (value_7) {\n                                          return index(6, decoder_6, path_6, value_7);\n                                        };\n                                      };\n                                      return function (path_9) {\n                                        return function (value_10) {\n                                          return andThen((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(3, function (v7) {\n                                            var decoder_8;\n                                            var decoder_7 = decoder8;\n                                            decoder_8 = function decoder_8(path_7) {\n                                              return function (value_8) {\n                                                return index(7, decoder_7, path_7, value_8);\n                                              };\n                                            };\n                                            return function (path_8) {\n                                              return function (value_9) {\n                                                return andThen(function (v8, arg10$0040, arg20$0040) {\n                                                  return succeed([v1, v2, v3, v4, v5, v6, v7, v8], arg10$0040, arg20$0040);\n                                                }, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_8), path_8, value_9);\n                                              };\n                                            };\n                                          }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_9), path_9, value_10);\n                                        };\n                                      };\n                                    }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_10), path_10, value_11);\n                                  };\n                                };\n                              }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_11), path_11, value_12);\n                            };\n                          };\n                        }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_12), path_12, value_13);\n                      };\n                    };\n                  }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_13), path_13, value_14);\n                };\n              };\n            }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_14), path_14, value_15);\n          };\n        };\n      }), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_15), path_15, value_16);\n    };\n  };\n}\nfunction dict(decoder) {\n  var d1;\n  var decoder_1 = decoder;\n  d1 = function d1(path) {\n    return function (value_1) {\n      return keyValuePairs(decoder_1, path, value_1);\n    };\n  };\n  return function (path_1) {\n    return function (value_2) {\n      return map(_fable_library_3_7_2_Map_js__WEBPACK_IMPORTED_MODULE_18__.ofList, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, d1), path_1, value_2);\n    };\n  };\n}\nfunction map$0027(keyDecoder, valueDecoder) {\n  var d1;\n  var decoder = tuple2(keyDecoder, valueDecoder);\n  d1 = function d1(path) {\n    return function (value_1) {\n      return array((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder), path, value_1);\n    };\n  };\n  return function (path_1) {\n    return function (value_2) {\n      return map(_fable_library_3_7_2_Map_js__WEBPACK_IMPORTED_MODULE_18__.ofSeq, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, d1), path_1, value_2);\n    };\n  };\n}\nfunction toMap(xs) {\n  return (0,_fable_library_3_7_2_Map_js__WEBPACK_IMPORTED_MODULE_18__.ofSeq)(xs);\n}\nfunction toSet(xs) {\n  return (0,_fable_library_3_7_2_Set_js__WEBPACK_IMPORTED_MODULE_19__.ofSeq)(xs, {\n    Compare: _fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.compare\n  });\n}\nfunction autoObject(decoderInfos, path, value_1) {\n  if (!(value_1 === null ? false : Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"an object\", value_1)]);\n  } else {\n    return (0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_15__.foldBack)((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, function (tupledArg) {\n      var name = tupledArg[0];\n      return function (acc) {\n        return acc.tag === 0 ? (0,_fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.Result_Map)(function (v) {\n          return (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.cons)(v, acc.fields[0]);\n        }, tupledArg[1](path + \".\" + name)(value_1[name])) : acc;\n      };\n    }), decoderInfos, new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.empty)()));\n  }\n}\nfunction autoObject2(keyDecoder, valueDecoder, path, value_1) {\n  if (!(value_1 === null ? false : Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"an object\", value_1)]);\n  } else {\n    return (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_16__.fold)(function (acc, name) {\n      if (acc.tag === 0) {\n        var matchValue = keyDecoder(path, name);\n        if (matchValue.tag === 0) {\n          var _arg1 = valueDecoder(path + \".\" + name, value_1[name]);\n          if (_arg1.tag === 0) {\n            return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.cons)([matchValue.fields[0], _arg1.fields[0]], acc.fields[0]));\n          } else {\n            return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, _arg1.fields[0]);\n          }\n        } else {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue.fields[0]);\n        }\n      } else {\n        return acc;\n      }\n    }, new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.empty)()), Object.keys(value_1));\n  }\n}\nfunction mixedArray(offset, decoders, path, values) {\n  var arg20;\n  var expectedLength = decoders.length + offset | 0;\n  if (expectedLength !== values.length) {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(6, (arg20 = values.length | 0, (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_0__.toText)((0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_0__.printf)(\"Expected array of length %i but got %i\"))(expectedLength)(arg20)))]);\n  } else {\n    var result = new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.empty)());\n    var _loop = function _loop() {\n      if (result.tag === 0) {\n        var acc = result.fields[0];\n        var path_1 = (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_0__.toText)((0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_0__.printf)(\"%s[%i]\"))(path)(i);\n        var decoder = decoders[i - offset];\n        var value_1 = values[i];\n        result = (0,_fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.Result_Map)(function (v) {\n          return (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.cons)(v, acc);\n        }, decoder(path_1)(value_1));\n      }\n    };\n    for (var i = offset; i <= values.length - 1; i++) {\n      _loop();\n    }\n    return (0,_fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.Result_Map)(_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.reverse, result);\n  }\n}\nfunction makeUnion(extra, caseStrategy, t, name, path, values) {\n  var uci = (0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_15__.tryFind)(function (x) {\n    return (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.name)(x) === name;\n  }, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getUnionCases)(t, true));\n  if (uci != null) {\n    var uci_1 = uci;\n    var decoders = (0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_15__.map)(function (fi) {\n      return autoDecoder(extra, caseStrategy, false, fi[1]);\n    }, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getUnionCaseFields)(uci_1));\n    return (0,_fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.Result_Map)(function (values_2) {\n      return (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.makeUnion)(uci_1, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.toArray)(values_2), true);\n    }, decoders.length === 0 && values.length <= 1 ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.empty)()) : mixedArray(1, decoders, path, values));\n  } else {\n    return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(6, \"Cannot find case \" + name + \" in \" + (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t))]);\n  }\n}\nfunction autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t) {\n  var decoderRef = new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(null);\n  var extra_1;\n  var matchValue = (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t);\n  extra_1 = matchValue === \"\" ? extra : (0,_fable_library_3_7_2_Map_js__WEBPACK_IMPORTED_MODULE_18__.add)(matchValue, decoderRef, extra);\n  var decoder;\n  if ((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.isRecord)(t, true)) {\n    var decoders = (0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_15__.map)(function (fi) {\n      return [(0,_Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.Util_Casing_convert)(caseStrategy, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.name)(fi)), autoDecoder(extra_1, caseStrategy, false, fi[1])];\n    }, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getRecordElements)(t, true));\n    decoder = function decoder(path) {\n      return function (value_1) {\n        return (0,_fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.Result_Map)(function (xs) {\n          return (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.makeRecord)(t, (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.toArray)(xs), true);\n        }, autoObject(decoders, path, value_1));\n      };\n    };\n  } else if ((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.isUnion)(t, true)) {\n    decoder = function decoder(path_1) {\n      return function (value_2) {\n        if (typeof value_2 === \"string\") {\n          return makeUnion(extra_1, caseStrategy, t, value_2, path_1, []);\n        } else if (Array.isArray(value_2)) {\n          var values = value_2;\n          return (0,_fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.Result_Bind)(function (name_2) {\n            return makeUnion(extra_1, caseStrategy, t, name_2, path_1, values);\n          }, string(path_1 + \"[0]\", values[0]));\n        } else {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path_1, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"a string or array\", value_2)]);\n        }\n      };\n    };\n  } else if (isOptional) {\n    decoder = function decoder(path_2) {\n      return function (value_3) {\n        return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path_2, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(2, \"an extra coder for \" + (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t), value_3)]);\n      };\n    };\n  } else {\n    var message;\n    var arg10 = (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t);\n    message = (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_0__.toText)((0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_0__.printf)(\"Cannot generate auto decoder for %s. Please pass an extra decoder.\\n\\nDocumentation available at: https://thoth-org.github.io/Thoth.Json/documentation/auto/extra-coders.html#ready-to-use-extra-coders\"))(arg10);\n    throw new Error(message);\n  }\n  decoderRef.contents = decoder;\n  return decoder;\n}\nfunction autoDecoder(extra, caseStrategy, isOptional, t) {\n  var decoder_13, decoder_14, decoder_15, decoder_16;\n  var fullname = (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t);\n  var matchValue = (0,_fable_library_3_7_2_Map_js__WEBPACK_IMPORTED_MODULE_18__.tryFind)(fullname, extra);\n  if (matchValue == null) {\n    if ((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.isArray)(t)) {\n      var decoder = autoDecoder(extra, caseStrategy, false, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getElementType)(t));\n      return function (path_1) {\n        return function (value_2) {\n          return array((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder), path_1, value_2);\n        };\n      };\n    } else if ((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.isEnum)(t)) {\n      var enumType = (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getEnumUnderlyingType)(t));\n      if (enumType === \"System.SByte\") {\n        return function (path_2) {\n          return function (value_4) {\n            var t_2 = t;\n            var path_3 = path_2;\n            var value_5 = value_4;\n            var matchValue_1 = sbyte(path_3)(value_5);\n            if (matchValue_1.tag === 1) {\n              return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue_1.fields[0]);\n            } else {\n              var enumValue = matchValue_1.fields[0];\n              return function (source_1) {\n                return (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_16__.contains)(enumValue, source_1, {\n                  Equals: function Equals(x, y) {\n                    return x === y;\n                  },\n                  GetHashCode: _fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.numberHash\n                });\n              }((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getEnumValues)(t_2)) ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.parseEnum)(t_2, enumValue.toString())) : new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path_3, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t_2), value_5, \"Unkown value provided for the enum\")]);\n            }\n          };\n        };\n      } else if (enumType === \"System.Byte\") {\n        return function (path_4) {\n          return function (value_7) {\n            var t_3 = t;\n            var path_5 = path_4;\n            var value_8 = value_7;\n            var matchValue_2 = _byte(path_5)(value_8);\n            if (matchValue_2.tag === 1) {\n              return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue_2.fields[0]);\n            } else {\n              var enumValue_1 = matchValue_2.fields[0];\n              return function (source_1_1) {\n                return (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_16__.contains)(enumValue_1, source_1_1, {\n                  Equals: function Equals(x_1, y_1) {\n                    return x_1 === y_1;\n                  },\n                  GetHashCode: _fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.numberHash\n                });\n              }((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getEnumValues)(t_3)) ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.parseEnum)(t_3, enumValue_1.toString())) : new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path_5, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t_3), value_8, \"Unkown value provided for the enum\")]);\n            }\n          };\n        };\n      } else if (enumType === \"System.Int16\") {\n        return function (path_6) {\n          return function (value_10) {\n            var t_4 = t;\n            var path_7 = path_6;\n            var value_11 = value_10;\n            var matchValue_3 = int16(path_7)(value_11);\n            if (matchValue_3.tag === 1) {\n              return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue_3.fields[0]);\n            } else {\n              var enumValue_2 = matchValue_3.fields[0];\n              return function (source_1_2) {\n                return (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_16__.contains)(enumValue_2, source_1_2, {\n                  Equals: function Equals(x_2, y_2) {\n                    return x_2 === y_2;\n                  },\n                  GetHashCode: _fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.numberHash\n                });\n              }((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getEnumValues)(t_4)) ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.parseEnum)(t_4, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.int16ToString)(enumValue_2))) : new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path_7, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t_4), value_11, \"Unkown value provided for the enum\")]);\n            }\n          };\n        };\n      } else if (enumType === \"System.UInt16\") {\n        return function (path_8) {\n          return function (value_13) {\n            var t_5 = t;\n            var path_9 = path_8;\n            var value_14 = value_13;\n            var matchValue_4 = uint16(path_9)(value_14);\n            if (matchValue_4.tag === 1) {\n              return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue_4.fields[0]);\n            } else {\n              var enumValue_3 = matchValue_4.fields[0];\n              return function (source_1_3) {\n                return (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_16__.contains)(enumValue_3, source_1_3, {\n                  Equals: function Equals(x_3, y_3) {\n                    return x_3 === y_3;\n                  },\n                  GetHashCode: _fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.numberHash\n                });\n              }((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getEnumValues)(t_5)) ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.parseEnum)(t_5, enumValue_3.toString())) : new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path_9, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t_5), value_14, \"Unkown value provided for the enum\")]);\n            }\n          };\n        };\n      } else if (enumType === \"System.Int32\") {\n        return function (path_10) {\n          return function (value_16) {\n            var t_6 = t;\n            var path_11 = path_10;\n            var value_17 = value_16;\n            var matchValue_5 = _int(path_11)(value_17);\n            if (matchValue_5.tag === 1) {\n              return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue_5.fields[0]);\n            } else {\n              var enumValue_4 = matchValue_5.fields[0];\n              return function (source_1_4) {\n                return (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_16__.contains)(enumValue_4, source_1_4, {\n                  Equals: function Equals(x_4, y_4) {\n                    return x_4 === y_4;\n                  },\n                  GetHashCode: _fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.numberHash\n                });\n              }((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getEnumValues)(t_6)) ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.parseEnum)(t_6, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.int32ToString)(enumValue_4))) : new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path_11, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t_6), value_17, \"Unkown value provided for the enum\")]);\n            }\n          };\n        };\n      } else if (enumType === \"System.UInt32\") {\n        return function (path_12) {\n          return function (value_19) {\n            var t_7 = t;\n            var path_13 = path_12;\n            var value_20 = value_19;\n            var matchValue_6 = uint32(path_13)(value_20);\n            if (matchValue_6.tag === 1) {\n              return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue_6.fields[0]);\n            } else {\n              var enumValue_5 = matchValue_6.fields[0];\n              return function (source_1_5) {\n                return (0,_fable_library_3_7_2_Seq_js__WEBPACK_IMPORTED_MODULE_16__.contains)(enumValue_5, source_1_5, {\n                  Equals: function Equals(x_5, y_5) {\n                    return x_5 === y_5;\n                  },\n                  GetHashCode: _fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.numberHash\n                });\n              }((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getEnumValues)(t_7)) ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.parseEnum)(t_7, enumValue_5.toString())) : new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path_13, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(1, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t_7), value_20, \"Unkown value provided for the enum\")]);\n            }\n          };\n        };\n      } else {\n        var arg10 = (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t);\n        var clo2 = (0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_0__.toFail)((0,_fable_library_3_7_2_String_js__WEBPACK_IMPORTED_MODULE_0__.printf)(\"Cannot generate auto decoder for %s.\\nThoth.Json.Net only support the following enum types:\\n- sbyte\\n- byte\\n- int16\\n- uint16\\n- int\\n- uint32\\nIf you can't use one of these types, please pass an extra decoder.\\n                    \"))(arg10);\n        return function (arg20) {\n          var clo3 = clo2(arg20);\n          return clo3;\n        };\n      }\n    } else if ((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.isGenericType)(t)) {\n      if ((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.isTuple)(t)) {\n        var decoders = (0,_fable_library_3_7_2_Array_js__WEBPACK_IMPORTED_MODULE_15__.map)(function (t_8) {\n          return autoDecoder(extra, caseStrategy, false, t_8);\n        }, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getTupleElements)(t));\n        return function (path_14) {\n          return function (value_21) {\n            return Array.isArray(value_21) ? (0,_fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.Result_Map)(function (xs) {\n              return (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.makeTuple)((0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.toArray)(xs), t);\n            }, mixedArray(0, decoders, path_14, value_21)) : new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, [path_14, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.ErrorReason(0, \"an array\", value_21)]);\n          };\n        };\n      } else {\n        var fullname_1 = (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getGenericTypeDefinition)(t));\n        if (fullname_1 === \"Microsoft.FSharp.Core.FSharpOption`1[System.Object]\") {\n          return decoder_13 = autoDecoder(extra, caseStrategy, true, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getGenerics)(t)[0]), function (path_15) {\n            return function (value_22) {\n              return option((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_13), path_15, value_22);\n            };\n          };\n        } else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpList`1[System.Object]\") {\n          return decoder_14 = autoDecoder(extra, caseStrategy, false, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getGenerics)(t)[0]), function (path_16) {\n            return function (value_23) {\n              return list((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_14), path_16, value_23);\n            };\n          };\n        } else if (fullname_1 === \"System.Collections.Generic.IEnumerable`1[System.Object]\") {\n          return decoder_15 = autoDecoder(extra, caseStrategy, false, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getGenerics)(t)[0]), function (path_17) {\n            return function (value_24) {\n              return seq((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_15), path_17, value_24);\n            };\n          };\n        } else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpMap`2[System.Object,System.Object]\") {\n          var keyDecoder = autoDecoder(extra, caseStrategy, false, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getGenerics)(t)[0]);\n          var valueDecoder = autoDecoder(extra, caseStrategy, false, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getGenerics)(t)[1]);\n          var d1;\n          var decoders_1 = (0,_fable_library_3_7_2_List_js__WEBPACK_IMPORTED_MODULE_13__.ofArray)([function (path_18) {\n            return function (value_25) {\n              return autoObject2((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, keyDecoder), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, valueDecoder), path_18, value_25);\n            };\n          }, (decoder_16 = tuple2((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, keyDecoder), (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, valueDecoder)), function (path_19) {\n            return function (value_26) {\n              return list((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_16), path_19, value_26);\n            };\n          })]);\n          d1 = function d1(path_20) {\n            return function (value_27) {\n              return oneOf(decoders_1, path_20, value_27);\n            };\n          };\n          return function (path_21) {\n            return function (value_29) {\n              return map(toMap, (0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, d1), path_21, value_29);\n            };\n          };\n        } else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpSet`1[System.Object]\") {\n          var decoder_17 = autoDecoder(extra, caseStrategy, false, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.getGenerics)(t)[0]);\n          return function (path_22) {\n            return function (value_30) {\n              var matchValue_7 = array((0,_fable_library_3_7_2_Util_js__WEBPACK_IMPORTED_MODULE_14__.uncurry)(2, decoder_17), path_22, value_30);\n              return matchValue_7.tag === 0 ? new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, toSet(matchValue_7.fields[0])) : new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(1, matchValue_7.fields[0]);\n            };\n          };\n        } else {\n          return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\n        }\n      }\n    } else if (fullname === \"System.Boolean\") {\n      return function (path_23) {\n        return function (value_32) {\n          return bool(path_23, value_32);\n        };\n      };\n    } else if (fullname === \"Microsoft.FSharp.Core.Unit\") {\n      return function (path_24) {\n        return function (value_33) {\n          return unit(path_24, value_33);\n        };\n      };\n    } else if (fullname === \"System.String\") {\n      return function (path_25) {\n        return function (value_34) {\n          return string(path_25, value_34);\n        };\n      };\n    } else if (fullname === \"System.Char\") {\n      return function (path_26) {\n        return function (value_35) {\n          return _char(path_26, value_35);\n        };\n      };\n    } else if (fullname === \"System.SByte\") {\n      return sbyte;\n    } else if (fullname === \"System.Byte\") {\n      return _byte;\n    } else if (fullname === \"System.Int16\") {\n      return int16;\n    } else if (fullname === \"System.UInt16\") {\n      return uint16;\n    } else if (fullname === \"System.Int32\") {\n      return _int;\n    } else if (fullname === \"System.UInt32\") {\n      return uint32;\n    } else if (fullname === \"System.Double\") {\n      return function (path_27) {\n        return function (value_36) {\n          return _float(path_27, value_36);\n        };\n      };\n    } else if (fullname === \"System.Single\") {\n      return function (path_28) {\n        return function (value_37) {\n          return float32(path_28, value_37);\n        };\n      };\n    } else if (fullname === \"System.DateTime\") {\n      return function (path_29) {\n        return function (value_38) {\n          return datetimeUtc(path_29, value_38);\n        };\n      };\n    } else if (fullname === \"System.DateTimeOffset\") {\n      return function (path_30) {\n        return function (value_39) {\n          return datetimeOffset(path_30, value_39);\n        };\n      };\n    } else if (fullname === \"System.TimeSpan\") {\n      return function (path_31) {\n        return function (value_40) {\n          return timespan(path_31, value_40);\n        };\n      };\n    } else if (fullname === \"System.Guid\") {\n      return function (path_32) {\n        return function (value_41) {\n          return guid(path_32, value_41);\n        };\n      };\n    } else if (fullname === \"System.Object\") {\n      return function (_arg1_6) {\n        return function (v) {\n          return new _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_1__.FSharpResult$2(0, v);\n        };\n      };\n    } else {\n      return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\n    }\n  } else {\n    var decoderRef = matchValue;\n    return function (path) {\n      return function (value_1) {\n        return decoderRef.contents(path)(value_1);\n      };\n    };\n  }\n}\nfunction makeExtra(extra) {\n  if (extra != null) {\n    return (0,_fable_library_3_7_2_Map_js__WEBPACK_IMPORTED_MODULE_18__.map)(function (_arg2, tupledArg) {\n      return new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.FSharpRef(tupledArg[1]);\n    }, extra.Coders);\n  } else {\n    return (0,_fable_library_3_7_2_Map_js__WEBPACK_IMPORTED_MODULE_18__.empty)();\n  }\n}\nvar Auto = /*#__PURE__*/_createClass(function Auto() {\n  _classCallCheck(this, Auto);\n});\nfunction Auto$reflection() {\n  return (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.class_type)(\"Thoth.Json.Decode.Auto\", void 0, Auto);\n}\nfunction Auto_generateBoxedDecoderCached_79988AEF(t, caseStrategy, extra) {\n  var y_1, y;\n  var caseStrategy_1 = (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_12__.defaultArg)(caseStrategy, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.CaseStrategy(0));\n  return (0,_Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.Util_Cache$1__GetOrAdd_43981464)(_Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.Util_CachedDecoders, (y_1 = (y = (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_17__.fullName)(t), (0,_fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_4__.toString)(caseStrategy_1) + y), (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_12__.defaultArg)((0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_12__.map)(function (e) {\n    return e.Hash;\n  }, extra), \"\") + y_1), function () {\n    return autoDecoder(makeExtra(extra), caseStrategy_1, false, t);\n  });\n}\nfunction Auto_generateBoxedDecoder_79988AEF(t, caseStrategy, extra) {\n  var caseStrategy_1 = (0,_fable_library_3_7_2_Option_js__WEBPACK_IMPORTED_MODULE_12__.defaultArg)(caseStrategy, new _Types_fs_js__WEBPACK_IMPORTED_MODULE_2__.CaseStrategy(0));\n  return autoDecoder(makeExtra(extra), caseStrategy_1, false, t);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/Thoth.Json.9.0.0/Decode.fs.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/Thoth.Json.9.0.0/Types.fs.js":
/*!**********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/Thoth.Json.9.0.0/Types.fs.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ErrorReason\": () => (/* binding */ ErrorReason),\n/* harmony export */   \"ErrorReason$reflection\": () => (/* binding */ ErrorReason$reflection),\n/* harmony export */   \"CaseStrategy\": () => (/* binding */ CaseStrategy),\n/* harmony export */   \"CaseStrategy$reflection\": () => (/* binding */ CaseStrategy$reflection),\n/* harmony export */   \"ExtraCoders\": () => (/* binding */ ExtraCoders),\n/* harmony export */   \"ExtraCoders$reflection\": () => (/* binding */ ExtraCoders$reflection),\n/* harmony export */   \"Util_Cache$1\": () => (/* binding */ Util_Cache$1),\n/* harmony export */   \"Util_Cache$1$reflection\": () => (/* binding */ Util_Cache$1$reflection),\n/* harmony export */   \"Util_Cache$1_$ctor\": () => (/* binding */ Util_Cache$1_$ctor),\n/* harmony export */   \"Util_Cache$1__GetOrAdd_43981464\": () => (/* binding */ Util_Cache$1__GetOrAdd_43981464),\n/* harmony export */   \"Util_CachedEncoders\": () => (/* binding */ Util_CachedEncoders),\n/* harmony export */   \"Util_CachedDecoders\": () => (/* binding */ Util_CachedDecoders),\n/* harmony export */   \"Util_Casing_lowerFirst\": () => (/* binding */ Util_Casing_lowerFirst),\n/* harmony export */   \"Util_Casing_convert\": () => (/* binding */ Util_Casing_convert)\n/* harmony export */ });\n/* harmony import */ var _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../fable-library.3.7.2/Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fable-library.3.7.2/Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../fable-library.3.7.2/Choice.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Choice.js\");\n/* harmony import */ var _fable_library_3_7_2_MapUtil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fable-library.3.7.2/MapUtil.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/MapUtil.js\");\n/* harmony import */ var _fable_library_3_7_2_RegExp_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fable-library.3.7.2/RegExp.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/RegExp.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\nvar ErrorReason = /*#__PURE__*/function (_Union) {\n  _inherits(ErrorReason, _Union);\n  var _super = _createSuper(ErrorReason);\n  function ErrorReason(tag) {\n    var _this;\n    _classCallCheck(this, ErrorReason);\n    _this = _super.call(this);\n    _this.tag = tag | 0;\n    for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      fields[_key - 1] = arguments[_key];\n    }\n    _this.fields = fields;\n    return _this;\n  }\n  _createClass(ErrorReason, [{\n    key: \"cases\",\n    value: function cases() {\n      return [\"BadPrimitive\", \"BadPrimitiveExtra\", \"BadType\", \"BadField\", \"BadPath\", \"TooSmallArray\", \"FailMessage\", \"BadOneOf\"];\n    }\n  }]);\n  return ErrorReason;\n}(_fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_0__.Union);\nfunction ErrorReason$reflection() {\n  return (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.union_type)(\"Thoth.Json.ErrorReason\", [], ErrorReason, function () {\n    return [[[\"Item1\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type], [\"Item2\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.obj_type]], [[\"Item1\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type], [\"Item2\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.obj_type], [\"Item3\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type]], [[\"Item1\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type], [\"Item2\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.obj_type]], [[\"Item1\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type], [\"Item2\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.obj_type]], [[\"Item1\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type], [\"Item2\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.obj_type], [\"Item3\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type]], [[\"Item1\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type], [\"Item2\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.obj_type]], [[\"Item\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type]], [[\"Item\", (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.list_type)(_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type)]]];\n  });\n}\nvar CaseStrategy = /*#__PURE__*/function (_Union2) {\n  _inherits(CaseStrategy, _Union2);\n  var _super2 = _createSuper(CaseStrategy);\n  function CaseStrategy(tag) {\n    var _this2;\n    _classCallCheck(this, CaseStrategy);\n    _this2 = _super2.call(this);\n    _this2.tag = tag | 0;\n    for (var _len2 = arguments.length, fields = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      fields[_key2 - 1] = arguments[_key2];\n    }\n    _this2.fields = fields;\n    return _this2;\n  }\n  _createClass(CaseStrategy, [{\n    key: \"cases\",\n    value: function cases() {\n      return [\"PascalCase\", \"CamelCase\", \"SnakeCase\"];\n    }\n  }]);\n  return CaseStrategy;\n}(_fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_0__.Union);\nfunction CaseStrategy$reflection() {\n  return (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.union_type)(\"Thoth.Json.CaseStrategy\", [], CaseStrategy, function () {\n    return [[], [], []];\n  });\n}\nvar ExtraCoders = /*#__PURE__*/function (_Record) {\n  _inherits(ExtraCoders, _Record);\n  var _super3 = _createSuper(ExtraCoders);\n  function ExtraCoders(Hash, Coders) {\n    var _this3;\n    _classCallCheck(this, ExtraCoders);\n    _this3 = _super3.call(this);\n    _this3.Hash = Hash;\n    _this3.Coders = Coders;\n    return _this3;\n  }\n  return _createClass(ExtraCoders);\n}(_fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_0__.Record);\nfunction ExtraCoders$reflection() {\n  return (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.record_type)(\"Thoth.Json.ExtraCoders\", [], ExtraCoders, function () {\n    return [[\"Hash\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type], [\"Coders\", (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.class_type)(\"Microsoft.FSharp.Collections.FSharpMap`2\", [_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.tuple_type)((0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.lambda_type)(_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.obj_type, _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.obj_type), (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.lambda_type)(_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.lambda_type)(_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.obj_type, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.union_type)(\"Microsoft.FSharp.Core.FSharpResult`2\", [_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.obj_type, (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.tuple_type)(_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type, ErrorReason$reflection())], _fable_library_3_7_2_Choice_js__WEBPACK_IMPORTED_MODULE_2__.FSharpResult$2, function () {\n      return [[[\"ResultValue\", _fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.obj_type]], [[\"ErrorValue\", (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.tuple_type)(_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.string_type, ErrorReason$reflection())]]];\n    }))))])]];\n  });\n}\nvar Util_Cache$1 = /*#__PURE__*/_createClass(function Util_Cache$1() {\n  _classCallCheck(this, Util_Cache$1);\n  this.cache = new Map([]);\n});\nfunction Util_Cache$1$reflection(gen0) {\n  return (0,_fable_library_3_7_2_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.class_type)(\"Thoth.Json.Util.Cache`1\", [gen0], Util_Cache$1);\n}\nfunction Util_Cache$1_$ctor() {\n  return new Util_Cache$1();\n}\nfunction Util_Cache$1__GetOrAdd_43981464(__, key, factory) {\n  var matchValue;\n  var outArg = null;\n  matchValue = [(0,_fable_library_3_7_2_MapUtil_js__WEBPACK_IMPORTED_MODULE_3__.tryGetValue)(__.cache, key, new _fable_library_3_7_2_Types_js__WEBPACK_IMPORTED_MODULE_0__.FSharpRef(function () {\n    return outArg;\n  }, function (v) {\n    outArg = v;\n  })), outArg];\n  if (matchValue[0]) {\n    return matchValue[1];\n  } else {\n    var x_1 = factory();\n    (0,_fable_library_3_7_2_MapUtil_js__WEBPACK_IMPORTED_MODULE_3__.addToDict)(__.cache, key, x_1);\n    return x_1;\n  }\n}\nvar Util_CachedEncoders = Util_Cache$1_$ctor();\nvar Util_CachedDecoders = Util_Cache$1_$ctor();\nfunction Util_Casing_lowerFirst(str) {\n  return str.slice(void 0, 0 + 1).toLowerCase() + str.slice(1, str.length);\n}\nfunction Util_Casing_convert(caseStrategy, fieldName) {\n  switch (caseStrategy.tag) {\n    case 2:\n      {\n        return (0,_fable_library_3_7_2_RegExp_js__WEBPACK_IMPORTED_MODULE_4__.replace)(Util_Casing_lowerFirst(fieldName), \"[A-Z]\", \"_$0\").toLowerCase();\n      }\n    case 0:\n      {\n        return fieldName;\n      }\n    default:\n      {\n        return Util_Casing_lowerFirst(fieldName);\n      }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL1Rob3RoLkpzb24uOS4wLjAvVHlwZXMuZnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFzQ1EsYUFBWTs7Ozs7Ozs7eUNBQ0xBLElBQVlDLEtBQUtDO01BQ2RDO01BQUFDO0VBQUFELGNBQUFBLDRFQUFBQSxXQUFrQkYsU0FBQUEsb0VBQUFBO0lBQUFBLE9BQWxCRztFQUFBQTtJQUFBQTtPQUFBQTtFQUFBO1dBQ09EOztRQUVMRSxNQUFJSDtJQUNSSSwwRUFBQUEsV0FBVUwsS0FBS0k7V0FDZkE7OzswQkFJU0U7MEJBQ0FBO2dDQUdEQztTQUFnQkEsVUFBSyxRQUFFLHVCQUF3QkEsVUFBSyxHQUFMQTs7NkJBQ25EQyxjQUFhQztVQUNmRDs7O2VBRVNFLHVFQUFBQSxDQUFjQyx1QkFBV0YsWUFBVyxTQUFROzs7O2VBQzNDQTs7OztlQUZERSx1QkFBV0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9UeXBlcy5mcz83NTgxIl0sIm5hbWVzIjpbIl9fIiwia2V5IiwiZmFjdG9yeSIsIm1hdGNoVmFsdWUiLCJvdXRBcmciLCJ4IiwiYWRkVG9EaWN0IiwiVXRpbF9DYWNoZSQxXyRjdG9yIiwic3RyIiwiY2FzZVN0cmF0ZWd5IiwiZmllbGROYW1lIiwicmVwbGFjZSIsIlV0aWxfQ2FzaW5nX2xvd2VyRmlyc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/Thoth.Json.9.0.0/Types.fs.js\n");

/***/ }),

/***/ "./src/Client/Components/youtube.jsx":
/*!*******************************************!*\
  !*** ./src/Client/Components/youtube.jsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MyReactYouTube\": () => (/* binding */ MyReactYouTube)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_youtube__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-youtube */ \"./node_modules/react-youtube/dist/YouTube.esm.js\");\n\n\nvar opts = {\n  height: '390',\n  width: '640',\n  playerVars: {\n    autoplay: 1\n  }\n};\nvar _onReady = function _onReady(event) {\n  // access to player in all event handlers via event.target\n  event.target.pauseVideo();\n};\nvar MyReactYouTube = function MyReactYouTube(_ref) {\n  var videoId = _ref.videoId;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_youtube__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n    videoId: videoId,\n    opts: opts,\n    onReady: _onReady\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50L0NvbXBvbmVudHMveW91dHViZS5qc3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlCO0FBQ1U7QUFFbkMsSUFBTUUsSUFBSSxHQUFHO0VBQ1RDLE1BQU0sRUFBRSxLQUFLO0VBQ2JDLEtBQUssRUFBRSxLQUFLO0VBQ1pDLFVBQVUsRUFBRTtJQUNWQyxRQUFRLEVBQUU7RUFDWjtBQUNGLENBQUM7QUFFSCxJQUFNQyxRQUFRLEdBQUcsU0FBWEEsUUFBUSxDQUFhQyxLQUFLLEVBQUU7RUFDOUI7RUFDQUEsS0FBSyxDQUFDQyxNQUFNLENBQUNDLFVBQVUsRUFBRTtBQUM3QixDQUFDO0FBRU0sSUFBTUMsY0FBYyxHQUFHLFNBQWpCQSxjQUFjLE9BQW9CO0VBQUEsSUFBZEMsT0FBTyxRQUFQQSxPQUFPO0VBQ3BDLG9CQUFPLGlEQUFDLHFEQUFPO0lBQUMsT0FBTyxFQUFFQSxPQUFRO0lBQUMsSUFBSSxFQUFFVixJQUFLO0lBQUMsT0FBTyxFQUFFSztFQUFTLEVBQUc7QUFDdkUsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9DbGllbnQvQ29tcG9uZW50cy95b3V0dWJlLmpzeD8xOGM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IFlvdVR1YmUgZnJvbSBcInJlYWN0LXlvdXR1YmVcIlxuXG5jb25zdCBvcHRzID0ge1xuICAgIGhlaWdodDogJzM5MCcsXG4gICAgd2lkdGg6ICc2NDAnLFxuICAgIHBsYXllclZhcnM6IHtcbiAgICAgIGF1dG9wbGF5OiAxLFxuICAgIH0sXG4gIH07XG5cbmNvbnN0IF9vblJlYWR5ID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgLy8gYWNjZXNzIHRvIHBsYXllciBpbiBhbGwgZXZlbnQgaGFuZGxlcnMgdmlhIGV2ZW50LnRhcmdldFxuICAgIGV2ZW50LnRhcmdldC5wYXVzZVZpZGVvKCk7XG59XG5cbmV4cG9ydCBjb25zdCBNeVJlYWN0WW91VHViZSA9ICh7IHZpZGVvSWQgfSkgPT4ge1xuICAgIHJldHVybiA8WW91VHViZSB2aWRlb0lkPXt2aWRlb0lkfSBvcHRzPXtvcHRzfSBvblJlYWR5PXtfb25SZWFkeX0gLz5cbn0iXSwibmFtZXMiOlsiUmVhY3QiLCJZb3VUdWJlIiwib3B0cyIsImhlaWdodCIsIndpZHRoIiwicGxheWVyVmFycyIsImF1dG9wbGF5IiwiX29uUmVhZHkiLCJldmVudCIsInRhcmdldCIsInBhdXNlVmlkZW8iLCJNeVJlYWN0WW91VHViZSIsInZpZGVvSWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Client/Components/youtube.jsx\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js":
/*!**********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Helpers_allocateArrayFromCons\": () => (/* binding */ Helpers_allocateArrayFromCons),\n/* harmony export */   \"append\": () => (/* binding */ append),\n/* harmony export */   \"filter\": () => (/* binding */ filter),\n/* harmony export */   \"fill\": () => (/* binding */ fill),\n/* harmony export */   \"getSubArray\": () => (/* binding */ getSubArray),\n/* harmony export */   \"last\": () => (/* binding */ last),\n/* harmony export */   \"tryLast\": () => (/* binding */ tryLast),\n/* harmony export */   \"mapIndexed\": () => (/* binding */ mapIndexed),\n/* harmony export */   \"map\": () => (/* binding */ map),\n/* harmony export */   \"mapIndexed2\": () => (/* binding */ mapIndexed2),\n/* harmony export */   \"map2\": () => (/* binding */ map2),\n/* harmony export */   \"mapIndexed3\": () => (/* binding */ mapIndexed3),\n/* harmony export */   \"map3\": () => (/* binding */ map3),\n/* harmony export */   \"mapFold\": () => (/* binding */ mapFold),\n/* harmony export */   \"mapFoldBack\": () => (/* binding */ mapFoldBack),\n/* harmony export */   \"indexed\": () => (/* binding */ indexed),\n/* harmony export */   \"truncate\": () => (/* binding */ truncate),\n/* harmony export */   \"concat\": () => (/* binding */ concat),\n/* harmony export */   \"collect\": () => (/* binding */ collect),\n/* harmony export */   \"where\": () => (/* binding */ where),\n/* harmony export */   \"contains\": () => (/* binding */ contains),\n/* harmony export */   \"empty\": () => (/* binding */ empty),\n/* harmony export */   \"singleton\": () => (/* binding */ singleton),\n/* harmony export */   \"initialize\": () => (/* binding */ initialize),\n/* harmony export */   \"pairwise\": () => (/* binding */ pairwise),\n/* harmony export */   \"replicate\": () => (/* binding */ replicate),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"reverse\": () => (/* binding */ reverse),\n/* harmony export */   \"scan\": () => (/* binding */ scan),\n/* harmony export */   \"scanBack\": () => (/* binding */ scanBack),\n/* harmony export */   \"skip\": () => (/* binding */ skip),\n/* harmony export */   \"skipWhile\": () => (/* binding */ skipWhile),\n/* harmony export */   \"take\": () => (/* binding */ take),\n/* harmony export */   \"takeWhile\": () => (/* binding */ takeWhile),\n/* harmony export */   \"addInPlace\": () => (/* binding */ addInPlace),\n/* harmony export */   \"addRangeInPlace\": () => (/* binding */ addRangeInPlace),\n/* harmony export */   \"insertRangeInPlace\": () => (/* binding */ insertRangeInPlace),\n/* harmony export */   \"removeInPlace\": () => (/* binding */ removeInPlace),\n/* harmony export */   \"removeAllInPlace\": () => (/* binding */ removeAllInPlace),\n/* harmony export */   \"copyTo\": () => (/* binding */ copyTo),\n/* harmony export */   \"copyToTypedArray\": () => (/* binding */ copyToTypedArray),\n/* harmony export */   \"indexOf\": () => (/* binding */ indexOf),\n/* harmony export */   \"partition\": () => (/* binding */ partition),\n/* harmony export */   \"find\": () => (/* binding */ find),\n/* harmony export */   \"tryFind\": () => (/* binding */ tryFind),\n/* harmony export */   \"findIndex\": () => (/* binding */ findIndex),\n/* harmony export */   \"tryFindIndex\": () => (/* binding */ tryFindIndex),\n/* harmony export */   \"pick\": () => (/* binding */ pick),\n/* harmony export */   \"tryPick\": () => (/* binding */ tryPick),\n/* harmony export */   \"findBack\": () => (/* binding */ findBack),\n/* harmony export */   \"tryFindBack\": () => (/* binding */ tryFindBack),\n/* harmony export */   \"findLastIndex\": () => (/* binding */ findLastIndex),\n/* harmony export */   \"findIndexBack\": () => (/* binding */ findIndexBack),\n/* harmony export */   \"tryFindIndexBack\": () => (/* binding */ tryFindIndexBack),\n/* harmony export */   \"choose\": () => (/* binding */ choose),\n/* harmony export */   \"foldIndexed\": () => (/* binding */ foldIndexed),\n/* harmony export */   \"fold\": () => (/* binding */ fold),\n/* harmony export */   \"iterate\": () => (/* binding */ iterate),\n/* harmony export */   \"iterateIndexed\": () => (/* binding */ iterateIndexed),\n/* harmony export */   \"iterate2\": () => (/* binding */ iterate2),\n/* harmony export */   \"iterateIndexed2\": () => (/* binding */ iterateIndexed2),\n/* harmony export */   \"isEmpty\": () => (/* binding */ isEmpty),\n/* harmony export */   \"forAll\": () => (/* binding */ forAll),\n/* harmony export */   \"permute\": () => (/* binding */ permute),\n/* harmony export */   \"setSlice\": () => (/* binding */ setSlice),\n/* harmony export */   \"sortInPlaceBy\": () => (/* binding */ sortInPlaceBy),\n/* harmony export */   \"sortInPlace\": () => (/* binding */ sortInPlace),\n/* harmony export */   \"sort\": () => (/* binding */ sort),\n/* harmony export */   \"sortBy\": () => (/* binding */ sortBy),\n/* harmony export */   \"sortDescending\": () => (/* binding */ sortDescending),\n/* harmony export */   \"sortByDescending\": () => (/* binding */ sortByDescending),\n/* harmony export */   \"sortWith\": () => (/* binding */ sortWith),\n/* harmony export */   \"allPairs\": () => (/* binding */ allPairs),\n/* harmony export */   \"unfold\": () => (/* binding */ unfold),\n/* harmony export */   \"unzip\": () => (/* binding */ unzip),\n/* harmony export */   \"unzip3\": () => (/* binding */ unzip3),\n/* harmony export */   \"zip\": () => (/* binding */ zip),\n/* harmony export */   \"zip3\": () => (/* binding */ zip3),\n/* harmony export */   \"chunkBySize\": () => (/* binding */ chunkBySize),\n/* harmony export */   \"splitAt\": () => (/* binding */ splitAt),\n/* harmony export */   \"compareWith\": () => (/* binding */ compareWith),\n/* harmony export */   \"equalsWith\": () => (/* binding */ equalsWith),\n/* harmony export */   \"exactlyOne\": () => (/* binding */ exactlyOne),\n/* harmony export */   \"tryExactlyOne\": () => (/* binding */ tryExactlyOne),\n/* harmony export */   \"head\": () => (/* binding */ head),\n/* harmony export */   \"tryHead\": () => (/* binding */ tryHead),\n/* harmony export */   \"tail\": () => (/* binding */ tail),\n/* harmony export */   \"item\": () => (/* binding */ item),\n/* harmony export */   \"tryItem\": () => (/* binding */ tryItem),\n/* harmony export */   \"foldBackIndexed\": () => (/* binding */ foldBackIndexed),\n/* harmony export */   \"foldBack\": () => (/* binding */ foldBack),\n/* harmony export */   \"foldIndexed2\": () => (/* binding */ foldIndexed2),\n/* harmony export */   \"fold2\": () => (/* binding */ fold2),\n/* harmony export */   \"foldBackIndexed2\": () => (/* binding */ foldBackIndexed2),\n/* harmony export */   \"foldBack2\": () => (/* binding */ foldBack2),\n/* harmony export */   \"reduce\": () => (/* binding */ reduce),\n/* harmony export */   \"reduceBack\": () => (/* binding */ reduceBack),\n/* harmony export */   \"forAll2\": () => (/* binding */ forAll2),\n/* harmony export */   \"existsOffset\": () => (/* binding */ existsOffset),\n/* harmony export */   \"exists\": () => (/* binding */ exists),\n/* harmony export */   \"existsOffset2\": () => (/* binding */ existsOffset2),\n/* harmony export */   \"exists2\": () => (/* binding */ exists2),\n/* harmony export */   \"sum\": () => (/* binding */ sum),\n/* harmony export */   \"sumBy\": () => (/* binding */ sumBy),\n/* harmony export */   \"maxBy\": () => (/* binding */ maxBy),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"minBy\": () => (/* binding */ minBy),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"average\": () => (/* binding */ average),\n/* harmony export */   \"averageBy\": () => (/* binding */ averageBy),\n/* harmony export */   \"windowed\": () => (/* binding */ windowed),\n/* harmony export */   \"splitInto\": () => (/* binding */ splitInto),\n/* harmony export */   \"transpose\": () => (/* binding */ transpose),\n/* harmony export */   \"insertAt\": () => (/* binding */ insertAt),\n/* harmony export */   \"insertManyAt\": () => (/* binding */ insertManyAt),\n/* harmony export */   \"removeAt\": () => (/* binding */ removeAt),\n/* harmony export */   \"removeManyAt\": () => (/* binding */ removeManyAt),\n/* harmony export */   \"updateAt\": () => (/* binding */ updateAt)\n/* harmony export */ });\n/* harmony import */ var _Option_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Option.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _Global_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Global.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Global.js\");\n\n\n\nfunction Helpers_allocateArrayFromCons(cons, len) {\n  if (typeof cons === \"function\") {\n    return new cons(len);\n  } else {\n    return new Array(len);\n  }\n}\nfunction indexNotFound() {\n  throw new Error(\"An index satisfying the predicate was not found in the collection.\");\n}\nfunction differentLengths() {\n  throw new Error(\"Arrays had different lengths\");\n}\nfunction append(array1, array2, cons) {\n  var len1 = array1.length | 0;\n  var len2 = array2.length | 0;\n  var newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\n  for (var i = 0; i <= len1 - 1; i++) {\n    newArray[i] = array1[i];\n  }\n  for (var i_1 = 0; i_1 <= len2 - 1; i_1++) {\n    newArray[i_1 + len1] = array2[i_1];\n  }\n  return newArray;\n}\nfunction filter(predicate, array) {\n  return array.filter(predicate);\n}\nfunction fill(target, targetIndex, count, value) {\n  var start = targetIndex | 0;\n  return target.fill(value, start, start + count);\n}\nfunction getSubArray(array, start, count) {\n  var start_1 = start | 0;\n  return array.slice(start_1, start_1 + count);\n}\nfunction last(array) {\n  if (array.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n  return array[array.length - 1];\n}\nfunction tryLast(array) {\n  if (array.length === 0) {\n    return void 0;\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_0__.some)(array[array.length - 1]);\n  }\n}\nfunction mapIndexed(f, source, cons) {\n  var len = source.length | 0;\n  var target = Helpers_allocateArrayFromCons(cons, len);\n  for (var i = 0; i <= len - 1; i++) {\n    target[i] = f(i, source[i]);\n  }\n  return target;\n}\nfunction map(f, source, cons) {\n  var len = source.length | 0;\n  var target = Helpers_allocateArrayFromCons(cons, len);\n  for (var i = 0; i <= len - 1; i++) {\n    target[i] = f(source[i]);\n  }\n  return target;\n}\nfunction mapIndexed2(f, source1, source2, cons) {\n  if (source1.length !== source2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n  var result = Helpers_allocateArrayFromCons(cons, source1.length);\n  for (var i = 0; i <= source1.length - 1; i++) {\n    result[i] = f(i, source1[i], source2[i]);\n  }\n  return result;\n}\nfunction map2(f, source1, source2, cons) {\n  if (source1.length !== source2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n  var result = Helpers_allocateArrayFromCons(cons, source1.length);\n  for (var i = 0; i <= source1.length - 1; i++) {\n    result[i] = f(source1[i], source2[i]);\n  }\n  return result;\n}\nfunction mapIndexed3(f, source1, source2, source3, cons) {\n  if (source1.length !== source2.length ? true : source2.length !== source3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n  var result = Helpers_allocateArrayFromCons(cons, source1.length);\n  for (var i = 0; i <= source1.length - 1; i++) {\n    result[i] = f(i, source1[i], source2[i], source3[i]);\n  }\n  return result;\n}\nfunction map3(f, source1, source2, source3, cons) {\n  if (source1.length !== source2.length ? true : source2.length !== source3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n  var result = Helpers_allocateArrayFromCons(cons, source1.length);\n  for (var i = 0; i <= source1.length - 1; i++) {\n    result[i] = f(source1[i], source2[i], source3[i]);\n  }\n  return result;\n}\nfunction mapFold(mapping, state, array, cons) {\n  var matchValue = array.length | 0;\n  if (matchValue === 0) {\n    return [[], state];\n  } else {\n    var acc = state;\n    var res = Helpers_allocateArrayFromCons(cons, matchValue);\n    for (var i = 0; i <= array.length - 1; i++) {\n      var patternInput = mapping(acc, array[i]);\n      res[i] = patternInput[0];\n      acc = patternInput[1];\n    }\n    return [res, acc];\n  }\n}\nfunction mapFoldBack(mapping, array, state, cons) {\n  var matchValue = array.length | 0;\n  if (matchValue === 0) {\n    return [[], state];\n  } else {\n    var acc = state;\n    var res = Helpers_allocateArrayFromCons(cons, matchValue);\n    for (var i = array.length - 1; i >= 0; i--) {\n      var patternInput = mapping(array[i], acc);\n      res[i] = patternInput[0];\n      acc = patternInput[1];\n    }\n    return [res, acc];\n  }\n}\nfunction indexed(source) {\n  var len = source.length | 0;\n  var target = new Array(len);\n  for (var i = 0; i <= len - 1; i++) {\n    target[i] = [i, source[i]];\n  }\n  return target;\n}\nfunction truncate(count, array) {\n  var count_1 = (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.max)(_Util_js__WEBPACK_IMPORTED_MODULE_1__.comparePrimitives, 0, count) | 0;\n  var start = 0;\n  return array.slice(start, start + count_1);\n}\nfunction concat(arrays, cons) {\n  var arrays_1 = Array.isArray(arrays) ? arrays : Array.from(arrays);\n  var matchValue = arrays_1.length | 0;\n  switch (matchValue) {\n    case 0:\n      {\n        return Helpers_allocateArrayFromCons(cons, 0);\n      }\n    case 1:\n      {\n        return arrays_1[0];\n      }\n    default:\n      {\n        var totalIdx = 0;\n        var totalLength = 0;\n        for (var idx = 0; idx <= arrays_1.length - 1; idx++) {\n          var arr_1 = arrays_1[idx];\n          totalLength = totalLength + arr_1.length | 0;\n        }\n        var result = Helpers_allocateArrayFromCons(cons, totalLength);\n        for (var idx_1 = 0; idx_1 <= arrays_1.length - 1; idx_1++) {\n          var arr_2 = arrays_1[idx_1];\n          for (var j = 0; j <= arr_2.length - 1; j++) {\n            result[totalIdx] = arr_2[j];\n            totalIdx = totalIdx + 1 | 0;\n          }\n        }\n        return result;\n      }\n  }\n}\nfunction collect(mapping, array, cons) {\n  return concat(map(mapping, array, null), cons);\n}\nfunction where(predicate, array) {\n  return array.filter(predicate);\n}\nfunction contains(value, array, eq) {\n  var loop = function loop(i_mut) {\n    loop: while (true) {\n      var i = i_mut;\n      if (i >= array.length) {\n        return false;\n      } else if (eq.Equals(value, array[i])) {\n        return true;\n      } else {\n        i_mut = i + 1;\n        continue loop;\n      }\n      break;\n    }\n  };\n  return loop(0);\n}\nfunction empty(cons) {\n  return Helpers_allocateArrayFromCons(cons, 0);\n}\nfunction singleton(value, cons) {\n  var ar = Helpers_allocateArrayFromCons(cons, 1);\n  ar[0] = value;\n  return ar;\n}\nfunction initialize(count, initializer, cons) {\n  if (count < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n  var result = Helpers_allocateArrayFromCons(cons, count);\n  for (var i = 0; i <= count - 1; i++) {\n    result[i] = initializer(i);\n  }\n  return result;\n}\nfunction pairwise(array) {\n  if (array.length < 2) {\n    return [];\n  } else {\n    var count = array.length - 1 | 0;\n    var result = new Array(count);\n    for (var i = 0; i <= count - 1; i++) {\n      result[i] = [array[i], array[i + 1]];\n    }\n    return result;\n  }\n}\nfunction replicate(count, initial, cons) {\n  if (count < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n  var result = Helpers_allocateArrayFromCons(cons, count);\n  for (var i = 0; i <= result.length - 1; i++) {\n    result[i] = initial;\n  }\n  return result;\n}\nfunction copy(array) {\n  return array.slice();\n}\nfunction reverse(array) {\n  var array_2 = array.slice();\n  return array_2.reverse();\n}\nfunction scan(folder, state, array, cons) {\n  var res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n  res[0] = state;\n  for (var i = 0; i <= array.length - 1; i++) {\n    res[i + 1] = folder(res[i], array[i]);\n  }\n  return res;\n}\nfunction scanBack(folder, array, state, cons) {\n  var res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n  res[array.length] = state;\n  for (var i = array.length - 1; i >= 0; i--) {\n    res[i] = folder(array[i], res[i + 1]);\n  }\n  return res;\n}\nfunction skip(count, array, cons) {\n  if (count > array.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n  if (count === array.length) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n  } else {\n    var count_1 = (count < 0 ? 0 : count) | 0;\n    return array.slice(count_1);\n  }\n}\nfunction skipWhile(predicate, array, cons) {\n  var count = 0;\n  while (count < array.length && predicate(array[count])) {\n    count = count + 1 | 0;\n  }\n  if (count === array.length) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n  } else {\n    var count_1 = count | 0;\n    return array.slice(count_1);\n  }\n}\nfunction take(count, array, cons) {\n  if (count < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n  if (count > array.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n  if (count === 0) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n  } else {\n    var start = 0;\n    return array.slice(start, start + count);\n  }\n}\nfunction takeWhile(predicate, array, cons) {\n  var count = 0;\n  while (count < array.length && predicate(array[count])) {\n    count = count + 1 | 0;\n  }\n  if (count === 0) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n  } else {\n    var start = 0;\n    var count_1 = count | 0;\n    return array.slice(start, start + count_1);\n  }\n}\nfunction addInPlace(x, array) {\n  array.push(x);\n}\nfunction addRangeInPlace(range, array) {\n  var enumerator = (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.getEnumerator)(range);\n  try {\n    while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\n    }\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.disposeSafe)(enumerator);\n  }\n}\nfunction insertRangeInPlace(index, range, array) {\n  var index_1;\n  var i = index;\n  var enumerator = (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.getEnumerator)(range);\n  try {\n    while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      var x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n      index_1 = i | 0, array.splice(index_1, 0, x);\n      i = i + 1 | 0;\n    }\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.disposeSafe)(enumerator);\n  }\n}\nfunction removeInPlace(item_1, array) {\n  var i = array.indexOf(item_1, 0) | 0;\n  if (i > -1) {\n    array.splice(i, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction removeAllInPlace(predicate, array) {\n  var countRemoveAll = function countRemoveAll(count) {\n    var i = array.findIndex(predicate) | 0;\n    if (i > -1) {\n      array.splice(i, 1);\n      return countRemoveAll(count) + 1 | 0;\n    } else {\n      return count | 0;\n    }\n  };\n  return countRemoveAll(0) | 0;\n}\nfunction copyTo(source, sourceIndex, target, targetIndex, count) {\n  var diff = targetIndex - sourceIndex | 0;\n  for (var i = sourceIndex; i <= sourceIndex + count - 1; i++) {\n    target[i + diff] = source[i];\n  }\n}\nfunction copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\n  try {\n    target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\n  } catch (matchValue) {\n    copyTo(source, sourceIndex, target, targetIndex, count);\n  }\n}\nfunction indexOf(array, item_1, start, count) {\n  var start_1 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_0__.defaultArg)(start, 0) | 0;\n  var i = array.indexOf(item_1, start_1) | 0;\n  if (count != null && i >= start_1 + (0,_Option_js__WEBPACK_IMPORTED_MODULE_0__.value)(count)) {\n    return -1;\n  } else {\n    return i | 0;\n  }\n}\nfunction partition(f, source, cons) {\n  var len = source.length | 0;\n  var res1 = Helpers_allocateArrayFromCons(cons, len);\n  var res2 = Helpers_allocateArrayFromCons(cons, len);\n  var iTrue = 0;\n  var iFalse = 0;\n  for (var i = 0; i <= len - 1; i++) {\n    if (f(source[i])) {\n      res1[iTrue] = source[i];\n      iTrue = iTrue + 1 | 0;\n    } else {\n      res2[iFalse] = source[i];\n      iFalse = iFalse + 1 | 0;\n    }\n  }\n  return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\nfunction find(predicate, array) {\n  var matchValue = array.find(predicate);\n  if (matchValue == null) {\n    return indexNotFound();\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_0__.value)(matchValue);\n  }\n}\nfunction tryFind(predicate, array) {\n  return array.find(predicate);\n}\nfunction findIndex(predicate, array) {\n  var matchValue = array.findIndex(predicate) | 0;\n  if (matchValue > -1) {\n    return matchValue | 0;\n  } else {\n    return indexNotFound() | 0;\n  }\n}\nfunction tryFindIndex(predicate, array) {\n  var matchValue = array.findIndex(predicate) | 0;\n  if (matchValue > -1) {\n    return matchValue;\n  } else {\n    return void 0;\n  }\n}\nfunction pick(chooser, array) {\n  var loop = function loop(i_mut) {\n    loop: while (true) {\n      var i = i_mut;\n      if (i >= array.length) {\n        return indexNotFound();\n      } else {\n        var matchValue = chooser(array[i]);\n        if (matchValue != null) {\n          return (0,_Option_js__WEBPACK_IMPORTED_MODULE_0__.value)(matchValue);\n        } else {\n          i_mut = i + 1;\n          continue loop;\n        }\n      }\n      break;\n    }\n  };\n  return loop(0);\n}\nfunction tryPick(chooser, array) {\n  var loop = function loop(i_mut) {\n    loop: while (true) {\n      var i = i_mut;\n      if (i >= array.length) {\n        return void 0;\n      } else {\n        var matchValue = chooser(array[i]);\n        if (matchValue == null) {\n          i_mut = i + 1;\n          continue loop;\n        } else {\n          return matchValue;\n        }\n      }\n      break;\n    }\n  };\n  return loop(0);\n}\nfunction findBack(predicate, array) {\n  var loop = function loop(i_mut) {\n    loop: while (true) {\n      var i = i_mut;\n      if (i < 0) {\n        return indexNotFound();\n      } else if (predicate(array[i])) {\n        return array[i];\n      } else {\n        i_mut = i - 1;\n        continue loop;\n      }\n      break;\n    }\n  };\n  return loop(array.length - 1);\n}\nfunction tryFindBack(predicate, array) {\n  var loop = function loop(i_mut) {\n    loop: while (true) {\n      var i = i_mut;\n      if (i < 0) {\n        return void 0;\n      } else if (predicate(array[i])) {\n        return (0,_Option_js__WEBPACK_IMPORTED_MODULE_0__.some)(array[i]);\n      } else {\n        i_mut = i - 1;\n        continue loop;\n      }\n      break;\n    }\n  };\n  return loop(array.length - 1);\n}\nfunction findLastIndex(predicate, array) {\n  var loop = function loop(i_mut) {\n    loop: while (true) {\n      var i = i_mut;\n      if (i < 0) {\n        return -1;\n      } else if (predicate(array[i])) {\n        return i | 0;\n      } else {\n        i_mut = i - 1;\n        continue loop;\n      }\n      break;\n    }\n  };\n  return loop(array.length - 1) | 0;\n}\nfunction findIndexBack(predicate, array) {\n  var loop = function loop(i_mut) {\n    loop: while (true) {\n      var i = i_mut;\n      if (i < 0) {\n        return indexNotFound() | 0;\n      } else if (predicate(array[i])) {\n        return i | 0;\n      } else {\n        i_mut = i - 1;\n        continue loop;\n      }\n      break;\n    }\n  };\n  return loop(array.length - 1) | 0;\n}\nfunction tryFindIndexBack(predicate, array) {\n  var loop = function loop(i_mut) {\n    loop: while (true) {\n      var i = i_mut;\n      if (i < 0) {\n        return void 0;\n      } else if (predicate(array[i])) {\n        return i;\n      } else {\n        i_mut = i - 1;\n        continue loop;\n      }\n      break;\n    }\n  };\n  return loop(array.length - 1);\n}\nfunction choose(chooser, array, cons) {\n  var res = [];\n  for (var i = 0; i <= array.length - 1; i++) {\n    var matchValue = chooser(array[i]);\n    if (matchValue != null) {\n      var y = (0,_Option_js__WEBPACK_IMPORTED_MODULE_0__.value)(matchValue);\n      res.push(y);\n    }\n  }\n  if (typeof cons === \"function\") {\n    return map(function (x) {\n      return x;\n    }, res, cons);\n  } else {\n    return res;\n  }\n}\nfunction foldIndexed(folder, state, array) {\n  return array.reduce(function (delegateArg0, delegateArg1, delegateArg2) {\n    return folder(delegateArg2, delegateArg0, delegateArg1);\n  }, state);\n}\nfunction fold(folder, state, array) {\n  return array.reduce(folder, state);\n}\nfunction iterate(action, array) {\n  for (var i = 0; i <= array.length - 1; i++) {\n    action(array[i]);\n  }\n}\nfunction iterateIndexed(action, array) {\n  for (var i = 0; i <= array.length - 1; i++) {\n    action(i, array[i]);\n  }\n}\nfunction iterate2(action, array1, array2) {\n  if (array1.length !== array2.length) {\n    differentLengths();\n  }\n  for (var i = 0; i <= array1.length - 1; i++) {\n    action(array1[i], array2[i]);\n  }\n}\nfunction iterateIndexed2(action, array1, array2) {\n  if (array1.length !== array2.length) {\n    differentLengths();\n  }\n  for (var i = 0; i <= array1.length - 1; i++) {\n    action(i, array1[i], array2[i]);\n  }\n}\nfunction isEmpty(array) {\n  return array.length === 0;\n}\nfunction forAll(predicate, array) {\n  return array.every(predicate);\n}\nfunction permute(f, array) {\n  var size = array.length | 0;\n  var res = array.slice();\n  var checkFlags = new Array(size);\n  iterateIndexed(function (i, x) {\n    var j = f(i) | 0;\n    if (j < 0 ? true : j >= size) {\n      throw new Error(\"Not a valid permutation\");\n    }\n    res[j] = x;\n    checkFlags[j] = 1;\n  }, array);\n  if (!checkFlags.every(function (y) {\n    return 1 === y;\n  })) {\n    throw new Error(\"Not a valid permutation\");\n  }\n  return res;\n}\nfunction setSlice(target, lower, upper, source) {\n  var lower_1 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_0__.defaultArg)(lower, 0) | 0;\n  var upper_1 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_0__.defaultArg)(upper, 0) | 0;\n  var length = (upper_1 > 0 ? upper_1 : target.length - 1) - lower_1 | 0;\n  for (var i = 0; i <= length; i++) {\n    target[i + lower_1] = source[i];\n  }\n}\nfunction sortInPlaceBy(projection, xs, comparer) {\n  xs.sort(function (x, y) {\n    return comparer.Compare(projection(x), projection(y));\n  });\n}\nfunction sortInPlace(xs, comparer) {\n  xs.sort(function (x, y) {\n    return comparer.Compare(x, y);\n  });\n}\nfunction sort(xs, comparer) {\n  var xs_1 = xs.slice();\n  xs_1.sort(function (x, y) {\n    return comparer.Compare(x, y);\n  });\n  return xs_1;\n}\nfunction sortBy(projection, xs, comparer) {\n  var xs_1 = xs.slice();\n  return xs_1.sort(function (x, y) {\n    return comparer.Compare(projection(x), projection(y));\n  }), xs_1;\n}\nfunction sortDescending(xs, comparer) {\n  var xs_1 = xs.slice();\n  xs_1.sort(function (x, y) {\n    return comparer.Compare(x, y) * -1;\n  });\n  return xs_1;\n}\nfunction sortByDescending(projection, xs, comparer) {\n  var xs_1 = xs.slice();\n  return xs_1.sort(function (x, y) {\n    return comparer.Compare(projection(x), projection(y)) * -1;\n  }), xs_1;\n}\nfunction sortWith(comparer, xs) {\n  var comparer_1 = comparer;\n  var xs_1 = xs.slice();\n  xs_1.sort(comparer_1);\n  return xs_1;\n}\nfunction allPairs(xs, ys) {\n  var len1 = xs.length | 0;\n  var len2 = ys.length | 0;\n  var res = new Array(len1 * len2);\n  for (var i = 0; i <= xs.length - 1; i++) {\n    for (var j = 0; j <= ys.length - 1; j++) {\n      res[i * len2 + j] = [xs[i], ys[j]];\n    }\n  }\n  return res;\n}\nfunction unfold(generator, state) {\n  var res = [];\n  var loop = function loop(state_1_mut) {\n    loop: while (true) {\n      var state_1 = state_1_mut;\n      var matchValue = generator(state_1);\n      if (matchValue != null) {\n        var x = matchValue[0];\n        var s = matchValue[1];\n        res.push(x);\n        state_1_mut = s;\n        continue loop;\n      }\n      break;\n    }\n  };\n  loop(state);\n  return res;\n}\nfunction unzip(array) {\n  var len = array.length | 0;\n  var res1 = new Array(len);\n  var res2 = new Array(len);\n  iterateIndexed(function (i, tupledArg) {\n    res1[i] = tupledArg[0];\n    res2[i] = tupledArg[1];\n  }, array);\n  return [res1, res2];\n}\nfunction unzip3(array) {\n  var len = array.length | 0;\n  var res1 = new Array(len);\n  var res2 = new Array(len);\n  var res3 = new Array(len);\n  iterateIndexed(function (i, tupledArg) {\n    res1[i] = tupledArg[0];\n    res2[i] = tupledArg[1];\n    res3[i] = tupledArg[2];\n  }, array);\n  return [res1, res2, res3];\n}\nfunction zip(array1, array2) {\n  if (array1.length !== array2.length) {\n    differentLengths();\n  }\n  var result = new Array(array1.length);\n  for (var i = 0; i <= array1.length - 1; i++) {\n    result[i] = [array1[i], array2[i]];\n  }\n  return result;\n}\nfunction zip3(array1, array2, array3) {\n  if (array1.length !== array2.length ? true : array2.length !== array3.length) {\n    differentLengths();\n  }\n  var result = new Array(array1.length);\n  for (var i = 0; i <= array1.length - 1; i++) {\n    result[i] = [array1[i], array2[i], array3[i]];\n  }\n  return result;\n}\nfunction chunkBySize(chunkSize, array) {\n  if (chunkSize < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: size\");\n  }\n  if (array.length === 0) {\n    return [[]];\n  } else {\n    var result = [];\n    for (var x = 0; x <= ~~Math.ceil(array.length / chunkSize) - 1; x++) {\n      var slice = void 0;\n      var start_1 = x * chunkSize | 0;\n      slice = array.slice(start_1, start_1 + chunkSize);\n      result.push(slice);\n    }\n    return result;\n  }\n}\nfunction splitAt(index, array) {\n  var start;\n  if (index < 0 ? true : index > array.length) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_2__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }\n  return [(start = 0, array.slice(start, start + index)), array.slice(index)];\n}\nfunction compareWith(comparer, array1, array2) {\n  if (array1 == null) {\n    if (array2 == null) {\n      return 0;\n    } else {\n      return -1;\n    }\n  } else if (array2 == null) {\n    return 1;\n  } else {\n    var i = 0;\n    var result = 0;\n    var length1 = array1.length | 0;\n    var length2 = array2.length | 0;\n    if (length1 > length2) {\n      return 1;\n    } else if (length1 < length2) {\n      return -1;\n    } else {\n      while (i < length1 && result === 0) {\n        result = comparer(array1[i], array2[i]) | 0;\n        i = i + 1 | 0;\n      }\n      return result | 0;\n    }\n  }\n}\nfunction equalsWith(equals, array1, array2) {\n  if (array1 == null) {\n    if (array2 == null) {\n      return true;\n    } else {\n      return false;\n    }\n  } else if (array2 == null) {\n    return false;\n  } else {\n    var i = 0;\n    var result = true;\n    var length1 = array1.length | 0;\n    var length2 = array2.length | 0;\n    if (length1 > length2) {\n      return false;\n    } else if (length1 < length2) {\n      return false;\n    } else {\n      while (i < length1 && result) {\n        result = equals(array1[i], array2[i]);\n        i = i + 1 | 0;\n      }\n      return result;\n    }\n  }\n}\nfunction exactlyOne(array) {\n  if (array.length === 1) {\n    return array[0];\n  } else if (array.length === 0) {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: array\");\n  } else {\n    throw new Error(\"Input array too long\\\\nParameter name: array\");\n  }\n}\nfunction tryExactlyOne(array) {\n  if (array.length === 1) {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_0__.some)(array[0]);\n  } else {\n    return void 0;\n  }\n}\nfunction head(array) {\n  if (array.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    return array[0];\n  }\n}\nfunction tryHead(array) {\n  if (array.length === 0) {\n    return void 0;\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_0__.some)(array[0]);\n  }\n}\nfunction tail(array) {\n  if (array.length === 0) {\n    throw new Error(\"Not enough elements\\\\nParameter name: array\");\n  }\n  return array.slice(1);\n}\nfunction item(index, array) {\n  return array[index];\n}\nfunction tryItem(index, array) {\n  if (index < 0 ? true : index >= array.length) {\n    return void 0;\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_0__.some)(array[index]);\n  }\n}\nfunction foldBackIndexed(folder, array, state) {\n  return array.reduceRight(function (delegateArg0, delegateArg1, delegateArg2) {\n    return folder(delegateArg2, delegateArg1, delegateArg0);\n  }, state);\n}\nfunction foldBack(folder, array, state) {\n  return array.reduceRight(function (delegateArg0, delegateArg1) {\n    return folder(delegateArg1, delegateArg0);\n  }, state);\n}\nfunction foldIndexed2(folder, state, array1, array2) {\n  var acc = state;\n  if (array1.length !== array2.length) {\n    throw new Error(\"Arrays have different lengths\");\n  }\n  for (var i = 0; i <= array1.length - 1; i++) {\n    acc = folder(i, acc, array1[i], array2[i]);\n  }\n  return acc;\n}\nfunction fold2(folder, state, array1, array2) {\n  return foldIndexed2(function (_arg1, acc, x, y) {\n    return folder(acc, x, y);\n  }, state, array1, array2);\n}\nfunction foldBackIndexed2(folder, array1, array2, state) {\n  var acc = state;\n  if (array1.length !== array2.length) {\n    differentLengths();\n  }\n  var size = array1.length | 0;\n  for (var i = 1; i <= size; i++) {\n    acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n  }\n  return acc;\n}\nfunction foldBack2(f, array1, array2, state) {\n  return foldBackIndexed2(function (_arg1, x, y, acc) {\n    return f(x, y, acc);\n  }, array1, array2, state);\n}\nfunction reduce(reduction, array) {\n  if (array.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n  var reduction_1 = reduction;\n  return array.reduce(reduction_1);\n}\nfunction reduceBack(reduction, array) {\n  if (array.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n  var reduction_1 = reduction;\n  return array.reduceRight(reduction_1);\n}\nfunction forAll2(predicate, array1, array2) {\n  return fold2(function (acc, x, y) {\n    return acc && predicate(x, y);\n  }, true, array1, array2);\n}\nfunction existsOffset(predicate_mut, array_mut, index_mut) {\n  existsOffset: while (true) {\n    var predicate = predicate_mut,\n      array = array_mut,\n      index = index_mut;\n    if (index === array.length) {\n      return false;\n    } else if (predicate(array[index])) {\n      return true;\n    } else {\n      predicate_mut = predicate;\n      array_mut = array;\n      index_mut = index + 1;\n      continue existsOffset;\n    }\n    break;\n  }\n}\nfunction exists(predicate, array) {\n  return existsOffset(predicate, array, 0);\n}\nfunction existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n  existsOffset2: while (true) {\n    var predicate = predicate_mut,\n      array1 = array1_mut,\n      array2 = array2_mut,\n      index = index_mut;\n    if (index === array1.length) {\n      return false;\n    } else if (predicate(array1[index], array2[index])) {\n      return true;\n    } else {\n      predicate_mut = predicate;\n      array1_mut = array1;\n      array2_mut = array2;\n      index_mut = index + 1;\n      continue existsOffset2;\n    }\n    break;\n  }\n}\nfunction exists2(predicate, array1, array2) {\n  if (array1.length !== array2.length) {\n    differentLengths();\n  }\n  return existsOffset2(predicate, array1, array2, 0);\n}\nfunction sum(array, adder) {\n  var acc = adder.GetZero();\n  for (var i = 0; i <= array.length - 1; i++) {\n    acc = adder.Add(acc, array[i]);\n  }\n  return acc;\n}\nfunction sumBy(projection, array, adder) {\n  var acc = adder.GetZero();\n  for (var i = 0; i <= array.length - 1; i++) {\n    acc = adder.Add(acc, projection(array[i]));\n  }\n  return acc;\n}\nfunction maxBy(projection, xs, comparer) {\n  return reduce(function (x, y) {\n    return comparer.Compare(projection(y), projection(x)) > 0 ? y : x;\n  }, xs);\n}\nfunction max(xs, comparer) {\n  return reduce(function (x, y) {\n    return comparer.Compare(y, x) > 0 ? y : x;\n  }, xs);\n}\nfunction minBy(projection, xs, comparer) {\n  return reduce(function (x, y) {\n    return comparer.Compare(projection(y), projection(x)) > 0 ? x : y;\n  }, xs);\n}\nfunction min(xs, comparer) {\n  return reduce(function (x, y) {\n    return comparer.Compare(y, x) > 0 ? x : y;\n  }, xs);\n}\nfunction average(array, averager) {\n  if (array.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n  var total = averager.GetZero();\n  for (var i = 0; i <= array.length - 1; i++) {\n    total = averager.Add(total, array[i]);\n  }\n  return averager.DivideByInt(total, array.length);\n}\nfunction averageBy(projection, array, averager) {\n  if (array.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n  var total = averager.GetZero();\n  for (var i = 0; i <= array.length - 1; i++) {\n    total = averager.Add(total, projection(array[i]));\n  }\n  return averager.DivideByInt(total, array.length);\n}\nfunction windowed(windowSize, source) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n  var res;\n  var len = (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.max)(_Util_js__WEBPACK_IMPORTED_MODULE_1__.comparePrimitives, 0, source.length - windowSize + 1) | 0;\n  res = new Array(len);\n  for (var i = windowSize; i <= source.length; i++) {\n    res[i - windowSize] = source.slice(i - windowSize, i - 1 + 1);\n  }\n  return res;\n}\nfunction splitInto(chunks, array) {\n  if (chunks < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: chunks\");\n  }\n  if (array.length === 0) {\n    return [[]];\n  } else {\n    var result = [];\n    var chunks_1 = (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.min)(_Util_js__WEBPACK_IMPORTED_MODULE_1__.comparePrimitives, chunks, array.length) | 0;\n    var minChunkSize = ~~(array.length / chunks_1) | 0;\n    var chunksWithExtraItem = array.length % chunks_1 | 0;\n    for (var i = 0; i <= chunks_1 - 1; i++) {\n      var chunkSize = (i < chunksWithExtraItem ? minChunkSize + 1 : minChunkSize) | 0;\n      var slice = void 0;\n      var start_1 = i * minChunkSize + (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.min)(_Util_js__WEBPACK_IMPORTED_MODULE_1__.comparePrimitives, chunksWithExtraItem, i) | 0;\n      slice = array.slice(start_1, start_1 + chunkSize);\n      result.push(slice);\n    }\n    return result;\n  }\n}\nfunction transpose(arrays, cons) {\n  var arrays_1 = Array.isArray(arrays) ? arrays : Array.from(arrays);\n  var len = arrays_1.length | 0;\n  if (len === 0) {\n    return new Array(0);\n  } else {\n    var firstArray = arrays_1[0];\n    var lenInner = firstArray.length | 0;\n    if (!forAll(function (a) {\n      return a.length === lenInner;\n    }, arrays_1)) {\n      differentLengths();\n    }\n    var result = new Array(lenInner);\n    for (var i = 0; i <= lenInner - 1; i++) {\n      result[i] = Helpers_allocateArrayFromCons(cons, len);\n      for (var j = 0; j <= len - 1; j++) {\n        result[i][j] = arrays_1[j][i];\n      }\n    }\n    return result;\n  }\n}\nfunction insertAt(index, y, xs) {\n  var len = xs.length | 0;\n  if (index < 0 ? true : index > len) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_2__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }\n  var target = new xs.constructor(len + 1);\n  for (var i = 0; i <= index - 1; i++) {\n    target[i] = xs[i];\n  }\n  target[index] = y;\n  for (var i_1 = index; i_1 <= len - 1; i_1++) {\n    target[i_1 + 1] = xs[i_1];\n  }\n  return target;\n}\nfunction insertManyAt(index, ys, xs) {\n  var len = xs.length | 0;\n  if (index < 0 ? true : index > len) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_2__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }\n  var ys_1 = Array.from(ys);\n  var len2 = ys_1.length | 0;\n  var target = new xs.constructor(len + len2);\n  for (var i = 0; i <= index - 1; i++) {\n    target[i] = xs[i];\n  }\n  for (var i_1 = 0; i_1 <= len2 - 1; i_1++) {\n    target[index + i_1] = ys_1[i_1];\n  }\n  for (var i_2 = index; i_2 <= len - 1; i_2++) {\n    target[i_2 + len2] = xs[i_2];\n  }\n  return target;\n}\nfunction removeAt(index, xs) {\n  if (index < 0 ? true : index >= xs.length) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_2__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }\n  var i = -1;\n  return filter(function (_arg1) {\n    i = i + 1 | 0;\n    return i !== index;\n  }, xs);\n}\nfunction removeManyAt(index, count, xs) {\n  var i = -1;\n  var status = -1;\n  var ys = filter(function (_arg1) {\n    i = i + 1 | 0;\n    if (i === index) {\n      status = 0;\n      return false;\n    } else if (i > index) {\n      if (i < index + count) {\n        return false;\n      } else {\n        status = 1;\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }, xs);\n  var status_1 = (status === 0 && i + 1 === index + count ? 1 : status) | 0;\n  if (status_1 < 1) {\n    var arg = status_1 < 0 ? \"index\" : \"count\";\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_2__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + arg);\n  }\n  return ys;\n}\nfunction updateAt(index, y, xs) {\n  var len = xs.length | 0;\n  if (index < 0 ? true : index >= len) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_2__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }\n  var target = new xs.constructor(len);\n  for (var i = 0; i <= len - 1; i++) {\n    target[i] = i === index ? y : xs[i];\n  }\n  return target;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/BigInt.js":
/*!***********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/BigInt.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isBigInt\": () => (/* binding */ isBigInt),\n/* harmony export */   \"tryParse\": () => (/* binding */ tryParse),\n/* harmony export */   \"divRem\": () => (/* binding */ divRem),\n/* harmony export */   \"parse\": () => (/* binding */ parse),\n/* harmony export */   \"greatestCommonDivisor\": () => (/* binding */ greatestCommonDivisor),\n/* harmony export */   \"pow\": () => (/* binding */ pow),\n/* harmony export */   \"abs\": () => (/* binding */ abs),\n/* harmony export */   \"zero\": () => (/* binding */ zero),\n/* harmony export */   \"one\": () => (/* binding */ one),\n/* harmony export */   \"two\": () => (/* binding */ two),\n/* harmony export */   \"fromString\": () => (/* binding */ fromString),\n/* harmony export */   \"fromZero\": () => (/* binding */ fromZero),\n/* harmony export */   \"fromOne\": () => (/* binding */ fromOne),\n/* harmony export */   \"fromInt64\": () => (/* binding */ fromInt64),\n/* harmony export */   \"fromInt32\": () => (/* binding */ fromInt32),\n/* harmony export */   \"toSByte\": () => (/* binding */ toSByte),\n/* harmony export */   \"toByte\": () => (/* binding */ toByte),\n/* harmony export */   \"toInt16\": () => (/* binding */ toInt16),\n/* harmony export */   \"toUInt16\": () => (/* binding */ toUInt16),\n/* harmony export */   \"toInt32\": () => (/* binding */ toInt32),\n/* harmony export */   \"toUInt32\": () => (/* binding */ toUInt32),\n/* harmony export */   \"toInt64\": () => (/* binding */ toInt64),\n/* harmony export */   \"toUInt64\": () => (/* binding */ toUInt64),\n/* harmony export */   \"toSingle\": () => (/* binding */ toSingle),\n/* harmony export */   \"toDouble\": () => (/* binding */ toDouble),\n/* harmony export */   \"toDecimal\": () => (/* binding */ toDecimal),\n/* harmony export */   \"sign\": () => (/* binding */ sign),\n/* harmony export */   \"isZero\": () => (/* binding */ isZero),\n/* harmony export */   \"isOne\": () => (/* binding */ isOne),\n/* harmony export */   \"hash\": () => (/* binding */ hash),\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"toString\": () => (/* binding */ toString),\n/* harmony export */   \"get_Zero\": () => (/* binding */ get_Zero),\n/* harmony export */   \"get_One\": () => (/* binding */ get_One),\n/* harmony export */   \"op_Addition\": () => (/* binding */ op_Addition),\n/* harmony export */   \"op_Subtraction\": () => (/* binding */ op_Subtraction),\n/* harmony export */   \"op_Multiply\": () => (/* binding */ op_Multiply),\n/* harmony export */   \"op_Division\": () => (/* binding */ op_Division),\n/* harmony export */   \"op_Modulus\": () => (/* binding */ op_Modulus),\n/* harmony export */   \"op_UnaryNegation\": () => (/* binding */ op_UnaryNegation),\n/* harmony export */   \"op_UnaryPlus\": () => (/* binding */ op_UnaryPlus),\n/* harmony export */   \"op_RightShift\": () => (/* binding */ op_RightShift),\n/* harmony export */   \"op_LeftShift\": () => (/* binding */ op_LeftShift),\n/* harmony export */   \"op_BitwiseAnd\": () => (/* binding */ op_BitwiseAnd),\n/* harmony export */   \"op_BitwiseOr\": () => (/* binding */ op_BitwiseOr),\n/* harmony export */   \"op_ExclusiveOr\": () => (/* binding */ op_ExclusiveOr),\n/* harmony export */   \"op_LessThan\": () => (/* binding */ op_LessThan),\n/* harmony export */   \"op_LessThanOrEqual\": () => (/* binding */ op_LessThanOrEqual),\n/* harmony export */   \"op_GreaterThan\": () => (/* binding */ op_GreaterThan),\n/* harmony export */   \"op_GreaterThanOrEqual\": () => (/* binding */ op_GreaterThanOrEqual),\n/* harmony export */   \"op_Equality\": () => (/* binding */ op_Equality),\n/* harmony export */   \"op_Inequality\": () => (/* binding */ op_Inequality),\n/* harmony export */   \"toByteArray\": () => (/* binding */ toByteArray),\n/* harmony export */   \"fromByteArray\": () => (/* binding */ fromByteArray)\n/* harmony export */ });\n/* harmony import */ var _BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BigInt/z.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/BigInt/z.js\");\n/* harmony import */ var _Long_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Long.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Long.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _List_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./List.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/List.js\");\n/* harmony import */ var _Array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Array.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js\");\n\n\n\n\n\n\nfunction isBigInt(x) {\n  return x instanceof _BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger;\n}\nfunction tryParse(str, res) {\n  try {\n    res.contents = (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_Parse_Z721C83C5)(str);\n    return true;\n  } catch (matchValue) {\n    return false;\n  }\n}\nfunction divRem(x, y, remainder) {\n  var patternInput = (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_DivRem_56F059C0)(x, y);\n  remainder.contents = patternInput[1];\n  return patternInput[0];\n}\nfunction parse(arg00) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_Parse_Z721C83C5)(arg00);\n}\nfunction greatestCommonDivisor(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_GreatestCommonDivisor_56F059C0)(arg00, arg01);\n}\nfunction pow(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_Pow_62E082A2)(arg00, arg01);\n}\nfunction abs(arg00) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_Abs_Z665282C2)(arg00);\n}\nvar zero = (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_get_Zero)();\nvar one = (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_get_One)();\nvar two = (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_get_Two)();\nfunction fromString(s) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_Parse_Z721C83C5)(s);\n}\nfunction fromZero() {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_get_Zero)();\n}\nfunction fromOne() {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_get_One)();\n}\nfunction fromInt64(i) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_$ctor_Z524259C1)(i);\n}\nfunction fromInt32(i) {\n  if (i > 2147483647) {\n    return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_$ctor_Z524259C1)((0,_Long_js__WEBPACK_IMPORTED_MODULE_1__.fromInteger)(i, false, 6));\n  } else {\n    return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_$ctor_Z524259A4)(i);\n  }\n}\nfunction toSByte(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_ToSByte)(x);\n}\nfunction toByte(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_ToByte)(x);\n}\nfunction toInt16(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_ToInt16)(x);\n}\nfunction toUInt16(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_ToUInt16)(x);\n}\nfunction toInt32(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_ToInt32)(x);\n}\nfunction toUInt32(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_ToUInt32)(x);\n}\nfunction toInt64(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_ToInt64)(x);\n}\nfunction toUInt64(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_ToUInt64)(x);\n}\nfunction toSingle(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_ToSingle)(x);\n}\nfunction toDouble(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_ToDouble)(x);\n}\nfunction toDecimal(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_ToDecimal)(x);\n}\nfunction sign(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_Sign)(x);\n}\nfunction isZero(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_IsZero)(x);\n}\nfunction isOne(x) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger__get_IsOne)(x);\n}\nfunction hash(x) {\n  return (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.safeHash)(x);\n}\nfunction compare(x, y) {\n  return x.CompareTo(y);\n}\nfunction equals(x, y) {\n  return (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.equals)(x, y);\n}\nfunction toString(x) {\n  return (0,_Types_js__WEBPACK_IMPORTED_MODULE_3__.toString)(x);\n}\nvar get_Zero = (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_get_Zero)();\nvar get_One = (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_get_One)();\nfunction op_Addition(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_Addition_56F059C0)(arg00, arg01);\n}\nfunction op_Subtraction(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_Subtraction_56F059C0)(arg00, arg01);\n}\nfunction op_Multiply(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_Multiply_56F059C0)(arg00, arg01);\n}\nfunction op_Division(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_Division_56F059C0)(arg00, arg01);\n}\nfunction op_Modulus(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_Modulus_56F059C0)(arg00, arg01);\n}\nfunction op_UnaryNegation(arg00) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_UnaryNegation_Z665282C2)(arg00);\n}\nfunction op_UnaryPlus(arg00) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_UnaryPlus_Z665282C2)(arg00);\n}\nfunction op_RightShift(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_RightShift_62E082A2)(arg00, arg01);\n}\nfunction op_LeftShift(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_LeftShift_62E082A2)(arg00, arg01);\n}\nfunction op_BitwiseAnd(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_BitwiseAnd_56F059C0)(arg00, arg01);\n}\nfunction op_BitwiseOr(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_BitwiseOr_56F059C0)(arg00, arg01);\n}\nfunction op_ExclusiveOr(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_ExclusiveOr_56F059C0)(arg00, arg01);\n}\nfunction op_LessThan(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_LessThan_56F059C0)(arg00, arg01);\n}\nfunction op_LessThanOrEqual(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_LessThanOrEqual_56F059C0)(arg00, arg01);\n}\nfunction op_GreaterThan(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_GreaterThan_56F059C0)(arg00, arg01);\n}\nfunction op_GreaterThanOrEqual(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_GreaterThanOrEqual_56F059C0)(arg00, arg01);\n}\nfunction op_Equality(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_Equality_56F059C0)(arg00, arg01);\n}\nfunction op_Inequality(arg00, arg01) {\n  return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_Inequality_56F059C0)(arg00, arg01);\n}\nfunction flipTwosComplement(currByte, lowBitFound) {\n  var array;\n  var matchValue = [currByte, lowBitFound];\n  if (matchValue[1]) {\n    return [(currByte ^ 255) & 255, true];\n  } else if (matchValue[0] === 0) {\n    return [0, false];\n  } else {\n    return [(currByte ^ 254 << (array = new Int32Array([0, 1, 2, 3, 4, 5, 6, 7]), array.find(function (i) {\n      return (currByte & 1 << i) > 0;\n    }))) & 255, true];\n  }\n}\nfunction toByteArray(value) {\n  if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.equals)(value, zero)) {\n    return new Uint8Array([0]);\n  } else {\n    var isPositive = (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.compare)(value, zero) > 0;\n    var value_1 = isPositive ? value : (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_Multiply_56F059C0)((0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_$ctor_Z524259A4)(-1), value);\n    var mask32 = fromInt64((0,_Long_js__WEBPACK_IMPORTED_MODULE_1__.fromInteger)(4294967295, false, 6));\n    var loop = function loop(accumBytes_mut, consumeValue_mut, lowBitFound_mut) {\n      var value_6, value_8, value_9, value_10;\n      loop: while (true) {\n        var accumBytes = accumBytes_mut,\n          consumeValue = consumeValue_mut,\n          lowBitFound = lowBitFound_mut;\n        if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.compare)(consumeValue, zero) <= 0) {\n          var accumBytes_1 = isPositive ? (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.skipWhile)(function (b) {\n            return b === 0;\n          }, accumBytes) : (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.skipWhile)(function (b_1) {\n            return b_1 === 255;\n          }, accumBytes);\n          var isHighBitOne = ((0,_List_js__WEBPACK_IMPORTED_MODULE_4__.head)(accumBytes_1) & 128) !== 0;\n          return (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.reverse)((0,_List_js__WEBPACK_IMPORTED_MODULE_4__.toArray)(isPositive && isHighBitOne ? (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.cons)(0, accumBytes_1) : !isPositive && !isHighBitOne ? (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.cons)(255, accumBytes_1) : accumBytes_1));\n        } else {\n          var currValue = toUInt32((0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_BitwiseAnd_56F059C0)(consumeValue, mask32));\n          if (isPositive) {\n            var b0 = currValue & 0xFF;\n            var b1 = void 0;\n            var value_4 = currValue >>> 8;\n            b1 = value_4 & 0xFF;\n            var b2 = void 0;\n            var value_5 = currValue >>> 16;\n            b2 = value_5 & 0xFF;\n            accumBytes_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.ofArrayWithTail)([(value_6 = currValue >>> 24, value_6 & 0xFF), b2, b1, b0], accumBytes);\n            consumeValue_mut = (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_RightShift_62E082A2)(consumeValue, 32);\n            lowBitFound_mut = false;\n            continue loop;\n          } else {\n            var patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\n            var patternInput_1 = flipTwosComplement((value_8 = currValue >>> 8, value_8 & 0xFF), patternInput[1]);\n            var patternInput_2 = flipTwosComplement((value_9 = currValue >>> 16, value_9 & 0xFF), patternInput_1[1]);\n            var patternInput_3 = flipTwosComplement((value_10 = currValue >>> 24, value_10 & 0xFF), patternInput_2[1]);\n            accumBytes_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.ofArrayWithTail)([patternInput_3[0], patternInput_2[0], patternInput_1[0], patternInput[0]], accumBytes);\n            consumeValue_mut = (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_RightShift_62E082A2)(consumeValue, 32);\n            lowBitFound_mut = patternInput_3[1];\n            continue loop;\n          }\n        }\n        break;\n      }\n    };\n    return loop((0,_List_js__WEBPACK_IMPORTED_MODULE_4__.empty)(), value_1, false);\n  }\n}\nfunction fromByteArray(bytes) {\n  if (bytes == null) {\n    throw new Error(\"bytes\");\n  }\n  if (bytes.length === 0) {\n    return zero;\n  } else {\n    var isPositive = (bytes[bytes.length - 1] & 128) === 0;\n    var buffer = (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.fill)(new Uint8Array(4), 0, 4, 0);\n    var loop = function loop(accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) {\n      loop: while (true) {\n        var accumUInt32 = accumUInt32_mut,\n          currIndex = currIndex_mut,\n          bytesRemaining = bytesRemaining_mut,\n          lowBitFound = lowBitFound_mut;\n        if (bytesRemaining === 0) {\n          var value_2 = (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.fold)(function (acc, value) {\n            return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_Addition_56F059C0)((0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_LeftShift_62E082A2)(acc, 32), fromInt64((0,_Long_js__WEBPACK_IMPORTED_MODULE_1__.fromInteger)(value, false, 6)));\n          }, zero, accumUInt32);\n          if (isPositive) {\n            return value_2;\n          } else {\n            return (0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_op_Multiply_56F059C0)((0,_BigInt_z_js__WEBPACK_IMPORTED_MODULE_0__.BigInteger_$ctor_Z524259A4)(-1), value_2);\n          }\n        } else {\n          var bytesToProcess = (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.min)(_Util_js__WEBPACK_IMPORTED_MODULE_2__.comparePrimitives, bytesRemaining, 4) | 0;\n          for (var i_1 = 0; i_1 <= bytesToProcess - 1; i_1++) {\n            buffer[i_1] = bytes[currIndex + i_1];\n          }\n          if (isPositive) {\n            (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.fill)(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n            accumUInt32_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.cons)((((buffer[0] | buffer[1] << 8 >>> 0) >>> 0 | buffer[2] << 16 >>> 0) >>> 0 | buffer[3] << 24 >>> 0) >>> 0, accumUInt32);\n            currIndex_mut = currIndex + bytesToProcess;\n            bytesRemaining_mut = bytesRemaining - bytesToProcess;\n            lowBitFound_mut = false;\n            continue loop;\n          } else {\n            (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.fill)(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n            var patternInput = flipTwosComplement(buffer[0], lowBitFound);\n            var patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\n            var patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\n            var patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\n            accumUInt32_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.cons)((((patternInput[0] | patternInput_1[0] << 8 >>> 0) >>> 0 | patternInput_2[0] << 16 >>> 0) >>> 0 | patternInput_3[0] << 24 >>> 0) >>> 0, accumUInt32);\n            currIndex_mut = currIndex + bytesToProcess;\n            bytesRemaining_mut = bytesRemaining - bytesToProcess;\n            lowBitFound_mut = patternInput_3[1];\n            continue loop;\n          }\n        }\n        break;\n      }\n    };\n    return loop((0,_List_js__WEBPACK_IMPORTED_MODULE_4__.empty)(), 0, bytes.length, false);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL2ZhYmxlLWxpYnJhcnkuMy43LjIvQmlnSW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBK3dDO0FBQ3Z1QztBQUMrRDtBQUNuRDtBQUNxQztBQUM5QztBQUVwQyxTQUFTOEQsUUFBUSxDQUFDQyxDQUFDLEVBQUU7RUFDeEIsT0FBT0EsQ0FBQyxZQUFZckIsb0RBQVU7QUFDbEM7QUFFTyxTQUFTc0IsUUFBUSxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsRUFBRTtFQUMvQixJQUFJO0lBQ0FBLEdBQUcsQ0FBQ0MsUUFBUSxHQUFHMUIsd0VBQTBCLENBQUN3QixHQUFHLENBQUM7SUFDOUMsT0FBTyxJQUFJO0VBQ2YsQ0FBQyxDQUNELE9BQU9HLFVBQVUsRUFBRTtJQUNmLE9BQU8sS0FBSztFQUNoQjtBQUNKO0FBRU8sU0FBU0MsTUFBTSxDQUFDTixDQUFDLEVBQUVPLENBQUMsRUFBRUMsU0FBUyxFQUFFO0VBQ3BDLElBQU1DLFlBQVksR0FBR2hDLHdFQUEwQixDQUFDdUIsQ0FBQyxFQUFFTyxDQUFDLENBQUM7RUFDckRDLFNBQVMsQ0FBQ0osUUFBUSxHQUFHSyxZQUFZLENBQUMsQ0FBQyxDQUFDO0VBQ3BDLE9BQU9BLFlBQVksQ0FBQyxDQUFDLENBQUM7QUFDMUI7QUFFTyxTQUFTQyxLQUFLLENBQUNDLEtBQUssRUFBRTtFQUN6QixPQUFPakMsd0VBQTBCLENBQUNpQyxLQUFLLENBQUM7QUFDNUM7QUFFTyxTQUFTQyxxQkFBcUIsQ0FBQ0QsS0FBSyxFQUFFRSxLQUFLLEVBQUU7RUFDaEQsT0FBT3JDLHVGQUF5QyxDQUFDbUMsS0FBSyxFQUFFRSxLQUFLLENBQUM7QUFDbEU7QUFFTyxTQUFTQyxHQUFHLENBQUNILEtBQUssRUFBRUUsS0FBSyxFQUFFO0VBQzlCLE9BQU90QyxxRUFBdUIsQ0FBQ29DLEtBQUssRUFBRUUsS0FBSyxDQUFDO0FBQ2hEO0FBRU8sU0FBU0UsR0FBRyxDQUFDSixLQUFLLEVBQUU7RUFDdkIsT0FBT3JDLHNFQUF3QixDQUFDcUMsS0FBSyxDQUFDO0FBQzFDO0FBRU8sSUFBTUssSUFBSSxHQUFHM0MsaUVBQW1CLEVBQUU7QUFFbEMsSUFBTTRDLEdBQUcsR0FBRzdDLGdFQUFrQixFQUFFO0FBRWhDLElBQU04QyxHQUFHLEdBQUcvQyxnRUFBa0IsRUFBRTtBQUVoQyxTQUFTZ0QsVUFBVSxDQUFDQyxDQUFDLEVBQUU7RUFDMUIsT0FBTzFDLHdFQUEwQixDQUFDMEMsQ0FBQyxDQUFDO0FBQ3hDO0FBRU8sU0FBU0MsUUFBUSxHQUFHO0VBQ3ZCLE9BQU9oRCxpRUFBbUIsRUFBRTtBQUNoQztBQUVPLFNBQVNpRCxPQUFPLEdBQUc7RUFDdEIsT0FBT2xELGdFQUFrQixFQUFFO0FBQy9CO0FBRU8sU0FBU21ELFNBQVMsQ0FBQ0MsQ0FBQyxFQUFFO0VBQ3pCLE9BQU90RCx3RUFBMEIsQ0FBQ3NELENBQUMsQ0FBQztBQUN4QztBQUVPLFNBQVNDLFNBQVMsQ0FBQ0QsQ0FBQyxFQUFFO0VBQ3pCLElBQUlBLENBQUMsR0FBRyxVQUFVLEVBQUU7SUFDaEIsT0FBT3RELHdFQUEwQixDQUFDVSxxREFBVyxDQUFDNEMsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztFQUMvRCxDQUFDLE1BQ0k7SUFDRCxPQUFPdkQsd0VBQTBCLENBQUN1RCxDQUFDLENBQUM7RUFDeEM7QUFDSjtBQUVPLFNBQVNFLE9BQU8sQ0FBQzFCLENBQUMsRUFBRTtFQUN2QixPQUFPaEMscUVBQXVCLENBQUNnQyxDQUFDLENBQUM7QUFDckM7QUFFTyxTQUFTMkIsTUFBTSxDQUFDM0IsQ0FBQyxFQUFFO0VBQ3RCLE9BQU9qQyxvRUFBc0IsQ0FBQ2lDLENBQUMsQ0FBQztBQUNwQztBQUVPLFNBQVM0QixPQUFPLENBQUM1QixDQUFDLEVBQUU7RUFDdkIsT0FBT2xDLHFFQUF1QixDQUFDa0MsQ0FBQyxDQUFDO0FBQ3JDO0FBRU8sU0FBUzZCLFFBQVEsQ0FBQzdCLENBQUMsRUFBRTtFQUN4QixPQUFPbkMsc0VBQXdCLENBQUNtQyxDQUFDLENBQUM7QUFDdEM7QUFFTyxTQUFTOEIsT0FBTyxDQUFDOUIsQ0FBQyxFQUFFO0VBQ3ZCLE9BQU9wQyxxRUFBdUIsQ0FBQ29DLENBQUMsQ0FBQztBQUNyQztBQUVPLFNBQVMrQixRQUFRLENBQUMvQixDQUFDLEVBQUU7RUFDeEIsT0FBT3JDLHNFQUF3QixDQUFDcUMsQ0FBQyxDQUFDO0FBQ3RDO0FBRU8sU0FBU2dDLE9BQU8sQ0FBQ2hDLENBQUMsRUFBRTtFQUN2QixPQUFPdEMscUVBQXVCLENBQUNzQyxDQUFDLENBQUM7QUFDckM7QUFFTyxTQUFTaUMsUUFBUSxDQUFDakMsQ0FBQyxFQUFFO0VBQ3hCLE9BQU92QyxzRUFBd0IsQ0FBQ3VDLENBQUMsQ0FBQztBQUN0QztBQUVPLFNBQVNrQyxRQUFRLENBQUNsQyxDQUFDLEVBQUU7RUFDeEIsT0FBT3hDLHNFQUF3QixDQUFDd0MsQ0FBQyxDQUFDO0FBQ3RDO0FBRU8sU0FBU21DLFFBQVEsQ0FBQ25DLENBQUMsRUFBRTtFQUN4QixPQUFPekMsc0VBQXdCLENBQUN5QyxDQUFDLENBQUM7QUFDdEM7QUFFTyxTQUFTb0MsU0FBUyxDQUFDcEMsQ0FBQyxFQUFFO0VBQ3pCLE9BQU8xQyx1RUFBeUIsQ0FBQzBDLENBQUMsQ0FBQztBQUN2QztBQUVPLFNBQVNxQyxJQUFJLENBQUNyQyxDQUFDLEVBQUU7RUFDcEIsT0FBTzNDLGtFQUFvQixDQUFDMkMsQ0FBQyxDQUFDO0FBQ2xDO0FBRU8sU0FBU3NDLE1BQU0sQ0FBQ3RDLENBQUMsRUFBRTtFQUN0QixPQUFPNUMsb0VBQXNCLENBQUM0QyxDQUFDLENBQUM7QUFDcEM7QUFFTyxTQUFTdUMsS0FBSyxDQUFDdkMsQ0FBQyxFQUFFO0VBQ3JCLE9BQU83QyxtRUFBcUIsQ0FBQzZDLENBQUMsQ0FBQztBQUNuQztBQUVPLFNBQVN3QyxJQUFJLENBQUN4QyxDQUFDLEVBQUU7RUFDcEIsT0FBT2Isa0RBQVEsQ0FBQ2EsQ0FBQyxDQUFDO0FBQ3RCO0FBRU8sU0FBU2pCLE9BQU8sQ0FBQ2lCLENBQUMsRUFBRU8sQ0FBQyxFQUFFO0VBQzFCLE9BQU9QLENBQUMsQ0FBQ3lDLFNBQVMsQ0FBQ2xDLENBQUMsQ0FBQztBQUN6QjtBQUVPLFNBQVN0QixNQUFNLENBQUNlLENBQUMsRUFBRU8sQ0FBQyxFQUFFO0VBQ3pCLE9BQU9yQixnREFBUSxDQUFDYyxDQUFDLEVBQUVPLENBQUMsQ0FBQztBQUN6QjtBQUVPLFNBQVNuQixRQUFRLENBQUNZLENBQUMsRUFBRTtFQUN4QixPQUFPWCxtREFBVSxDQUFDVyxDQUFDLENBQUM7QUFDeEI7QUFFTyxJQUFNMEMsUUFBUSxHQUFHckUsaUVBQW1CLEVBQUU7QUFFdEMsSUFBTXNFLE9BQU8sR0FBR3ZFLGdFQUFrQixFQUFFO0FBRXBDLFNBQVN3RSxXQUFXLENBQUNqQyxLQUFLLEVBQUVFLEtBQUssRUFBRTtFQUN0QyxPQUFPM0QsNkVBQStCLENBQUN5RCxLQUFLLEVBQUVFLEtBQUssQ0FBQztBQUN4RDtBQUVPLFNBQVNnQyxjQUFjLENBQUNsQyxLQUFLLEVBQUVFLEtBQUssRUFBRTtFQUN6QyxPQUFPNUQsZ0ZBQWtDLENBQUMwRCxLQUFLLEVBQUVFLEtBQUssQ0FBQztBQUMzRDtBQUVPLFNBQVNpQyxXQUFXLENBQUNuQyxLQUFLLEVBQUVFLEtBQUssRUFBRTtFQUN0QyxPQUFPN0QsNkVBQStCLENBQUMyRCxLQUFLLEVBQUVFLEtBQUssQ0FBQztBQUN4RDtBQUVPLFNBQVNrQyxXQUFXLENBQUNwQyxLQUFLLEVBQUVFLEtBQUssRUFBRTtFQUN0QyxPQUFPOUQsNkVBQStCLENBQUM0RCxLQUFLLEVBQUVFLEtBQUssQ0FBQztBQUN4RDtBQUVPLFNBQVNtQyxVQUFVLENBQUNyQyxLQUFLLEVBQUVFLEtBQUssRUFBRTtFQUNyQyxPQUFPL0QsNEVBQThCLENBQUM2RCxLQUFLLEVBQUVFLEtBQUssQ0FBQztBQUN2RDtBQUVPLFNBQVNvQyxnQkFBZ0IsQ0FBQ3RDLEtBQUssRUFBRTtFQUNwQyxPQUFPOUQsbUZBQXFDLENBQUM4RCxLQUFLLENBQUM7QUFDdkQ7QUFFTyxTQUFTdUMsWUFBWSxDQUFDdkMsS0FBSyxFQUFFO0VBQ2hDLE9BQU8vRCwrRUFBaUMsQ0FBQytELEtBQUssQ0FBQztBQUNuRDtBQUVPLFNBQVN3QyxhQUFhLENBQUN4QyxLQUFLLEVBQUVFLEtBQUssRUFBRTtFQUN4QyxPQUFPbEUsK0VBQWlDLENBQUNnRSxLQUFLLEVBQUVFLEtBQUssQ0FBQztBQUMxRDtBQUVPLFNBQVN1QyxZQUFZLENBQUN6QyxLQUFLLEVBQUVFLEtBQUssRUFBRTtFQUN2QyxPQUFPbkUsOEVBQWdDLENBQUNpRSxLQUFLLEVBQUVFLEtBQUssQ0FBQztBQUN6RDtBQUVPLFNBQVN3QyxhQUFhLENBQUMxQyxLQUFLLEVBQUVFLEtBQUssRUFBRTtFQUN4QyxPQUFPcEUsK0VBQWlDLENBQUNrRSxLQUFLLEVBQUVFLEtBQUssQ0FBQztBQUMxRDtBQUVPLFNBQVN5QyxZQUFZLENBQUMzQyxLQUFLLEVBQUVFLEtBQUssRUFBRTtFQUN2QyxPQUFPckUsOEVBQWdDLENBQUNtRSxLQUFLLEVBQUVFLEtBQUssQ0FBQztBQUN6RDtBQUVPLFNBQVMwQyxjQUFjLENBQUM1QyxLQUFLLEVBQUVFLEtBQUssRUFBRTtFQUN6QyxPQUFPdEUsZ0ZBQWtDLENBQUNvRSxLQUFLLEVBQUVFLEtBQUssQ0FBQztBQUMzRDtBQUVPLFNBQVMyQyxXQUFXLENBQUM3QyxLQUFLLEVBQUVFLEtBQUssRUFBRTtFQUN0QyxPQUFPdkUsNkVBQStCLENBQUNxRSxLQUFLLEVBQUVFLEtBQUssQ0FBQztBQUN4RDtBQUVPLFNBQVM0QyxrQkFBa0IsQ0FBQzlDLEtBQUssRUFBRUUsS0FBSyxFQUFFO0VBQzdDLE9BQU94RSxvRkFBc0MsQ0FBQ3NFLEtBQUssRUFBRUUsS0FBSyxDQUFDO0FBQy9EO0FBRU8sU0FBUzZDLGNBQWMsQ0FBQy9DLEtBQUssRUFBRUUsS0FBSyxFQUFFO0VBQ3pDLE9BQU96RSxnRkFBa0MsQ0FBQ3VFLEtBQUssRUFBRUUsS0FBSyxDQUFDO0FBQzNEO0FBRU8sU0FBUzhDLHFCQUFxQixDQUFDaEQsS0FBSyxFQUFFRSxLQUFLLEVBQUU7RUFDaEQsT0FBTzFFLHVGQUF5QyxDQUFDd0UsS0FBSyxFQUFFRSxLQUFLLENBQUM7QUFDbEU7QUFFTyxTQUFTK0MsV0FBVyxDQUFDakQsS0FBSyxFQUFFRSxLQUFLLEVBQUU7RUFDdEMsT0FBTzNFLDZFQUErQixDQUFDeUUsS0FBSyxFQUFFRSxLQUFLLENBQUM7QUFDeEQ7QUFFTyxTQUFTZ0QsYUFBYSxDQUFDbEQsS0FBSyxFQUFFRSxLQUFLLEVBQUU7RUFDeEMsT0FBTzVFLCtFQUFpQyxDQUFDMEUsS0FBSyxFQUFFRSxLQUFLLENBQUM7QUFDMUQ7QUFFQSxTQUFTaUQsa0JBQWtCLENBQUNDLFFBQVEsRUFBRUMsV0FBVyxFQUFFO0VBQy9DLElBQUlDLEtBQUs7RUFDVCxJQUFNNUQsVUFBVSxHQUFHLENBQUMwRCxRQUFRLEVBQUVDLFdBQVcsQ0FBQztFQUMxQyxJQUFJM0QsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFO0lBQ2YsT0FBTyxDQUFDLENBQUMwRCxRQUFRLEdBQUcsR0FBRyxJQUFJLEdBQUcsRUFBRSxJQUFJLENBQUM7RUFDekMsQ0FBQyxNQUNJLElBQUkxRCxVQUFVLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFO0lBQzFCLE9BQU8sQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDO0VBQ3JCLENBQUMsTUFDSTtJQUNELE9BQU8sQ0FBQyxDQUFDMEQsUUFBUSxHQUFJLEdBQUcsS0FBTUUsS0FBSyxHQUFJLElBQUlDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBRSxFQUFFRCxLQUFLLENBQUNFLElBQUksQ0FBQyxVQUFDM0MsQ0FBQztNQUFBLE9BQU0sQ0FBQ3VDLFFBQVEsR0FBSSxDQUFDLElBQUl2QyxDQUFFLElBQUksQ0FBQztJQUFBLENBQUMsQ0FBQyxDQUFHLElBQUksR0FBRyxFQUFFLElBQUksQ0FBQztFQUNySjtBQUNKO0FBRU8sU0FBUzRDLFdBQVcsQ0FBQ0MsS0FBSyxFQUFFO0VBQy9CLElBQUluRixnREFBUSxDQUFDbUYsS0FBSyxFQUFFckQsSUFBSSxDQUFDLEVBQUU7SUFDdkIsT0FBTyxJQUFJc0QsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7RUFDOUIsQ0FBQyxNQUNJO0lBQ0QsSUFBTUMsVUFBVSxHQUFHdkYsaURBQVMsQ0FBQ3FGLEtBQUssRUFBRXJELElBQUksQ0FBQyxHQUFHLENBQUM7SUFDN0MsSUFBTXdELE9BQU8sR0FBR0QsVUFBVSxHQUFHRixLQUFLLEdBQUdySCw2RUFBK0IsQ0FBQ2lCLHdFQUEwQixDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUVvRyxLQUFLLENBQUM7SUFDM0csSUFBTUksTUFBTSxHQUFHbEQsU0FBUyxDQUFDM0MscURBQVcsQ0FBQyxVQUFVLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzNELElBQU04RixJQUFJLEdBQUcsU0FBUEEsSUFBSSxDQUFJQyxjQUFjLEVBQUVDLGdCQUFnQixFQUFFQyxlQUFlLEVBQUs7TUFDaEUsSUFBSUMsT0FBTyxFQUFFQyxPQUFPLEVBQUVDLE9BQU8sRUFBRUMsUUFBUTtNQUN2Q1AsSUFBSSxFQUNKLE9BQU8sSUFBSSxFQUFFO1FBQ1QsSUFBTVEsVUFBVSxHQUFHUCxjQUFjO1VBQUVRLFlBQVksR0FBR1AsZ0JBQWdCO1VBQUVaLFdBQVcsR0FBR2EsZUFBZTtRQUNqRyxJQUFJN0YsaURBQVMsQ0FBQ21HLFlBQVksRUFBRW5FLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtVQUNwQyxJQUFNb0UsWUFBWSxHQUFHYixVQUFVLEdBQUczRSxtREFBUyxDQUFDLFVBQUN5RixDQUFDO1lBQUEsT0FBTUEsQ0FBQyxLQUFLLENBQUM7VUFBQSxDQUFDLEVBQUVILFVBQVUsQ0FBQyxHQUFHdEYsbURBQVMsQ0FBQyxVQUFDMEYsR0FBRztZQUFBLE9BQU1BLEdBQUcsS0FBSyxHQUFHO1VBQUEsQ0FBQyxFQUFFSixVQUFVLENBQUM7VUFDekgsSUFBTUssWUFBWSxHQUFHLENBQUM1Riw4Q0FBSSxDQUFDeUYsWUFBWSxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUM7VUFDckQsT0FBT3RGLGtEQUFPLENBQUNKLGlEQUFPLENBQUU2RSxVQUFVLElBQUlnQixZQUFZLEdBQUk5Riw4Q0FBSSxDQUFDLENBQUMsRUFBRTJGLFlBQVksQ0FBQyxHQUFNLENBQUNiLFVBQVUsSUFBTSxDQUFDZ0IsWUFBYSxHQUFJOUYsOENBQUksQ0FBQyxHQUFHLEVBQUUyRixZQUFZLENBQUMsR0FBR0EsWUFBYSxDQUFDLENBQUM7UUFDakssQ0FBQyxNQUNJO1VBQ0QsSUFBTUksU0FBUyxHQUFHekQsUUFBUSxDQUFDdEYsK0VBQWlDLENBQUMwSSxZQUFZLEVBQUVWLE1BQU0sQ0FBQyxDQUFDO1VBQ25GLElBQUlGLFVBQVUsRUFBRTtZQUNaLElBQU1rQixFQUFFLEdBQUdELFNBQVMsR0FBRyxJQUFJO1lBQzNCLElBQUlFLEVBQUU7WUFDTixJQUFNQyxPQUFPLEdBQUdILFNBQVMsS0FBSyxDQUFDO1lBQy9CRSxFQUFFLEdBQUlDLE9BQU8sR0FBRyxJQUFLO1lBQ3JCLElBQUlDLEVBQUU7WUFDTixJQUFNQyxPQUFPLEdBQUdMLFNBQVMsS0FBSyxFQUFFO1lBQ2hDSSxFQUFFLEdBQUlDLE9BQU8sR0FBRyxJQUFLO1lBQ3JCbEIsY0FBYyxHQUFHbkYseURBQWUsQ0FBQyxFQUFFc0YsT0FBTyxHQUFJVSxTQUFTLEtBQUssRUFBRyxFQUFFVixPQUFPLEdBQUcsSUFBSSxHQUFHYyxFQUFFLEVBQUVGLEVBQUUsRUFBRUQsRUFBRSxDQUFDLEVBQUVQLFVBQVUsQ0FBQztZQUMxR04sZ0JBQWdCLEdBQUdqSSwrRUFBaUMsQ0FBQ3dJLFlBQVksRUFBRSxFQUFFLENBQUM7WUFDdEVOLGVBQWUsR0FBRyxLQUFLO1lBQ3ZCLFNBQVNILElBQUk7VUFDakIsQ0FBQyxNQUNJO1lBQ0QsSUFBTWpFLFlBQVksR0FBR3FELGtCQUFrQixDQUFDMEIsU0FBUyxHQUFHLElBQUksRUFBRXhCLFdBQVcsQ0FBQztZQUN0RSxJQUFNOEIsY0FBYyxHQUFHaEMsa0JBQWtCLEVBQUVpQixPQUFPLEdBQUlTLFNBQVMsS0FBSyxDQUFFLEVBQUVULE9BQU8sR0FBRyxJQUFJLEdBQUd0RSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDekcsSUFBTXNGLGNBQWMsR0FBR2pDLGtCQUFrQixFQUFFa0IsT0FBTyxHQUFJUSxTQUFTLEtBQUssRUFBRyxFQUFFUixPQUFPLEdBQUcsSUFBSSxHQUFHYyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDNUcsSUFBTUUsY0FBYyxHQUFHbEMsa0JBQWtCLEVBQUVtQixRQUFRLEdBQUlPLFNBQVMsS0FBSyxFQUFHLEVBQUVQLFFBQVEsR0FBRyxJQUFJLEdBQUdjLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM5R3BCLGNBQWMsR0FBR25GLHlEQUFlLENBQUMsQ0FBQ3dHLGNBQWMsQ0FBQyxDQUFDLENBQUMsRUFBRUQsY0FBYyxDQUFDLENBQUMsQ0FBQyxFQUFFRCxjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQUVyRixZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRXlFLFVBQVUsQ0FBQztZQUN4SE4sZ0JBQWdCLEdBQUdqSSwrRUFBaUMsQ0FBQ3dJLFlBQVksRUFBRSxFQUFFLENBQUM7WUFDdEVOLGVBQWUsR0FBR21CLGNBQWMsQ0FBQyxDQUFDLENBQUM7WUFDbkMsU0FBU3RCLElBQUk7VUFDakI7UUFDSjtRQUNBO01BQ0o7SUFDSixDQUFDO0lBQ0QsT0FBT0EsSUFBSSxDQUFDbkYsK0NBQUssRUFBRSxFQUFFaUYsT0FBTyxFQUFFLEtBQUssQ0FBQztFQUN4QztBQUNKO0FBRU8sU0FBU3lCLGFBQWEsQ0FBQ0MsS0FBSyxFQUFFO0VBQ2pDLElBQUlBLEtBQUssSUFBSSxJQUFJLEVBQUU7SUFDZixNQUFPLElBQUlDLEtBQUssQ0FBQyxPQUFPLENBQUM7RUFDN0I7RUFDQSxJQUFJRCxLQUFLLENBQUNFLE1BQU0sS0FBSyxDQUFDLEVBQUU7SUFDcEIsT0FBT3BGLElBQUk7RUFDZixDQUFDLE1BQ0k7SUFDRCxJQUFNdUQsVUFBVSxHQUFHLENBQUMyQixLQUFLLENBQUNBLEtBQUssQ0FBQ0UsTUFBTSxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDO0lBQ3hELElBQU1DLE1BQU0sR0FBR3hHLCtDQUFJLENBQUMsSUFBSXlFLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUMvQyxJQUFNSSxJQUFJLEdBQUcsU0FBUEEsSUFBSSxDQUFJNEIsZUFBZSxFQUFFQyxhQUFhLEVBQUVDLGtCQUFrQixFQUFFM0IsZUFBZSxFQUFLO01BQ2xGSCxJQUFJLEVBQ0osT0FBTyxJQUFJLEVBQUU7UUFDVCxJQUFNK0IsV0FBVyxHQUFHSCxlQUFlO1VBQUVJLFNBQVMsR0FBR0gsYUFBYTtVQUFFSSxjQUFjLEdBQUdILGtCQUFrQjtVQUFFeEMsV0FBVyxHQUFHYSxlQUFlO1FBQ2xJLElBQUk4QixjQUFjLEtBQUssQ0FBQyxFQUFFO1VBQ3RCLElBQU1DLE9BQU8sR0FBR3RILDhDQUFJLENBQUMsVUFBQ3VILEdBQUcsRUFBRXhDLEtBQUs7WUFBQSxPQUFLbkgsNkVBQStCLENBQUNSLDhFQUFnQyxDQUFDbUssR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFdEYsU0FBUyxDQUFDM0MscURBQVcsQ0FBQ3lGLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztVQUFBLEdBQUVyRCxJQUFJLEVBQUV5RixXQUFXLENBQUM7VUFDNUssSUFBSWxDLFVBQVUsRUFBRTtZQUNaLE9BQU9xQyxPQUFPO1VBQ2xCLENBQUMsTUFDSTtZQUNELE9BQU81Siw2RUFBK0IsQ0FBQ2lCLHdFQUEwQixDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUySSxPQUFPLENBQUM7VUFDbkY7UUFDSixDQUFDLE1BQ0k7VUFDRCxJQUFNRSxjQUFjLEdBQUdoSSw2Q0FBRyxDQUFDRCx1REFBaUIsRUFBRThILGNBQWMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDO1VBQ3BFLEtBQUssSUFBSUksR0FBRyxHQUFHLENBQUMsRUFBRUEsR0FBRyxJQUFLRCxjQUFjLEdBQUcsQ0FBRSxFQUFFQyxHQUFHLEVBQUUsRUFBRTtZQUNsRFYsTUFBTSxDQUFDVSxHQUFHLENBQUMsR0FBR2IsS0FBSyxDQUFDUSxTQUFTLEdBQUdLLEdBQUcsQ0FBQztVQUN4QztVQUNBLElBQUl4QyxVQUFVLEVBQUU7WUFDWjFFLCtDQUFJLENBQUN3RyxNQUFNLEVBQUVTLGNBQWMsRUFBRSxDQUFDLEdBQUdBLGNBQWMsRUFBRSxDQUFDLENBQUM7WUFDbkRSLGVBQWUsR0FBRzdHLDhDQUFJLENBQUMsQ0FBRSxDQUFFLENBQUM0RyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUtBLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQU0sQ0FBRSxNQUFNLENBQUMsR0FBTUEsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBTSxDQUFFLE1BQU0sQ0FBQyxHQUFNQSxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFNLENBQUUsTUFBTSxDQUFDLEVBQUVJLFdBQVcsQ0FBQztZQUM3SkYsYUFBYSxHQUFJRyxTQUFTLEdBQUdJLGNBQWU7WUFDNUNOLGtCQUFrQixHQUFJRyxjQUFjLEdBQUdHLGNBQWU7WUFDdERqQyxlQUFlLEdBQUcsS0FBSztZQUN2QixTQUFTSCxJQUFJO1VBQ2pCLENBQUMsTUFDSTtZQUNEN0UsK0NBQUksQ0FBQ3dHLE1BQU0sRUFBRVMsY0FBYyxFQUFFLENBQUMsR0FBR0EsY0FBYyxFQUFFLEdBQUcsQ0FBQztZQUNyRCxJQUFNckcsWUFBWSxHQUFHcUQsa0JBQWtCLENBQUN1QyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUVyQyxXQUFXLENBQUM7WUFDL0QsSUFBTThCLGNBQWMsR0FBR2hDLGtCQUFrQixDQUFDdUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFNUYsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3JFLElBQU1zRixjQUFjLEdBQUdqQyxrQkFBa0IsQ0FBQ3VDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRVAsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZFLElBQU1FLGNBQWMsR0FBR2xDLGtCQUFrQixDQUFDdUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFTixjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkVPLGVBQWUsR0FBRzdHLDhDQUFJLENBQUMsQ0FBRSxDQUFFLENBQUNnQixZQUFZLENBQUMsQ0FBQyxDQUFDLEdBQUtxRixjQUFjLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFNLENBQUUsTUFBTSxDQUFDLEdBQU1DLGNBQWMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLEtBQU0sQ0FBRSxNQUFNLENBQUMsR0FBTUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBTSxDQUFFLE1BQU0sQ0FBQyxFQUFFUyxXQUFXLENBQUM7WUFDM0xGLGFBQWEsR0FBSUcsU0FBUyxHQUFHSSxjQUFlO1lBQzVDTixrQkFBa0IsR0FBSUcsY0FBYyxHQUFHRyxjQUFlO1lBQ3REakMsZUFBZSxHQUFHbUIsY0FBYyxDQUFDLENBQUMsQ0FBQztZQUNuQyxTQUFTdEIsSUFBSTtVQUNqQjtRQUNKO1FBQ0E7TUFDSjtJQUNKLENBQUM7SUFDRCxPQUFPQSxJQUFJLENBQUNuRiwrQ0FBSyxFQUFFLEVBQUUsQ0FBQyxFQUFFMkcsS0FBSyxDQUFDRSxNQUFNLEVBQUUsS0FBSyxDQUFDO0VBQ2hEO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL2ZhYmxlLWxpYnJhcnkuMy43LjIvQmlnSW50LmpzPzEwMTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmlnSW50ZWdlcl9vcF9JbmVxdWFsaXR5XzU2RjA1OUMwLCBCaWdJbnRlZ2VyX29wX0VxdWFsaXR5XzU2RjA1OUMwLCBCaWdJbnRlZ2VyX29wX0dyZWF0ZXJUaGFuT3JFcXVhbF81NkYwNTlDMCwgQmlnSW50ZWdlcl9vcF9HcmVhdGVyVGhhbl81NkYwNTlDMCwgQmlnSW50ZWdlcl9vcF9MZXNzVGhhbk9yRXF1YWxfNTZGMDU5QzAsIEJpZ0ludGVnZXJfb3BfTGVzc1RoYW5fNTZGMDU5QzAsIEJpZ0ludGVnZXJfb3BfRXhjbHVzaXZlT3JfNTZGMDU5QzAsIEJpZ0ludGVnZXJfb3BfQml0d2lzZU9yXzU2RjA1OUMwLCBCaWdJbnRlZ2VyX29wX0JpdHdpc2VBbmRfNTZGMDU5QzAsIEJpZ0ludGVnZXJfb3BfTGVmdFNoaWZ0XzYyRTA4MkEyLCBCaWdJbnRlZ2VyX29wX1JpZ2h0U2hpZnRfNjJFMDgyQTIsIEJpZ0ludGVnZXJfb3BfVW5hcnlQbHVzX1o2NjUyODJDMiwgQmlnSW50ZWdlcl9vcF9VbmFyeU5lZ2F0aW9uX1o2NjUyODJDMiwgQmlnSW50ZWdlcl9vcF9Nb2R1bHVzXzU2RjA1OUMwLCBCaWdJbnRlZ2VyX29wX0RpdmlzaW9uXzU2RjA1OUMwLCBCaWdJbnRlZ2VyX29wX011bHRpcGx5XzU2RjA1OUMwLCBCaWdJbnRlZ2VyX29wX1N1YnRyYWN0aW9uXzU2RjA1OUMwLCBCaWdJbnRlZ2VyX29wX0FkZGl0aW9uXzU2RjA1OUMwLCBCaWdJbnRlZ2VyX19nZXRfSXNPbmUsIEJpZ0ludGVnZXJfX2dldF9Jc1plcm8sIEJpZ0ludGVnZXJfX2dldF9TaWduLCBCaWdJbnRlZ2VyX19nZXRfVG9EZWNpbWFsLCBCaWdJbnRlZ2VyX19nZXRfVG9Eb3VibGUsIEJpZ0ludGVnZXJfX2dldF9Ub1NpbmdsZSwgQmlnSW50ZWdlcl9fZ2V0X1RvVUludDY0LCBCaWdJbnRlZ2VyX19nZXRfVG9JbnQ2NCwgQmlnSW50ZWdlcl9fZ2V0X1RvVUludDMyLCBCaWdJbnRlZ2VyX19nZXRfVG9JbnQzMiwgQmlnSW50ZWdlcl9fZ2V0X1RvVUludDE2LCBCaWdJbnRlZ2VyX19nZXRfVG9JbnQxNiwgQmlnSW50ZWdlcl9fZ2V0X1RvQnl0ZSwgQmlnSW50ZWdlcl9fZ2V0X1RvU0J5dGUsIEJpZ0ludGVnZXJfJGN0b3JfWjUyNDI1OUE0LCBCaWdJbnRlZ2VyXyRjdG9yX1o1MjQyNTlDMSwgQmlnSW50ZWdlcl9nZXRfVHdvLCBCaWdJbnRlZ2VyX2dldF9PbmUsIEJpZ0ludGVnZXJfZ2V0X1plcm8sIEJpZ0ludGVnZXJfQWJzX1o2NjUyODJDMiwgQmlnSW50ZWdlcl9Qb3dfNjJFMDgyQTIsIEJpZ0ludGVnZXJfR3JlYXRlc3RDb21tb25EaXZpc29yXzU2RjA1OUMwLCBCaWdJbnRlZ2VyX0RpdlJlbV81NkYwNTlDMCwgQmlnSW50ZWdlcl9QYXJzZV9aNzIxQzgzQzUsIEJpZ0ludGVnZXIgfSBmcm9tIFwiLi9CaWdJbnQvei5qc1wiO1xyXG5pbXBvcnQgeyBmcm9tSW50ZWdlciB9IGZyb20gXCIuL0xvbmcuanNcIjtcclxuaW1wb3J0IHsgY29tcGFyZVByaW1pdGl2ZXMsIG1pbiwgY29tcGFyZSBhcyBjb21wYXJlXzEsIGVxdWFscyBhcyBlcXVhbHNfMSwgc2FmZUhhc2ggfSBmcm9tIFwiLi9VdGlsLmpzXCI7XHJcbmltcG9ydCB7IHRvU3RyaW5nIGFzIHRvU3RyaW5nXzEgfSBmcm9tIFwiLi9UeXBlcy5qc1wiO1xyXG5pbXBvcnQgeyBmb2xkLCBlbXB0eSwgb2ZBcnJheVdpdGhUYWlsLCBjb25zLCB0b0FycmF5LCBoZWFkLCBza2lwV2hpbGUgfSBmcm9tIFwiLi9MaXN0LmpzXCI7XHJcbmltcG9ydCB7IGZpbGwsIHJldmVyc2UgfSBmcm9tIFwiLi9BcnJheS5qc1wiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzQmlnSW50KHgpIHtcclxuICAgIHJldHVybiB4IGluc3RhbmNlb2YgQmlnSW50ZWdlcjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRyeVBhcnNlKHN0ciwgcmVzKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHJlcy5jb250ZW50cyA9IEJpZ0ludGVnZXJfUGFyc2VfWjcyMUM4M0M1KHN0cik7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAobWF0Y2hWYWx1ZSkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGRpdlJlbSh4LCB5LCByZW1haW5kZXIpIHtcclxuICAgIGNvbnN0IHBhdHRlcm5JbnB1dCA9IEJpZ0ludGVnZXJfRGl2UmVtXzU2RjA1OUMwKHgsIHkpO1xyXG4gICAgcmVtYWluZGVyLmNvbnRlbnRzID0gcGF0dGVybklucHV0WzFdO1xyXG4gICAgcmV0dXJuIHBhdHRlcm5JbnB1dFswXTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlKGFyZzAwKSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9QYXJzZV9aNzIxQzgzQzUoYXJnMDApO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ3JlYXRlc3RDb21tb25EaXZpc29yKGFyZzAwLCBhcmcwMSkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfR3JlYXRlc3RDb21tb25EaXZpc29yXzU2RjA1OUMwKGFyZzAwLCBhcmcwMSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwb3coYXJnMDAsIGFyZzAxKSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9Qb3dfNjJFMDgyQTIoYXJnMDAsIGFyZzAxKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGFicyhhcmcwMCkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfQWJzX1o2NjUyODJDMihhcmcwMCk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB6ZXJvID0gQmlnSW50ZWdlcl9nZXRfWmVybygpO1xyXG5cclxuZXhwb3J0IGNvbnN0IG9uZSA9IEJpZ0ludGVnZXJfZ2V0X09uZSgpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHR3byA9IEJpZ0ludGVnZXJfZ2V0X1R3bygpO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGZyb21TdHJpbmcocykge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfUGFyc2VfWjcyMUM4M0M1KHMpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZnJvbVplcm8oKSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9nZXRfWmVybygpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZnJvbU9uZSgpIHtcclxuICAgIHJldHVybiBCaWdJbnRlZ2VyX2dldF9PbmUoKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGZyb21JbnQ2NChpKSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl8kY3Rvcl9aNTI0MjU5QzEoaSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBmcm9tSW50MzIoaSkge1xyXG4gICAgaWYgKGkgPiAyMTQ3NDgzNjQ3KSB7XHJcbiAgICAgICAgcmV0dXJuIEJpZ0ludGVnZXJfJGN0b3JfWjUyNDI1OUMxKGZyb21JbnRlZ2VyKGksIGZhbHNlLCA2KSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICByZXR1cm4gQmlnSW50ZWdlcl8kY3Rvcl9aNTI0MjU5QTQoaSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB0b1NCeXRlKHgpIHtcclxuICAgIHJldHVybiBCaWdJbnRlZ2VyX19nZXRfVG9TQnl0ZSh4KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRvQnl0ZSh4KSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9fZ2V0X1RvQnl0ZSh4KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRvSW50MTYoeCkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfX2dldF9Ub0ludDE2KHgpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdG9VSW50MTYoeCkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfX2dldF9Ub1VJbnQxNih4KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRvSW50MzIoeCkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfX2dldF9Ub0ludDMyKHgpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdG9VSW50MzIoeCkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfX2dldF9Ub1VJbnQzMih4KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRvSW50NjQoeCkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfX2dldF9Ub0ludDY0KHgpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdG9VSW50NjQoeCkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfX2dldF9Ub1VJbnQ2NCh4KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRvU2luZ2xlKHgpIHtcclxuICAgIHJldHVybiBCaWdJbnRlZ2VyX19nZXRfVG9TaW5nbGUoeCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB0b0RvdWJsZSh4KSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9fZ2V0X1RvRG91YmxlKHgpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdG9EZWNpbWFsKHgpIHtcclxuICAgIHJldHVybiBCaWdJbnRlZ2VyX19nZXRfVG9EZWNpbWFsKHgpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2lnbih4KSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9fZ2V0X1NpZ24oeCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc1plcm8oeCkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfX2dldF9Jc1plcm8oeCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc09uZSh4KSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9fZ2V0X0lzT25lKHgpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaGFzaCh4KSB7XHJcbiAgICByZXR1cm4gc2FmZUhhc2goeCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlKHgsIHkpIHtcclxuICAgIHJldHVybiB4LkNvbXBhcmVUbyh5KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyh4LCB5KSB7XHJcbiAgICByZXR1cm4gZXF1YWxzXzEoeCwgeSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB0b1N0cmluZyh4KSB7XHJcbiAgICByZXR1cm4gdG9TdHJpbmdfMSh4KTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGdldF9aZXJvID0gQmlnSW50ZWdlcl9nZXRfWmVybygpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldF9PbmUgPSBCaWdJbnRlZ2VyX2dldF9PbmUoKTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvcF9BZGRpdGlvbihhcmcwMCwgYXJnMDEpIHtcclxuICAgIHJldHVybiBCaWdJbnRlZ2VyX29wX0FkZGl0aW9uXzU2RjA1OUMwKGFyZzAwLCBhcmcwMSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvcF9TdWJ0cmFjdGlvbihhcmcwMCwgYXJnMDEpIHtcclxuICAgIHJldHVybiBCaWdJbnRlZ2VyX29wX1N1YnRyYWN0aW9uXzU2RjA1OUMwKGFyZzAwLCBhcmcwMSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvcF9NdWx0aXBseShhcmcwMCwgYXJnMDEpIHtcclxuICAgIHJldHVybiBCaWdJbnRlZ2VyX29wX011bHRpcGx5XzU2RjA1OUMwKGFyZzAwLCBhcmcwMSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvcF9EaXZpc2lvbihhcmcwMCwgYXJnMDEpIHtcclxuICAgIHJldHVybiBCaWdJbnRlZ2VyX29wX0RpdmlzaW9uXzU2RjA1OUMwKGFyZzAwLCBhcmcwMSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvcF9Nb2R1bHVzKGFyZzAwLCBhcmcwMSkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfb3BfTW9kdWx1c181NkYwNTlDMChhcmcwMCwgYXJnMDEpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gb3BfVW5hcnlOZWdhdGlvbihhcmcwMCkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfb3BfVW5hcnlOZWdhdGlvbl9aNjY1MjgyQzIoYXJnMDApO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gb3BfVW5hcnlQbHVzKGFyZzAwKSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9vcF9VbmFyeVBsdXNfWjY2NTI4MkMyKGFyZzAwKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG9wX1JpZ2h0U2hpZnQoYXJnMDAsIGFyZzAxKSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9vcF9SaWdodFNoaWZ0XzYyRTA4MkEyKGFyZzAwLCBhcmcwMSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvcF9MZWZ0U2hpZnQoYXJnMDAsIGFyZzAxKSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9vcF9MZWZ0U2hpZnRfNjJFMDgyQTIoYXJnMDAsIGFyZzAxKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG9wX0JpdHdpc2VBbmQoYXJnMDAsIGFyZzAxKSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9vcF9CaXR3aXNlQW5kXzU2RjA1OUMwKGFyZzAwLCBhcmcwMSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvcF9CaXR3aXNlT3IoYXJnMDAsIGFyZzAxKSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9vcF9CaXR3aXNlT3JfNTZGMDU5QzAoYXJnMDAsIGFyZzAxKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG9wX0V4Y2x1c2l2ZU9yKGFyZzAwLCBhcmcwMSkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfb3BfRXhjbHVzaXZlT3JfNTZGMDU5QzAoYXJnMDAsIGFyZzAxKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG9wX0xlc3NUaGFuKGFyZzAwLCBhcmcwMSkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfb3BfTGVzc1RoYW5fNTZGMDU5QzAoYXJnMDAsIGFyZzAxKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG9wX0xlc3NUaGFuT3JFcXVhbChhcmcwMCwgYXJnMDEpIHtcclxuICAgIHJldHVybiBCaWdJbnRlZ2VyX29wX0xlc3NUaGFuT3JFcXVhbF81NkYwNTlDMChhcmcwMCwgYXJnMDEpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gb3BfR3JlYXRlclRoYW4oYXJnMDAsIGFyZzAxKSB7XHJcbiAgICByZXR1cm4gQmlnSW50ZWdlcl9vcF9HcmVhdGVyVGhhbl81NkYwNTlDMChhcmcwMCwgYXJnMDEpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gb3BfR3JlYXRlclRoYW5PckVxdWFsKGFyZzAwLCBhcmcwMSkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfb3BfR3JlYXRlclRoYW5PckVxdWFsXzU2RjA1OUMwKGFyZzAwLCBhcmcwMSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvcF9FcXVhbGl0eShhcmcwMCwgYXJnMDEpIHtcclxuICAgIHJldHVybiBCaWdJbnRlZ2VyX29wX0VxdWFsaXR5XzU2RjA1OUMwKGFyZzAwLCBhcmcwMSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvcF9JbmVxdWFsaXR5KGFyZzAwLCBhcmcwMSkge1xyXG4gICAgcmV0dXJuIEJpZ0ludGVnZXJfb3BfSW5lcXVhbGl0eV81NkYwNTlDMChhcmcwMCwgYXJnMDEpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBmbGlwVHdvc0NvbXBsZW1lbnQoY3VyckJ5dGUsIGxvd0JpdEZvdW5kKSB7XHJcbiAgICBsZXQgYXJyYXk7XHJcbiAgICBjb25zdCBtYXRjaFZhbHVlID0gW2N1cnJCeXRlLCBsb3dCaXRGb3VuZF07XHJcbiAgICBpZiAobWF0Y2hWYWx1ZVsxXSkge1xyXG4gICAgICAgIHJldHVybiBbKGN1cnJCeXRlIF4gMjU1KSAmIDI1NSwgdHJ1ZV07XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChtYXRjaFZhbHVlWzBdID09PSAwKSB7XHJcbiAgICAgICAgcmV0dXJuIFswLCBmYWxzZV07XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICByZXR1cm4gWyhjdXJyQnl0ZSBeICgyNTQgPDwgKChhcnJheSA9IChuZXcgSW50MzJBcnJheShbMCwgMSwgMiwgMywgNCwgNSwgNiwgN10pKSwgYXJyYXkuZmluZCgoaSkgPT4gKChjdXJyQnl0ZSAmICgxIDw8IGkpKSA+IDApKSkpKSkgJiAyNTUsIHRydWVdO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdG9CeXRlQXJyYXkodmFsdWUpIHtcclxuICAgIGlmIChlcXVhbHNfMSh2YWx1ZSwgemVybykpIHtcclxuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoWzBdKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIGNvbnN0IGlzUG9zaXRpdmUgPSBjb21wYXJlXzEodmFsdWUsIHplcm8pID4gMDtcclxuICAgICAgICBjb25zdCB2YWx1ZV8xID0gaXNQb3NpdGl2ZSA/IHZhbHVlIDogQmlnSW50ZWdlcl9vcF9NdWx0aXBseV81NkYwNTlDMChCaWdJbnRlZ2VyXyRjdG9yX1o1MjQyNTlBNCgtMSksIHZhbHVlKTtcclxuICAgICAgICBjb25zdCBtYXNrMzIgPSBmcm9tSW50NjQoZnJvbUludGVnZXIoNDI5NDk2NzI5NSwgZmFsc2UsIDYpKTtcclxuICAgICAgICBjb25zdCBsb29wID0gKGFjY3VtQnl0ZXNfbXV0LCBjb25zdW1lVmFsdWVfbXV0LCBsb3dCaXRGb3VuZF9tdXQpID0+IHtcclxuICAgICAgICAgICAgbGV0IHZhbHVlXzYsIHZhbHVlXzgsIHZhbHVlXzksIHZhbHVlXzEwO1xyXG4gICAgICAgICAgICBsb29wOlxyXG4gICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgYWNjdW1CeXRlcyA9IGFjY3VtQnl0ZXNfbXV0LCBjb25zdW1lVmFsdWUgPSBjb25zdW1lVmFsdWVfbXV0LCBsb3dCaXRGb3VuZCA9IGxvd0JpdEZvdW5kX211dDtcclxuICAgICAgICAgICAgICAgIGlmIChjb21wYXJlXzEoY29uc3VtZVZhbHVlLCB6ZXJvKSA8PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYWNjdW1CeXRlc18xID0gaXNQb3NpdGl2ZSA/IHNraXBXaGlsZSgoYikgPT4gKGIgPT09IDApLCBhY2N1bUJ5dGVzKSA6IHNraXBXaGlsZSgoYl8xKSA9PiAoYl8xID09PSAyNTUpLCBhY2N1bUJ5dGVzKTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBpc0hpZ2hCaXRPbmUgPSAoaGVhZChhY2N1bUJ5dGVzXzEpICYgMTI4KSAhPT0gMDtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmV2ZXJzZSh0b0FycmF5KChpc1Bvc2l0aXZlICYmIGlzSGlnaEJpdE9uZSkgPyBjb25zKDAsIGFjY3VtQnl0ZXNfMSkgOiAoKCghaXNQb3NpdGl2ZSkgJiYgKCFpc0hpZ2hCaXRPbmUpKSA/IGNvbnMoMjU1LCBhY2N1bUJ5dGVzXzEpIDogYWNjdW1CeXRlc18xKSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY3VyclZhbHVlID0gdG9VSW50MzIoQmlnSW50ZWdlcl9vcF9CaXR3aXNlQW5kXzU2RjA1OUMwKGNvbnN1bWVWYWx1ZSwgbWFzazMyKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzUG9zaXRpdmUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYjAgPSBjdXJyVmFsdWUgJiAweEZGO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgYjE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlXzQgPSBjdXJyVmFsdWUgPj4+IDg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGIxID0gKHZhbHVlXzQgJiAweEZGKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGIyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZV81ID0gY3VyclZhbHVlID4+PiAxNjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYjIgPSAodmFsdWVfNSAmIDB4RkYpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhY2N1bUJ5dGVzX211dCA9IG9mQXJyYXlXaXRoVGFpbChbKHZhbHVlXzYgPSAoY3VyclZhbHVlID4+PiAyNCksIHZhbHVlXzYgJiAweEZGKSwgYjIsIGIxLCBiMF0sIGFjY3VtQnl0ZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdW1lVmFsdWVfbXV0ID0gQmlnSW50ZWdlcl9vcF9SaWdodFNoaWZ0XzYyRTA4MkEyKGNvbnN1bWVWYWx1ZSwgMzIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsb3dCaXRGb3VuZF9tdXQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUgbG9vcDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhdHRlcm5JbnB1dCA9IGZsaXBUd29zQ29tcGxlbWVudChjdXJyVmFsdWUgJiAweEZGLCBsb3dCaXRGb3VuZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhdHRlcm5JbnB1dF8xID0gZmxpcFR3b3NDb21wbGVtZW50KCh2YWx1ZV84ID0gKGN1cnJWYWx1ZSA+Pj4gOCksIHZhbHVlXzggJiAweEZGKSwgcGF0dGVybklucHV0WzFdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGF0dGVybklucHV0XzIgPSBmbGlwVHdvc0NvbXBsZW1lbnQoKHZhbHVlXzkgPSAoY3VyclZhbHVlID4+PiAxNiksIHZhbHVlXzkgJiAweEZGKSwgcGF0dGVybklucHV0XzFbMV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXR0ZXJuSW5wdXRfMyA9IGZsaXBUd29zQ29tcGxlbWVudCgodmFsdWVfMTAgPSAoY3VyclZhbHVlID4+PiAyNCksIHZhbHVlXzEwICYgMHhGRiksIHBhdHRlcm5JbnB1dF8yWzFdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWNjdW1CeXRlc19tdXQgPSBvZkFycmF5V2l0aFRhaWwoW3BhdHRlcm5JbnB1dF8zWzBdLCBwYXR0ZXJuSW5wdXRfMlswXSwgcGF0dGVybklucHV0XzFbMF0sIHBhdHRlcm5JbnB1dFswXV0sIGFjY3VtQnl0ZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdW1lVmFsdWVfbXV0ID0gQmlnSW50ZWdlcl9vcF9SaWdodFNoaWZ0XzYyRTA4MkEyKGNvbnN1bWVWYWx1ZSwgMzIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsb3dCaXRGb3VuZF9tdXQgPSBwYXR0ZXJuSW5wdXRfM1sxXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUgbG9vcDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIGxvb3AoZW1wdHkoKSwgdmFsdWVfMSwgZmFsc2UpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZnJvbUJ5dGVBcnJheShieXRlcykge1xyXG4gICAgaWYgKGJ5dGVzID09IG51bGwpIHtcclxuICAgICAgICB0aHJvdyAobmV3IEVycm9yKFwiYnl0ZXNcIikpO1xyXG4gICAgfVxyXG4gICAgaWYgKGJ5dGVzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIHJldHVybiB6ZXJvO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgY29uc3QgaXNQb3NpdGl2ZSA9IChieXRlc1tieXRlcy5sZW5ndGggLSAxXSAmIDEyOCkgPT09IDA7XHJcbiAgICAgICAgY29uc3QgYnVmZmVyID0gZmlsbChuZXcgVWludDhBcnJheSg0KSwgMCwgNCwgMCk7XHJcbiAgICAgICAgY29uc3QgbG9vcCA9IChhY2N1bVVJbnQzMl9tdXQsIGN1cnJJbmRleF9tdXQsIGJ5dGVzUmVtYWluaW5nX211dCwgbG93Qml0Rm91bmRfbXV0KSA9PiB7XHJcbiAgICAgICAgICAgIGxvb3A6XHJcbiAgICAgICAgICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBhY2N1bVVJbnQzMiA9IGFjY3VtVUludDMyX211dCwgY3VyckluZGV4ID0gY3VyckluZGV4X211dCwgYnl0ZXNSZW1haW5pbmcgPSBieXRlc1JlbWFpbmluZ19tdXQsIGxvd0JpdEZvdW5kID0gbG93Qml0Rm91bmRfbXV0O1xyXG4gICAgICAgICAgICAgICAgaWYgKGJ5dGVzUmVtYWluaW5nID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWVfMiA9IGZvbGQoKGFjYywgdmFsdWUpID0+IEJpZ0ludGVnZXJfb3BfQWRkaXRpb25fNTZGMDU5QzAoQmlnSW50ZWdlcl9vcF9MZWZ0U2hpZnRfNjJFMDgyQTIoYWNjLCAzMiksIGZyb21JbnQ2NChmcm9tSW50ZWdlcih2YWx1ZSwgZmFsc2UsIDYpKSksIHplcm8sIGFjY3VtVUludDMyKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNQb3NpdGl2ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWVfMjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBCaWdJbnRlZ2VyX29wX011bHRpcGx5XzU2RjA1OUMwKEJpZ0ludGVnZXJfJGN0b3JfWjUyNDI1OUE0KC0xKSwgdmFsdWVfMik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYnl0ZXNUb1Byb2Nlc3MgPSBtaW4oY29tcGFyZVByaW1pdGl2ZXMsIGJ5dGVzUmVtYWluaW5nLCA0KSB8IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaV8xID0gMDsgaV8xIDw9IChieXRlc1RvUHJvY2VzcyAtIDEpOyBpXzErKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBidWZmZXJbaV8xXSA9IGJ5dGVzW2N1cnJJbmRleCArIGlfMV07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpc1Bvc2l0aXZlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGwoYnVmZmVyLCBieXRlc1RvUHJvY2VzcywgNCAtIGJ5dGVzVG9Qcm9jZXNzLCAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWNjdW1VSW50MzJfbXV0ID0gY29ucygoKCgoKGJ1ZmZlclswXSB8ICgoYnVmZmVyWzFdIDw8IDgpID4+PiAwKSkgPj4+IDApIHwgKChidWZmZXJbMl0gPDwgMTYpID4+PiAwKSkgPj4+IDApIHwgKChidWZmZXJbM10gPDwgMjQpID4+PiAwKSkgPj4+IDAsIGFjY3VtVUludDMyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3VyckluZGV4X211dCA9IChjdXJySW5kZXggKyBieXRlc1RvUHJvY2Vzcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ5dGVzUmVtYWluaW5nX211dCA9IChieXRlc1JlbWFpbmluZyAtIGJ5dGVzVG9Qcm9jZXNzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbG93Qml0Rm91bmRfbXV0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlIGxvb3A7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxsKGJ1ZmZlciwgYnl0ZXNUb1Byb2Nlc3MsIDQgLSBieXRlc1RvUHJvY2VzcywgMjU1KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGF0dGVybklucHV0ID0gZmxpcFR3b3NDb21wbGVtZW50KGJ1ZmZlclswXSwgbG93Qml0Rm91bmQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXR0ZXJuSW5wdXRfMSA9IGZsaXBUd29zQ29tcGxlbWVudChidWZmZXJbMV0sIHBhdHRlcm5JbnB1dFsxXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhdHRlcm5JbnB1dF8yID0gZmxpcFR3b3NDb21wbGVtZW50KGJ1ZmZlclsyXSwgcGF0dGVybklucHV0XzFbMV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXR0ZXJuSW5wdXRfMyA9IGZsaXBUd29zQ29tcGxlbWVudChidWZmZXJbM10sIHBhdHRlcm5JbnB1dF8yWzFdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWNjdW1VSW50MzJfbXV0ID0gY29ucygoKCgoKHBhdHRlcm5JbnB1dFswXSB8ICgocGF0dGVybklucHV0XzFbMF0gPDwgOCkgPj4+IDApKSA+Pj4gMCkgfCAoKHBhdHRlcm5JbnB1dF8yWzBdIDw8IDE2KSA+Pj4gMCkpID4+PiAwKSB8ICgocGF0dGVybklucHV0XzNbMF0gPDwgMjQpID4+PiAwKSkgPj4+IDAsIGFjY3VtVUludDMyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3VyckluZGV4X211dCA9IChjdXJySW5kZXggKyBieXRlc1RvUHJvY2Vzcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ5dGVzUmVtYWluaW5nX211dCA9IChieXRlc1JlbWFpbmluZyAtIGJ5dGVzVG9Qcm9jZXNzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbG93Qml0Rm91bmRfbXV0ID0gcGF0dGVybklucHV0XzNbMV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlIGxvb3A7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiBsb29wKGVtcHR5KCksIDAsIGJ5dGVzLmxlbmd0aCwgZmFsc2UpO1xyXG4gICAgfVxyXG59XHJcblxyXG4iXSwibmFtZXMiOlsiQmlnSW50ZWdlcl9vcF9JbmVxdWFsaXR5XzU2RjA1OUMwIiwiQmlnSW50ZWdlcl9vcF9FcXVhbGl0eV81NkYwNTlDMCIsIkJpZ0ludGVnZXJfb3BfR3JlYXRlclRoYW5PckVxdWFsXzU2RjA1OUMwIiwiQmlnSW50ZWdlcl9vcF9HcmVhdGVyVGhhbl81NkYwNTlDMCIsIkJpZ0ludGVnZXJfb3BfTGVzc1RoYW5PckVxdWFsXzU2RjA1OUMwIiwiQmlnSW50ZWdlcl9vcF9MZXNzVGhhbl81NkYwNTlDMCIsIkJpZ0ludGVnZXJfb3BfRXhjbHVzaXZlT3JfNTZGMDU5QzAiLCJCaWdJbnRlZ2VyX29wX0JpdHdpc2VPcl81NkYwNTlDMCIsIkJpZ0ludGVnZXJfb3BfQml0d2lzZUFuZF81NkYwNTlDMCIsIkJpZ0ludGVnZXJfb3BfTGVmdFNoaWZ0XzYyRTA4MkEyIiwiQmlnSW50ZWdlcl9vcF9SaWdodFNoaWZ0XzYyRTA4MkEyIiwiQmlnSW50ZWdlcl9vcF9VbmFyeVBsdXNfWjY2NTI4MkMyIiwiQmlnSW50ZWdlcl9vcF9VbmFyeU5lZ2F0aW9uX1o2NjUyODJDMiIsIkJpZ0ludGVnZXJfb3BfTW9kdWx1c181NkYwNTlDMCIsIkJpZ0ludGVnZXJfb3BfRGl2aXNpb25fNTZGMDU5QzAiLCJCaWdJbnRlZ2VyX29wX011bHRpcGx5XzU2RjA1OUMwIiwiQmlnSW50ZWdlcl9vcF9TdWJ0cmFjdGlvbl81NkYwNTlDMCIsIkJpZ0ludGVnZXJfb3BfQWRkaXRpb25fNTZGMDU5QzAiLCJCaWdJbnRlZ2VyX19nZXRfSXNPbmUiLCJCaWdJbnRlZ2VyX19nZXRfSXNaZXJvIiwiQmlnSW50ZWdlcl9fZ2V0X1NpZ24iLCJCaWdJbnRlZ2VyX19nZXRfVG9EZWNpbWFsIiwiQmlnSW50ZWdlcl9fZ2V0X1RvRG91YmxlIiwiQmlnSW50ZWdlcl9fZ2V0X1RvU2luZ2xlIiwiQmlnSW50ZWdlcl9fZ2V0X1RvVUludDY0IiwiQmlnSW50ZWdlcl9fZ2V0X1RvSW50NjQiLCJCaWdJbnRlZ2VyX19nZXRfVG9VSW50MzIiLCJCaWdJbnRlZ2VyX19nZXRfVG9JbnQzMiIsIkJpZ0ludGVnZXJfX2dldF9Ub1VJbnQxNiIsIkJpZ0ludGVnZXJfX2dldF9Ub0ludDE2IiwiQmlnSW50ZWdlcl9fZ2V0X1RvQnl0ZSIsIkJpZ0ludGVnZXJfX2dldF9Ub1NCeXRlIiwiQmlnSW50ZWdlcl8kY3Rvcl9aNTI0MjU5QTQiLCJCaWdJbnRlZ2VyXyRjdG9yX1o1MjQyNTlDMSIsIkJpZ0ludGVnZXJfZ2V0X1R3byIsIkJpZ0ludGVnZXJfZ2V0X09uZSIsIkJpZ0ludGVnZXJfZ2V0X1plcm8iLCJCaWdJbnRlZ2VyX0Fic19aNjY1MjgyQzIiLCJCaWdJbnRlZ2VyX1Bvd182MkUwODJBMiIsIkJpZ0ludGVnZXJfR3JlYXRlc3RDb21tb25EaXZpc29yXzU2RjA1OUMwIiwiQmlnSW50ZWdlcl9EaXZSZW1fNTZGMDU5QzAiLCJCaWdJbnRlZ2VyX1BhcnNlX1o3MjFDODNDNSIsIkJpZ0ludGVnZXIiLCJmcm9tSW50ZWdlciIsImNvbXBhcmVQcmltaXRpdmVzIiwibWluIiwiY29tcGFyZSIsImNvbXBhcmVfMSIsImVxdWFscyIsImVxdWFsc18xIiwic2FmZUhhc2giLCJ0b1N0cmluZyIsInRvU3RyaW5nXzEiLCJmb2xkIiwiZW1wdHkiLCJvZkFycmF5V2l0aFRhaWwiLCJjb25zIiwidG9BcnJheSIsImhlYWQiLCJza2lwV2hpbGUiLCJmaWxsIiwicmV2ZXJzZSIsImlzQmlnSW50IiwieCIsInRyeVBhcnNlIiwic3RyIiwicmVzIiwiY29udGVudHMiLCJtYXRjaFZhbHVlIiwiZGl2UmVtIiwieSIsInJlbWFpbmRlciIsInBhdHRlcm5JbnB1dCIsInBhcnNlIiwiYXJnMDAiLCJncmVhdGVzdENvbW1vbkRpdmlzb3IiLCJhcmcwMSIsInBvdyIsImFicyIsInplcm8iLCJvbmUiLCJ0d28iLCJmcm9tU3RyaW5nIiwicyIsImZyb21aZXJvIiwiZnJvbU9uZSIsImZyb21JbnQ2NCIsImkiLCJmcm9tSW50MzIiLCJ0b1NCeXRlIiwidG9CeXRlIiwidG9JbnQxNiIsInRvVUludDE2IiwidG9JbnQzMiIsInRvVUludDMyIiwidG9JbnQ2NCIsInRvVUludDY0IiwidG9TaW5nbGUiLCJ0b0RvdWJsZSIsInRvRGVjaW1hbCIsInNpZ24iLCJpc1plcm8iLCJpc09uZSIsImhhc2giLCJDb21wYXJlVG8iLCJnZXRfWmVybyIsImdldF9PbmUiLCJvcF9BZGRpdGlvbiIsIm9wX1N1YnRyYWN0aW9uIiwib3BfTXVsdGlwbHkiLCJvcF9EaXZpc2lvbiIsIm9wX01vZHVsdXMiLCJvcF9VbmFyeU5lZ2F0aW9uIiwib3BfVW5hcnlQbHVzIiwib3BfUmlnaHRTaGlmdCIsIm9wX0xlZnRTaGlmdCIsIm9wX0JpdHdpc2VBbmQiLCJvcF9CaXR3aXNlT3IiLCJvcF9FeGNsdXNpdmVPciIsIm9wX0xlc3NUaGFuIiwib3BfTGVzc1RoYW5PckVxdWFsIiwib3BfR3JlYXRlclRoYW4iLCJvcF9HcmVhdGVyVGhhbk9yRXF1YWwiLCJvcF9FcXVhbGl0eSIsIm9wX0luZXF1YWxpdHkiLCJmbGlwVHdvc0NvbXBsZW1lbnQiLCJjdXJyQnl0ZSIsImxvd0JpdEZvdW5kIiwiYXJyYXkiLCJJbnQzMkFycmF5IiwiZmluZCIsInRvQnl0ZUFycmF5IiwidmFsdWUiLCJVaW50OEFycmF5IiwiaXNQb3NpdGl2ZSIsInZhbHVlXzEiLCJtYXNrMzIiLCJsb29wIiwiYWNjdW1CeXRlc19tdXQiLCJjb25zdW1lVmFsdWVfbXV0IiwibG93Qml0Rm91bmRfbXV0IiwidmFsdWVfNiIsInZhbHVlXzgiLCJ2YWx1ZV85IiwidmFsdWVfMTAiLCJhY2N1bUJ5dGVzIiwiY29uc3VtZVZhbHVlIiwiYWNjdW1CeXRlc18xIiwiYiIsImJfMSIsImlzSGlnaEJpdE9uZSIsImN1cnJWYWx1ZSIsImIwIiwiYjEiLCJ2YWx1ZV80IiwiYjIiLCJ2YWx1ZV81IiwicGF0dGVybklucHV0XzEiLCJwYXR0ZXJuSW5wdXRfMiIsInBhdHRlcm5JbnB1dF8zIiwiZnJvbUJ5dGVBcnJheSIsImJ5dGVzIiwiRXJyb3IiLCJsZW5ndGgiLCJidWZmZXIiLCJhY2N1bVVJbnQzMl9tdXQiLCJjdXJySW5kZXhfbXV0IiwiYnl0ZXNSZW1haW5pbmdfbXV0IiwiYWNjdW1VSW50MzIiLCJjdXJySW5kZXgiLCJieXRlc1JlbWFpbmluZyIsInZhbHVlXzIiLCJhY2MiLCJieXRlc1RvUHJvY2VzcyIsImlfMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/BigInt.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/BigInt/n.js":
/*!*************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/BigInt/n.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BigNat\": () => (/* binding */ BigNat),\n/* harmony export */   \"BigNat$reflection\": () => (/* binding */ BigNat$reflection),\n/* harmony export */   \"BigNatModule_FFT_pow32\": () => (/* binding */ BigNatModule_FFT_pow32),\n/* harmony export */   \"BigNatModule_FFT_leastBounding2Power\": () => (/* binding */ BigNatModule_FFT_leastBounding2Power),\n/* harmony export */   \"BigNatModule_FFT_p\": () => (/* binding */ BigNatModule_FFT_p),\n/* harmony export */   \"BigNatModule_FFT_w\": () => (/* binding */ BigNatModule_FFT_w),\n/* harmony export */   \"BigNatModule_FFT_m\": () => (/* binding */ BigNatModule_FFT_m),\n/* harmony export */   \"BigNatModule_FFT_k\": () => (/* binding */ BigNatModule_FFT_k),\n/* harmony export */   \"BigNatModule_FFT_g\": () => (/* binding */ BigNatModule_FFT_g),\n/* harmony export */   \"BigNatModule_FFT_primeP\": () => (/* binding */ BigNatModule_FFT_primeP),\n/* harmony export */   \"BigNatModule_FFT_maxBitsInsideFp\": () => (/* binding */ BigNatModule_FFT_maxBitsInsideFp),\n/* harmony export */   \"BigNatModule_FFT_Fp_p\": () => (/* binding */ BigNatModule_FFT_Fp_p),\n/* harmony export */   \"BigNatModule_FFT_Fp_p64\": () => (/* binding */ BigNatModule_FFT_Fp_p64),\n/* harmony export */   \"BigNatModule_FFT_Fp_toInt\": () => (/* binding */ BigNatModule_FFT_Fp_toInt),\n/* harmony export */   \"BigNatModule_FFT_Fp_ofInt32\": () => (/* binding */ BigNatModule_FFT_Fp_ofInt32),\n/* harmony export */   \"BigNatModule_FFT_Fp_mzero\": () => (/* binding */ BigNatModule_FFT_Fp_mzero),\n/* harmony export */   \"BigNatModule_FFT_Fp_mone\": () => (/* binding */ BigNatModule_FFT_Fp_mone),\n/* harmony export */   \"BigNatModule_FFT_Fp_mtwo\": () => (/* binding */ BigNatModule_FFT_Fp_mtwo),\n/* harmony export */   \"BigNatModule_FFT_Fp_mpow\": () => (/* binding */ BigNatModule_FFT_Fp_mpow),\n/* harmony export */   \"BigNatModule_FFT_Fp_mpowL\": () => (/* binding */ BigNatModule_FFT_Fp_mpowL),\n/* harmony export */   \"BigNatModule_FFT_Fp_m2PowNthRoot\": () => (/* binding */ BigNatModule_FFT_Fp_m2PowNthRoot),\n/* harmony export */   \"BigNatModule_FFT_Fp_minv\": () => (/* binding */ BigNatModule_FFT_Fp_minv),\n/* harmony export */   \"BigNatModule_FFT_computeFFT\": () => (/* binding */ BigNatModule_FFT_computeFFT),\n/* harmony export */   \"BigNatModule_FFT_computFftInPlace\": () => (/* binding */ BigNatModule_FFT_computFftInPlace),\n/* harmony export */   \"BigNatModule_FFT_computeInverseFftInPlace\": () => (/* binding */ BigNatModule_FFT_computeInverseFftInPlace),\n/* harmony export */   \"BigNatModule_FFT_maxTwoPower\": () => (/* binding */ BigNatModule_FFT_maxTwoPower),\n/* harmony export */   \"BigNatModule_FFT_twoPowerTable\": () => (/* binding */ BigNatModule_FFT_twoPowerTable),\n/* harmony export */   \"BigNatModule_FFT_computeFftPaddedPolynomialProduct\": () => (/* binding */ BigNatModule_FFT_computeFftPaddedPolynomialProduct),\n/* harmony export */   \"BigNatModule_FFT_padTo\": () => (/* binding */ BigNatModule_FFT_padTo),\n/* harmony export */   \"BigNatModule_FFT_computeFftPolynomialProduct\": () => (/* binding */ BigNatModule_FFT_computeFftPolynomialProduct),\n/* harmony export */   \"BigNatModule_FFT_mzero\": () => (/* binding */ BigNatModule_FFT_mzero),\n/* harmony export */   \"BigNatModule_FFT_mone\": () => (/* binding */ BigNatModule_FFT_mone),\n/* harmony export */   \"BigNatModule_FFT_maxFp\": () => (/* binding */ BigNatModule_FFT_maxFp),\n/* harmony export */   \"BigNatModule_bound\": () => (/* binding */ BigNatModule_bound),\n/* harmony export */   \"BigNatModule_setBound\": () => (/* binding */ BigNatModule_setBound),\n/* harmony export */   \"BigNatModule_coeff\": () => (/* binding */ BigNatModule_coeff),\n/* harmony export */   \"BigNatModule_coeff64\": () => (/* binding */ BigNatModule_coeff64),\n/* harmony export */   \"BigNatModule_setCoeff\": () => (/* binding */ BigNatModule_setCoeff),\n/* harmony export */   \"BigNatModule_pow64\": () => (/* binding */ BigNatModule_pow64),\n/* harmony export */   \"BigNatModule_pow32\": () => (/* binding */ BigNatModule_pow32),\n/* harmony export */   \"BigNatModule_hash\": () => (/* binding */ BigNatModule_hash),\n/* harmony export */   \"BigNatModule_maxInt\": () => (/* binding */ BigNatModule_maxInt),\n/* harmony export */   \"BigNatModule_minInt\": () => (/* binding */ BigNatModule_minInt),\n/* harmony export */   \"BigNatModule_baseBits\": () => (/* binding */ BigNatModule_baseBits),\n/* harmony export */   \"BigNatModule_baseN\": () => (/* binding */ BigNatModule_baseN),\n/* harmony export */   \"BigNatModule_baseMask\": () => (/* binding */ BigNatModule_baseMask),\n/* harmony export */   \"BigNatModule_baseNi64\": () => (/* binding */ BigNatModule_baseNi64),\n/* harmony export */   \"BigNatModule_baseMaski64\": () => (/* binding */ BigNatModule_baseMaski64),\n/* harmony export */   \"BigNatModule_baseMaskU\": () => (/* binding */ BigNatModule_baseMaskU),\n/* harmony export */   \"BigNatModule_baseMask32A\": () => (/* binding */ BigNatModule_baseMask32A),\n/* harmony export */   \"BigNatModule_baseMask32B\": () => (/* binding */ BigNatModule_baseMask32B),\n/* harmony export */   \"BigNatModule_baseShift32B\": () => (/* binding */ BigNatModule_baseShift32B),\n/* harmony export */   \"BigNatModule_baseMask64A\": () => (/* binding */ BigNatModule_baseMask64A),\n/* harmony export */   \"BigNatModule_baseMask64B\": () => (/* binding */ BigNatModule_baseMask64B),\n/* harmony export */   \"BigNatModule_baseMask64C\": () => (/* binding */ BigNatModule_baseMask64C),\n/* harmony export */   \"BigNatModule_baseShift64B\": () => (/* binding */ BigNatModule_baseShift64B),\n/* harmony export */   \"BigNatModule_baseShift64C\": () => (/* binding */ BigNatModule_baseShift64C),\n/* harmony export */   \"BigNatModule_divbase\": () => (/* binding */ BigNatModule_divbase),\n/* harmony export */   \"BigNatModule_modbase\": () => (/* binding */ BigNatModule_modbase),\n/* harmony export */   \"BigNatModule_createN\": () => (/* binding */ BigNatModule_createN),\n/* harmony export */   \"BigNatModule_copyN\": () => (/* binding */ BigNatModule_copyN),\n/* harmony export */   \"BigNatModule_normN\": () => (/* binding */ BigNatModule_normN),\n/* harmony export */   \"BigNatModule_boundInt\": () => (/* binding */ BigNatModule_boundInt),\n/* harmony export */   \"BigNatModule_boundInt64\": () => (/* binding */ BigNatModule_boundInt64),\n/* harmony export */   \"BigNatModule_boundBase\": () => (/* binding */ BigNatModule_boundBase),\n/* harmony export */   \"BigNatModule_embed\": () => (/* binding */ BigNatModule_embed),\n/* harmony export */   \"BigNatModule_embed64\": () => (/* binding */ BigNatModule_embed64),\n/* harmony export */   \"BigNatModule_eval32\": () => (/* binding */ BigNatModule_eval32),\n/* harmony export */   \"BigNatModule_eval64\": () => (/* binding */ BigNatModule_eval64),\n/* harmony export */   \"BigNatModule_one\": () => (/* binding */ BigNatModule_one),\n/* harmony export */   \"BigNatModule_zero\": () => (/* binding */ BigNatModule_zero),\n/* harmony export */   \"BigNatModule_restrictTo\": () => (/* binding */ BigNatModule_restrictTo),\n/* harmony export */   \"BigNatModule_shiftUp\": () => (/* binding */ BigNatModule_shiftUp),\n/* harmony export */   \"BigNatModule_shiftDown\": () => (/* binding */ BigNatModule_shiftDown),\n/* harmony export */   \"BigNatModule_degree\": () => (/* binding */ BigNatModule_degree),\n/* harmony export */   \"BigNatModule_addP\": () => (/* binding */ BigNatModule_addP),\n/* harmony export */   \"BigNatModule_add\": () => (/* binding */ BigNatModule_add),\n/* harmony export */   \"BigNatModule_subP\": () => (/* binding */ BigNatModule_subP),\n/* harmony export */   \"BigNatModule_sub\": () => (/* binding */ BigNatModule_sub),\n/* harmony export */   \"BigNatModule_isZero\": () => (/* binding */ BigNatModule_isZero),\n/* harmony export */   \"BigNatModule_IsZero\": () => (/* binding */ BigNatModule_IsZero),\n/* harmony export */   \"BigNatModule_isOne\": () => (/* binding */ BigNatModule_isOne),\n/* harmony export */   \"BigNatModule_equal\": () => (/* binding */ BigNatModule_equal),\n/* harmony export */   \"BigNatModule_shiftCompare\": () => (/* binding */ BigNatModule_shiftCompare),\n/* harmony export */   \"BigNatModule_compare\": () => (/* binding */ BigNatModule_compare),\n/* harmony export */   \"BigNatModule_lt\": () => (/* binding */ BigNatModule_lt),\n/* harmony export */   \"BigNatModule_gt\": () => (/* binding */ BigNatModule_gt),\n/* harmony export */   \"BigNatModule_lte\": () => (/* binding */ BigNatModule_lte),\n/* harmony export */   \"BigNatModule_gte\": () => (/* binding */ BigNatModule_gte),\n/* harmony export */   \"BigNatModule_min\": () => (/* binding */ BigNatModule_min),\n/* harmony export */   \"BigNatModule_max\": () => (/* binding */ BigNatModule_max),\n/* harmony export */   \"BigNatModule_contributeArr\": () => (/* binding */ BigNatModule_contributeArr),\n/* harmony export */   \"BigNatModule_scale\": () => (/* binding */ BigNatModule_scale),\n/* harmony export */   \"BigNatModule_mulSchoolBookBothSmall\": () => (/* binding */ BigNatModule_mulSchoolBookBothSmall),\n/* harmony export */   \"BigNatModule_mulSchoolBookCarry\": () => (/* binding */ BigNatModule_mulSchoolBookCarry),\n/* harmony export */   \"BigNatModule_mulSchoolBookOneSmall\": () => (/* binding */ BigNatModule_mulSchoolBookOneSmall),\n/* harmony export */   \"BigNatModule_mulSchoolBookNeitherSmall\": () => (/* binding */ BigNatModule_mulSchoolBookNeitherSmall),\n/* harmony export */   \"BigNatModule_mulSchoolBook\": () => (/* binding */ BigNatModule_mulSchoolBook),\n/* harmony export */   \"BigNatModule_encoding\": () => (/* binding */ BigNatModule_encoding),\n/* harmony export */   \"BigNatModule_encoding$reflection\": () => (/* binding */ BigNatModule_encoding$reflection),\n/* harmony export */   \"BigNatModule_mkEncoding\": () => (/* binding */ BigNatModule_mkEncoding),\n/* harmony export */   \"BigNatModule_table\": () => (/* binding */ BigNatModule_table),\n/* harmony export */   \"BigNatModule_calculateTableTow\": () => (/* binding */ BigNatModule_calculateTableTow),\n/* harmony export */   \"BigNatModule_encodingGivenResultBits\": () => (/* binding */ BigNatModule_encodingGivenResultBits),\n/* harmony export */   \"BigNatModule_bitmask\": () => (/* binding */ BigNatModule_bitmask),\n/* harmony export */   \"BigNatModule_twopowers\": () => (/* binding */ BigNatModule_twopowers),\n/* harmony export */   \"BigNatModule_twopowersI64\": () => (/* binding */ BigNatModule_twopowersI64),\n/* harmony export */   \"BigNatModule_wordBits\": () => (/* binding */ BigNatModule_wordBits),\n/* harmony export */   \"BigNatModule_bits\": () => (/* binding */ BigNatModule_bits),\n/* harmony export */   \"BigNatModule_extractBits\": () => (/* binding */ BigNatModule_extractBits),\n/* harmony export */   \"BigNatModule_encodePoly\": () => (/* binding */ BigNatModule_encodePoly),\n/* harmony export */   \"BigNatModule_decodeResultBits\": () => (/* binding */ BigNatModule_decodeResultBits),\n/* harmony export */   \"BigNatModule_decodePoly\": () => (/* binding */ BigNatModule_decodePoly),\n/* harmony export */   \"BigNatModule_quickMulUsingFft\": () => (/* binding */ BigNatModule_quickMulUsingFft),\n/* harmony export */   \"BigNatModule_minDigitsKaratsuba\": () => (/* binding */ BigNatModule_minDigitsKaratsuba),\n/* harmony export */   \"BigNatModule_recMulKaratsuba\": () => (/* binding */ BigNatModule_recMulKaratsuba),\n/* harmony export */   \"BigNatModule_mulKaratsuba\": () => (/* binding */ BigNatModule_mulKaratsuba),\n/* harmony export */   \"BigNatModule_productDigitsUpperSchoolBook\": () => (/* binding */ BigNatModule_productDigitsUpperSchoolBook),\n/* harmony export */   \"BigNatModule_singleDigitForceSchoolBook\": () => (/* binding */ BigNatModule_singleDigitForceSchoolBook),\n/* harmony export */   \"BigNatModule_productDigitsUpperFft\": () => (/* binding */ BigNatModule_productDigitsUpperFft),\n/* harmony export */   \"BigNatModule_mul\": () => (/* binding */ BigNatModule_mul),\n/* harmony export */   \"BigNatModule_scaleSubInPlace\": () => (/* binding */ BigNatModule_scaleSubInPlace),\n/* harmony export */   \"BigNatModule_scaleSub\": () => (/* binding */ BigNatModule_scaleSub),\n/* harmony export */   \"BigNatModule_scaleAddInPlace\": () => (/* binding */ BigNatModule_scaleAddInPlace),\n/* harmony export */   \"BigNatModule_scaleAdd\": () => (/* binding */ BigNatModule_scaleAdd),\n/* harmony export */   \"BigNatModule_removeFactor\": () => (/* binding */ BigNatModule_removeFactor),\n/* harmony export */   \"BigNatModule_divmod\": () => (/* binding */ BigNatModule_divmod),\n/* harmony export */   \"BigNatModule_div\": () => (/* binding */ BigNatModule_div),\n/* harmony export */   \"BigNatModule_rem\": () => (/* binding */ BigNatModule_rem),\n/* harmony export */   \"BigNatModule_bitAnd\": () => (/* binding */ BigNatModule_bitAnd),\n/* harmony export */   \"BigNatModule_bitOr\": () => (/* binding */ BigNatModule_bitOr),\n/* harmony export */   \"BigNatModule_bitXor\": () => (/* binding */ BigNatModule_bitXor),\n/* harmony export */   \"BigNatModule_hcf\": () => (/* binding */ BigNatModule_hcf),\n/* harmony export */   \"BigNatModule_two\": () => (/* binding */ BigNatModule_two),\n/* harmony export */   \"BigNatModule_powi\": () => (/* binding */ BigNatModule_powi),\n/* harmony export */   \"BigNatModule_pow\": () => (/* binding */ BigNatModule_pow),\n/* harmony export */   \"BigNatModule_toFloat\": () => (/* binding */ BigNatModule_toFloat),\n/* harmony export */   \"BigNatModule_ofInt32\": () => (/* binding */ BigNatModule_ofInt32),\n/* harmony export */   \"BigNatModule_ofInt64\": () => (/* binding */ BigNatModule_ofInt64),\n/* harmony export */   \"BigNatModule_toUInt32\": () => (/* binding */ BigNatModule_toUInt32),\n/* harmony export */   \"BigNatModule_toUInt64\": () => (/* binding */ BigNatModule_toUInt64),\n/* harmony export */   \"BigNatModule_toString\": () => (/* binding */ BigNatModule_toString),\n/* harmony export */   \"BigNatModule_ofString\": () => (/* binding */ BigNatModule_ofString),\n/* harmony export */   \"BigNatModule_isSmall\": () => (/* binding */ BigNatModule_isSmall),\n/* harmony export */   \"BigNatModule_getSmall\": () => (/* binding */ BigNatModule_getSmall),\n/* harmony export */   \"BigNatModule_factorial\": () => (/* binding */ BigNatModule_factorial)\n/* harmony export */ });\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _Reflection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _Long_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Long.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Long.js\");\n/* harmony import */ var _Array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Array.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js\");\n/* harmony import */ var _List_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../List.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/List.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _String_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../String.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar BigNat = /*#__PURE__*/function (_Record) {\n  _inherits(BigNat, _Record);\n  var _super = _createSuper(BigNat);\n  function BigNat(bound, digits) {\n    var _this;\n    _classCallCheck(this, BigNat);\n    _this = _super.call(this);\n    _this.bound = bound | 0;\n    _this.digits = digits;\n    return _this;\n  }\n  return _createClass(BigNat);\n}(_Types_js__WEBPACK_IMPORTED_MODULE_0__.Record);\nfunction BigNat$reflection() {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.record_type)(\"BigInt.BigNat\", [], BigNat, function () {\n    return [[\"bound\", _Reflection_js__WEBPACK_IMPORTED_MODULE_1__.int32_type], [\"digits\", (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.array_type)(_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.int32_type)]];\n  });\n}\nfunction BigNatModule_FFT_pow32(x_mut, n_mut) {\n  BigNatModule_FFT_pow32: while (true) {\n    var x = x_mut,\n      n = n_mut;\n    if (n === 0) {\n      return 1;\n    } else if (n % 2 === 0) {\n      x_mut = x * x;\n      n_mut = ~~(n / 2);\n      continue BigNatModule_FFT_pow32;\n    } else {\n      return x * BigNatModule_FFT_pow32(x * x, ~~(n / 2)) | 0;\n    }\n    break;\n  }\n}\nfunction BigNatModule_FFT_leastBounding2Power(b) {\n  var findBounding2Power = function findBounding2Power(b_1_mut, tp_mut, i_mut) {\n    findBounding2Power: while (true) {\n      var b_1 = b_1_mut,\n        tp = tp_mut,\n        i = i_mut;\n      if (b_1 <= tp) {\n        return [tp, i];\n      } else {\n        b_1_mut = b_1;\n        tp_mut = tp * 2;\n        i_mut = i + 1;\n        continue findBounding2Power;\n      }\n      break;\n    }\n  };\n  return findBounding2Power(b, 1, 0);\n}\nvar BigNatModule_FFT_p = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(2013265921, 0, false);\nvar BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\nvar BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\nvar BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\nvar BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\nvar BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\nvar BigNatModule_FFT_primeP = BigNatModule_FFT_p;\nvar BigNatModule_FFT_maxBitsInsideFp = 30;\nvar BigNatModule_FFT_Fp_p = 2013265921;\nvar BigNatModule_FFT_Fp_p64 = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(2013265921, 0, true);\nfunction BigNatModule_FFT_Fp_toInt(x) {\n  return ~~x;\n}\nfunction BigNatModule_FFT_Fp_ofInt32(x) {\n  return x >>> 0;\n}\nvar BigNatModule_FFT_Fp_mzero = 0;\nvar BigNatModule_FFT_Fp_mone = 1;\nvar BigNatModule_FFT_Fp_mtwo = 2;\nfunction BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\n  BigNatModule_FFT_Fp_mpow: while (true) {\n    var x = x_mut,\n      n = n_mut;\n    if (n === 0) {\n      return BigNatModule_FFT_Fp_mone;\n    } else if (n % 2 === 0) {\n      x_mut = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n      n_mut = ~~(n / 2);\n      continue BigNatModule_FFT_Fp_mpow;\n    } else {\n      var y_2 = BigNatModule_FFT_Fp_mpow((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~~(n / 2));\n      return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }\n    break;\n  }\n}\nfunction BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\n  BigNatModule_FFT_Fp_mpowL: while (true) {\n    var x = x_mut,\n      n = n_mut;\n    if ((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.equals)(n, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(0, 0, false))) {\n      return BigNatModule_FFT_Fp_mone;\n    } else if ((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.equals)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)(n, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(2, 0, false)), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(0, 0, false))) {\n      x_mut = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n      n_mut = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Division)(n, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(2, 0, false));\n      continue BigNatModule_FFT_Fp_mpowL;\n    } else {\n      var y_2 = BigNatModule_FFT_Fp_mpowL((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Division)(n, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(2, 0, false)));\n      return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }\n    break;\n  }\n}\nfunction BigNatModule_FFT_Fp_m2PowNthRoot(n) {\n  return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\n}\nfunction BigNatModule_FFT_Fp_minv(x) {\n  return BigNatModule_FFT_Fp_mpowL(x, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Subtraction)(BigNatModule_FFT_primeP, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(2, 0, false)));\n}\nfunction BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\n  var x_1, x_3, y_5;\n  if (n === 1) {\n    res[offset] = u[mu];\n  } else {\n    var halfN = ~~(n / 2) | 0;\n    var ww = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(w, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    var offsetHalfN = offset + halfN | 0;\n    BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n    BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n    var wj = BigNatModule_FFT_Fp_mone;\n    for (var j = 0; j <= halfN - 1; j++) {\n      var even = res[offset + j];\n      var odd = res[offsetHalfN + j];\n      res[offset + j] = (even + (x_1 = wj, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x_1, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p;\n      res[offsetHalfN + j] = (even + BigNatModule_FFT_Fp_p - (x_3 = wj, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x_3, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p;\n      wj = (y_5 = wj, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(w, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n    }\n  }\n}\nfunction BigNatModule_FFT_computFftInPlace(n, w, u) {\n  var res = (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.fill)(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\n  BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\n  return res;\n}\nfunction BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\n  var bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.map)(function (y) {\n    return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(bigKInv, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n  }, BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\n}\nvar BigNatModule_FFT_maxTwoPower = 29;\nvar BigNatModule_FFT_twoPowerTable = (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.initialize)(BigNatModule_FFT_maxTwoPower - 1, function (i) {\n  return BigNatModule_FFT_pow32(2, i);\n}, Int32Array);\nfunction BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\n  var w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\n  var n = bigK | 0;\n  var uT = BigNatModule_FFT_computFftInPlace(n, w, u);\n  var vT = BigNatModule_FFT_computFftInPlace(n, w, v);\n  return BigNatModule_FFT_computeInverseFftInPlace(n, w, (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.initialize)(n, function (i) {\n    var x = uT[i];\n    var y = vT[i];\n    return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n  }, Uint32Array));\n}\nfunction BigNatModule_FFT_padTo(n, u) {\n  var uBound = u.length | 0;\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.initialize)(n, function (i) {\n    return i < uBound ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero;\n  }, Uint32Array);\n}\nfunction BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\n  var patternInput = BigNatModule_FFT_leastBounding2Power(degu + degv + 1);\n  var bigK = patternInput[0] | 0;\n  var w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\n  var u_1 = BigNatModule_FFT_padTo(bigK, u);\n  var v_1 = BigNatModule_FFT_padTo(bigK, v);\n  var n = bigK | 0;\n  var uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\n  var vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.map)(BigNatModule_FFT_Fp_toInt, BigNatModule_FFT_computeInverseFftInPlace(n, w, (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.initialize)(n, function (i) {\n    var x = uT[i];\n    var y = vT[i];\n    return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(x, true, 6), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n  }, Uint32Array)), Int32Array);\n}\nvar BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\nvar BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\nvar BigNatModule_FFT_maxFp = (BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\nfunction BigNatModule_bound(n) {\n  return n.bound;\n}\nfunction BigNatModule_setBound(n, v) {\n  n.bound = v | 0;\n}\nfunction BigNatModule_coeff(n, i) {\n  return n.digits[i];\n}\nfunction BigNatModule_coeff64(n, i) {\n  return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(BigNatModule_coeff(n, i), false, 2);\n}\nfunction BigNatModule_setCoeff(n, i, v) {\n  n.digits[i] = v | 0;\n}\nfunction BigNatModule_pow64(x_mut, n_mut) {\n  BigNatModule_pow64: while (true) {\n    var x = x_mut,\n      n = n_mut;\n    if (n === 0) {\n      return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(1, 0, false);\n    } else if (n % 2 === 0) {\n      x_mut = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)(x, x);\n      n_mut = ~~(n / 2);\n      continue BigNatModule_pow64;\n    } else {\n      return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)(x, BigNatModule_pow64((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)(x, x), ~~(n / 2)));\n    }\n    break;\n  }\n}\nfunction BigNatModule_pow32(x_mut, n_mut) {\n  BigNatModule_pow32: while (true) {\n    var x = x_mut,\n      n = n_mut;\n    if (n === 0) {\n      return 1;\n    } else if (n % 2 === 0) {\n      x_mut = x * x;\n      n_mut = ~~(n / 2);\n      continue BigNatModule_pow32;\n    } else {\n      return x * BigNatModule_pow32(x * x, ~~(n / 2)) | 0;\n    }\n    break;\n  }\n}\nfunction BigNatModule_hash(n) {\n  var res = 0;\n  for (var i = 0; i <= n.bound - 1; i++) {\n    res = n.digits[i] + (res << 3) | 0;\n  }\n  return res | 0;\n}\nfunction BigNatModule_maxInt(a, b) {\n  if (a < b) {\n    return b | 0;\n  } else {\n    return a | 0;\n  }\n}\nfunction BigNatModule_minInt(a, b) {\n  if (a < b) {\n    return a | 0;\n  } else {\n    return b | 0;\n  }\n}\nvar BigNatModule_baseBits = 24;\nvar BigNatModule_baseN = 16777216;\nvar BigNatModule_baseMask = 16777215;\nvar BigNatModule_baseNi64 = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(16777216, 0, false);\nvar BigNatModule_baseMaski64 = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(16777215, 0, false);\nvar BigNatModule_baseMaskU = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(16777215, 0, true);\nvar BigNatModule_baseMask32A = 16777215;\nvar BigNatModule_baseMask32B = 255;\nvar BigNatModule_baseShift32B = 24;\nvar BigNatModule_baseMask64A = 16777215;\nvar BigNatModule_baseMask64B = 16777215;\nvar BigNatModule_baseMask64C = 65535;\nvar BigNatModule_baseShift64B = 24;\nvar BigNatModule_baseShift64C = 48;\nfunction BigNatModule_divbase(x) {\n  return ~~(x >>> 0 >>> BigNatModule_baseBits);\n}\nfunction BigNatModule_modbase(x) {\n  return x & BigNatModule_baseMask;\n}\nfunction BigNatModule_createN(b) {\n  return new BigNat(b, new Int32Array(b));\n}\nfunction BigNatModule_copyN(x) {\n  return new BigNat(x.bound, (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.copy)(x.digits));\n}\nfunction BigNatModule_normN(n) {\n  var findLeastBound = function findLeastBound(na_mut, i_mut) {\n    findLeastBound: while (true) {\n      var na = na_mut,\n        i = i_mut;\n      if (i === -1 ? true : na[i] !== 0) {\n        return i + 1 | 0;\n      } else {\n        na_mut = na;\n        i_mut = i - 1;\n        continue findLeastBound;\n      }\n      break;\n    }\n  };\n  var bound = findLeastBound(n.digits, n.bound - 1) | 0;\n  n.bound = bound | 0;\n  return n;\n}\nvar BigNatModule_boundInt = 2;\nvar BigNatModule_boundInt64 = 3;\nvar BigNatModule_boundBase = 1;\nfunction BigNatModule_embed(x) {\n  var x_1 = (x < 0 ? 0 : x) | 0;\n  if (x_1 < BigNatModule_baseN) {\n    var r = BigNatModule_createN(1);\n    r.digits[0] = x_1 | 0;\n    return BigNatModule_normN(r);\n  } else {\n    var r_1 = BigNatModule_createN(BigNatModule_boundInt);\n    for (var i = 0; i <= BigNatModule_boundInt - 1; i++) {\n      r_1.digits[i] = ~~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)) % BigNatModule_baseN | 0;\n    }\n    return BigNatModule_normN(r_1);\n  }\n}\nfunction BigNatModule_embed64(x) {\n  var x_1 = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.compare)(x, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(0, 0, false)) < 0 ? (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(0, 0, false) : x;\n  var r = BigNatModule_createN(BigNatModule_boundInt64);\n  for (var i = 0; i <= BigNatModule_boundInt64 - 1; i++) {\n    r.digits[i] = ~~(0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Modulus)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Division)(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64)) | 0;\n  }\n  return BigNatModule_normN(r);\n}\nfunction BigNatModule_eval32(n) {\n  if (n.bound === 1) {\n    return n.digits[0] | 0;\n  } else {\n    var acc = 0;\n    for (var i = n.bound - 1; i >= 0; i--) {\n      acc = n.digits[i] + BigNatModule_baseN * acc | 0;\n    }\n    return acc | 0;\n  }\n}\nfunction BigNatModule_eval64(n) {\n  if (n.bound === 1) {\n    return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(n.digits[0], false, 2);\n  } else {\n    var acc = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(0, 0, false);\n    for (var i = n.bound - 1; i >= 0; i--) {\n      acc = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(n.digits[i], false, 2), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)(BigNatModule_baseNi64, acc));\n    }\n    return acc;\n  }\n}\nvar BigNatModule_one = BigNatModule_embed(1);\nvar BigNatModule_zero = BigNatModule_embed(0);\nfunction BigNatModule_restrictTo(d, n) {\n  return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\n}\nfunction BigNatModule_shiftUp(d, n) {\n  var m = BigNatModule_createN(n.bound + d);\n  for (var i = 0; i <= n.bound - 1; i++) {\n    m.digits[i + d] = n.digits[i] | 0;\n  }\n  return m;\n}\nfunction BigNatModule_shiftDown(d, n) {\n  if (n.bound - d <= 0) {\n    return BigNatModule_zero;\n  } else {\n    var m = BigNatModule_createN(n.bound - d);\n    for (var i = 0; i <= m.bound - 1; i++) {\n      m.digits[i] = n.digits[i + d] | 0;\n    }\n    return m;\n  }\n}\nfunction BigNatModule_degree(n) {\n  return n.bound - 1;\n}\nfunction BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n  var z, i_1, z_1, i_2;\n  BigNatModule_addP: while (true) {\n    var i = i_mut,\n      n = n_mut,\n      c = c_mut,\n      p = p_mut,\n      q = q_mut,\n      r = r_mut;\n    if (i < n) {\n      var x = (z = p, (i_1 = i | 0, i_1 < z.bound ? z.digits[i_1] : 0)) + (z_1 = q, (i_2 = i | 0, i_2 < z_1.bound ? z_1.digits[i_2] : 0)) + c | 0;\n      r.digits[i] = BigNatModule_modbase(x) | 0;\n      i_mut = i + 1;\n      n_mut = n;\n      c_mut = BigNatModule_divbase(x);\n      p_mut = p;\n      q_mut = q;\n      r_mut = r;\n      continue BigNatModule_addP;\n    }\n    break;\n  }\n}\nfunction BigNatModule_add(p, q) {\n  var rbound = 1 + BigNatModule_maxInt(p.bound, q.bound) | 0;\n  var r = BigNatModule_createN(rbound);\n  BigNatModule_addP(0, rbound, 0, p, q, r);\n  return BigNatModule_normN(r);\n}\nfunction BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n  var z, i_1, z_1, i_2;\n  BigNatModule_subP: while (true) {\n    var i = i_mut,\n      n = n_mut,\n      c = c_mut,\n      p = p_mut,\n      q = q_mut,\n      r = r_mut;\n    if (i < n) {\n      var x = (z = p, (i_1 = i | 0, i_1 < z.bound ? z.digits[i_1] : 0)) - (z_1 = q, (i_2 = i | 0, i_2 < z_1.bound ? z_1.digits[i_2] : 0)) + c | 0;\n      if (x > 0) {\n        r.digits[i] = BigNatModule_modbase(x) | 0;\n        i_mut = i + 1;\n        n_mut = n;\n        c_mut = BigNatModule_divbase(x);\n        p_mut = p;\n        q_mut = q;\n        r_mut = r;\n        continue BigNatModule_subP;\n      } else {\n        var x_1 = x + BigNatModule_baseN | 0;\n        r.digits[i] = BigNatModule_modbase(x_1) | 0;\n        i_mut = i + 1;\n        n_mut = n;\n        c_mut = BigNatModule_divbase(x_1) - 1;\n        p_mut = p;\n        q_mut = q;\n        r_mut = r;\n        continue BigNatModule_subP;\n      }\n    } else {\n      return c !== 0;\n    }\n    break;\n  }\n}\nfunction BigNatModule_sub(p, q) {\n  var rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\n  var r = BigNatModule_createN(rbound);\n  if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\n    return BigNatModule_embed(0);\n  } else {\n    return BigNatModule_normN(r);\n  }\n}\nfunction BigNatModule_isZero(p) {\n  return p.bound === 0;\n}\nfunction BigNatModule_IsZero(p) {\n  return BigNatModule_isZero(p);\n}\nfunction BigNatModule_isOne(p) {\n  if (p.bound === 1) {\n    return p.digits[0] === 1;\n  } else {\n    return false;\n  }\n}\nfunction BigNatModule_equal(p, q) {\n  if (p.bound === q.bound) {\n    var check = function check(pa_mut, qa_mut, i_mut) {\n      check: while (true) {\n        var pa = pa_mut,\n          qa = qa_mut,\n          i = i_mut;\n        if (i === -1) {\n          return true;\n        } else if (pa[i] === qa[i]) {\n          pa_mut = pa;\n          qa_mut = qa;\n          i_mut = i - 1;\n          continue check;\n        } else {\n          return false;\n        }\n        break;\n      }\n    };\n    return check(p.digits, q.digits, p.bound - 1);\n  } else {\n    return false;\n  }\n}\nfunction BigNatModule_shiftCompare(p, pn, q, qn) {\n  if (p.bound + pn < q.bound + qn) {\n    return -1;\n  } else if (p.bound + pn > q.bound + pn) {\n    return 1;\n  } else {\n    var check = function check(pa_mut, qa_mut, i_mut) {\n      check: while (true) {\n        var pa = pa_mut,\n          qa = qa_mut,\n          i = i_mut;\n        if (i === -1) {\n          return 0;\n        } else {\n          var pai = (i < pn ? 0 : pa[i - pn]) | 0;\n          var qai = (i < qn ? 0 : qa[i - qn]) | 0;\n          if (pai === qai) {\n            pa_mut = pa;\n            qa_mut = qa;\n            i_mut = i - 1;\n            continue check;\n          } else if (pai < qai) {\n            return -1;\n          } else {\n            return 1;\n          }\n        }\n        break;\n      }\n    };\n    return check(p.digits, q.digits, p.bound + pn - 1) | 0;\n  }\n}\nfunction BigNatModule_compare(p, q) {\n  if (p.bound < q.bound) {\n    return -1;\n  } else if (p.bound > q.bound) {\n    return 1;\n  } else {\n    var check = function check(pa_mut, qa_mut, i_mut) {\n      check: while (true) {\n        var pa = pa_mut,\n          qa = qa_mut,\n          i = i_mut;\n        if (i === -1) {\n          return 0;\n        } else if (pa[i] === qa[i]) {\n          pa_mut = pa;\n          qa_mut = qa;\n          i_mut = i - 1;\n          continue check;\n        } else if (pa[i] < qa[i]) {\n          return -1;\n        } else {\n          return 1;\n        }\n        break;\n      }\n    };\n    return check(p.digits, q.digits, p.bound - 1) | 0;\n  }\n}\nfunction BigNatModule_lt(p, q) {\n  return BigNatModule_compare(p, q) === -1;\n}\nfunction BigNatModule_gt(p, q) {\n  return BigNatModule_compare(p, q) === 1;\n}\nfunction BigNatModule_lte(p, q) {\n  return BigNatModule_compare(p, q) !== 1;\n}\nfunction BigNatModule_gte(p, q) {\n  return BigNatModule_compare(p, q) !== -1;\n}\nfunction BigNatModule_min(a, b) {\n  if (BigNatModule_lt(a, b)) {\n    return a;\n  } else {\n    return b;\n  }\n}\nfunction BigNatModule_max(a, b) {\n  if (BigNatModule_lt(a, b)) {\n    return b;\n  } else {\n    return a;\n  }\n}\nfunction BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\n  BigNatModule_contributeArr: while (true) {\n    var a = a_mut,\n      i = i_mut,\n      c = c_mut;\n    var x = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(a[i], false, 2), c);\n    var c_1 = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Division)(x, BigNatModule_baseNi64);\n    var x_3 = ~~(0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_BitwiseAnd)(x, BigNatModule_baseMaski64)) | 0;\n    a[i] = x_3 | 0;\n    if ((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.compare)(c_1, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(0, 0, false)) > 0) {\n      a_mut = a;\n      i_mut = i + 1;\n      c_mut = c_1;\n      continue BigNatModule_contributeArr;\n    }\n    break;\n  }\n}\nfunction BigNatModule_scale(k, p) {\n  var r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\n  var k_1 = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(k, false, 2);\n  for (var i = 0; i <= p.bound - 1; i++) {\n    BigNatModule_contributeArr(r.digits, i, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)(k_1, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(p.digits[i], false, 2)));\n  }\n  return BigNatModule_normN(r);\n}\nfunction BigNatModule_mulSchoolBookBothSmall(p, q) {\n  var r = BigNatModule_createN(2);\n  var rak = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(p, false, 2), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(q, false, 2));\n  BigNatModule_setCoeff(r, 0, ~~(0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_BitwiseAnd)(rak, BigNatModule_baseMaski64)));\n  BigNatModule_setCoeff(r, 1, ~~(0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Division)(rak, BigNatModule_baseNi64)));\n  return BigNatModule_normN(r);\n}\nfunction BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\n  BigNatModule_mulSchoolBookCarry: while (true) {\n    var r = r_mut,\n      c = c_mut,\n      k = k_mut;\n    if ((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.compare)(c, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(0, 0, false)) > 0) {\n      var rak = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)(BigNatModule_coeff64(r, k), c);\n      BigNatModule_setCoeff(r, k, ~~(0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_BitwiseAnd)(rak, BigNatModule_baseMaski64)));\n      r_mut = r;\n      c_mut = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Division)(rak, BigNatModule_baseNi64);\n      k_mut = k + 1;\n      continue BigNatModule_mulSchoolBookCarry;\n    }\n    break;\n  }\n}\nfunction BigNatModule_mulSchoolBookOneSmall(p, q) {\n  var bp = BigNatModule_bound(p) | 0;\n  var r = BigNatModule_createN(bp + 1);\n  var q_1 = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(q, false, 2);\n  var c = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(0, 0, false);\n  for (var i = 0; i <= bp - 1; i++) {\n    var rak = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)(c, BigNatModule_coeff64(r, i)), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)(BigNatModule_coeff64(p, i), q_1));\n    BigNatModule_setCoeff(r, i, ~~(0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_BitwiseAnd)(rak, BigNatModule_baseMaski64)));\n    c = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Division)(rak, BigNatModule_baseNi64);\n  }\n  BigNatModule_mulSchoolBookCarry(r, c, bp);\n  return BigNatModule_normN(r);\n}\nfunction BigNatModule_mulSchoolBookNeitherSmall(p, q) {\n  var r = BigNatModule_createN(p.bound + q.bound);\n  var ra = r.digits;\n  for (var i = 0; i <= p.bound - 1; i++) {\n    var pai = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(p.digits[i], false, 2);\n    var c = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(0, 0, false);\n    var k = i;\n    for (var j = 0; j <= q.bound - 1; j++) {\n      var qaj = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(q.digits[j], false, 2);\n      var rak = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(ra[k], false, 2), c), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)(pai, qaj));\n      ra[k] = ~~(0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_BitwiseAnd)(rak, BigNatModule_baseMaski64)) | 0;\n      c = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Division)(rak, BigNatModule_baseNi64);\n      k = k + 1 | 0;\n    }\n    BigNatModule_mulSchoolBookCarry(r, c, k);\n  }\n  return BigNatModule_normN(r);\n}\nfunction BigNatModule_mulSchoolBook(p, q) {\n  var pSmall = BigNatModule_bound(p) === 1;\n  var qSmall = BigNatModule_bound(q) === 1;\n  if (pSmall && qSmall) {\n    return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\n  } else if (pSmall) {\n    return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\n  } else if (qSmall) {\n    return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\n  } else {\n    return BigNatModule_mulSchoolBookNeitherSmall(p, q);\n  }\n}\nvar BigNatModule_encoding = /*#__PURE__*/function (_Record2) {\n  _inherits(BigNatModule_encoding, _Record2);\n  var _super2 = _createSuper(BigNatModule_encoding);\n  function BigNatModule_encoding(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n    var _this2;\n    _classCallCheck(this, BigNatModule_encoding);\n    _this2 = _super2.call(this);\n    _this2.bigL = bigL | 0;\n    _this2.twoToBigL = twoToBigL | 0;\n    _this2.k = k | 0;\n    _this2.bigK = bigK | 0;\n    _this2.bigN = bigN | 0;\n    _this2.split = split | 0;\n    _this2.splits = splits;\n    return _this2;\n  }\n  return _createClass(BigNatModule_encoding);\n}(_Types_js__WEBPACK_IMPORTED_MODULE_0__.Record);\nfunction BigNatModule_encoding$reflection() {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.record_type)(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, function () {\n    return [[\"bigL\", _Reflection_js__WEBPACK_IMPORTED_MODULE_1__.int32_type], [\"twoToBigL\", _Reflection_js__WEBPACK_IMPORTED_MODULE_1__.int32_type], [\"k\", _Reflection_js__WEBPACK_IMPORTED_MODULE_1__.int32_type], [\"bigK\", _Reflection_js__WEBPACK_IMPORTED_MODULE_1__.int32_type], [\"bigN\", _Reflection_js__WEBPACK_IMPORTED_MODULE_1__.int32_type], [\"split\", _Reflection_js__WEBPACK_IMPORTED_MODULE_1__.int32_type], [\"splits\", (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.array_type)(_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.int32_type)]];\n  });\n}\nfunction BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\n  return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~~(BigNatModule_baseBits / bigL), (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.initialize)(~~(BigNatModule_baseBits / bigL), function (i) {\n    return BigNatModule_pow32(2, bigL * i);\n  }, Int32Array));\n}\nvar BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\nfunction BigNatModule_calculateTableTow(bigL) {\n  var k = BigNatModule_FFT_maxBitsInsideFp - 2 * bigL | 0;\n  var bigK = BigNatModule_pow64((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(2, 0, false), k);\n  return [bigL, k, bigK, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)(bigK, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(bigL, false, 2))];\n}\nfunction BigNatModule_encodingGivenResultBits(bitsRes) {\n  var selectFrom = function selectFrom(i_mut) {\n    selectFrom: while (true) {\n      var i = i_mut;\n      if (i + 1 < BigNatModule_table.length && bitsRes < BigNatModule_table[i + 1].bigN) {\n        i_mut = i + 1;\n        continue selectFrom;\n      } else {\n        return BigNatModule_table[i];\n      }\n      break;\n    }\n  };\n  if (bitsRes >= BigNatModule_table[0].bigN) {\n    throw new Error(\"Product is huge, around 268435456 bits, beyond quickmul\");\n  } else {\n    return selectFrom(0);\n  }\n}\nvar BigNatModule_bitmask = (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.initialize)(BigNatModule_baseBits, function (i) {\n  return BigNatModule_pow32(2, i) - 1;\n}, Int32Array);\nvar BigNatModule_twopowers = (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.initialize)(BigNatModule_baseBits, function (i) {\n  return BigNatModule_pow32(2, i);\n}, Int32Array);\nvar BigNatModule_twopowersI64 = (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.initialize)(BigNatModule_baseBits, function (i) {\n  return BigNatModule_pow64((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(2, 0, false), i);\n});\nfunction BigNatModule_wordBits(word) {\n  var hi = function hi(k_mut) {\n    hi: while (true) {\n      var k = k_mut;\n      if (k === 0) {\n        return 0;\n      } else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\n        return k | 0;\n      } else {\n        k_mut = k - 1;\n        continue hi;\n      }\n      break;\n    }\n  };\n  return hi(BigNatModule_baseBits) | 0;\n}\nfunction BigNatModule_bits(u) {\n  if (u.bound === 0) {\n    return 0;\n  } else {\n    return BigNatModule_degree(u) * BigNatModule_baseBits + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)]) | 0;\n  }\n}\nfunction BigNatModule_extractBits(n, enc, bi) {\n  var z, i, z_1, i_1, z_2, i_2;\n  var biw = ~~(bi / BigNatModule_baseBits) | 0;\n  var bjw = ~~((bi + enc.bigL - 1) / BigNatModule_baseBits) | 0;\n  if (biw !== bjw) {\n    var xbit = bi % BigNatModule_baseBits | 0;\n    return ((z = n, (i = biw | 0, i < z.bound ? z.digits[i] : 0)) >> xbit | (z_1 = n, (i_1 = bjw | 0, i_1 < z_1.bound ? z_1.digits[i_1] : 0)) << BigNatModule_baseBits - xbit) & BigNatModule_bitmask[enc.bigL] | 0;\n  } else {\n    return (z_2 = n, (i_2 = biw | 0, i_2 < z_2.bound ? z_2.digits[i_2] : 0)) >> bi % BigNatModule_baseBits & BigNatModule_bitmask[enc.bigL] | 0;\n  }\n}\nfunction BigNatModule_encodePoly(enc, n) {\n  var poly = (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.fill)(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\n  var biMax = n.bound * BigNatModule_baseBits | 0;\n  var encoder = function encoder(i_mut, bi_mut) {\n    encoder: while (true) {\n      var i = i_mut,\n        bi = bi_mut;\n      if (i === enc.bigK ? true : bi > biMax) {} else {\n        var pi = BigNatModule_extractBits(n, enc, bi) | 0;\n        poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\n        i_mut = i + 1;\n        bi_mut = bi + enc.bigL;\n        continue encoder;\n      }\n      break;\n    }\n  };\n  encoder(0, 0);\n  return poly;\n}\nfunction BigNatModule_decodeResultBits(enc, poly) {\n  var n = 0;\n  for (var i = 0; i <= poly.length - 1; i++) {\n    if (poly[i] !== BigNatModule_FFT_mzero) {\n      n = i | 0;\n    }\n  }\n  return BigNatModule_FFT_maxBitsInsideFp + enc.bigL * n + 1 + 1 | 0;\n}\nfunction BigNatModule_decodePoly(enc, poly) {\n  var rbound = ~~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits) + 1 | 0;\n  var r = BigNatModule_createN(rbound);\n  var evaluate = function evaluate(i_mut, j_mut, d_mut) {\n    evaluate: while (true) {\n      var i = i_mut,\n        j = j_mut,\n        d = d_mut;\n      if (i === enc.bigK) {} else {\n        if (j >= rbound) {} else {\n          BigNatModule_contributeArr(r.digits, j, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\n        }\n        var d_1 = d + enc.bigL | 0;\n        var patternInput = d_1 >= BigNatModule_baseBits ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\n        i_mut = i + 1;\n        j_mut = patternInput[0];\n        d_mut = patternInput[1];\n        continue evaluate;\n      }\n      break;\n    }\n  };\n  evaluate(0, 0, 0);\n  return BigNatModule_normN(r);\n}\nfunction BigNatModule_quickMulUsingFft(u, v) {\n  var enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\n  return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\n}\nvar BigNatModule_minDigitsKaratsuba = 16;\nfunction BigNatModule_recMulKaratsuba(mul, p, q) {\n  var bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\n  if (bmax > BigNatModule_minDigitsKaratsuba) {\n    var k = ~~(bmax / 2) | 0;\n    var a0 = BigNatModule_restrictTo(k, p);\n    var a1 = BigNatModule_shiftDown(k, p);\n    var b0 = BigNatModule_restrictTo(k, q);\n    var b1 = BigNatModule_shiftDown(k, q);\n    var q0 = mul(a0, b0);\n    var q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\n    var q2 = mul(a1, b1);\n    return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\n  } else {\n    return BigNatModule_mulSchoolBook(p, q);\n  }\n}\nfunction BigNatModule_mulKaratsuba(x, y) {\n  return BigNatModule_recMulKaratsuba(BigNatModule_mulKaratsuba, x, y);\n}\nvar BigNatModule_productDigitsUpperSchoolBook = ~~(64000 / BigNatModule_baseBits);\nvar BigNatModule_singleDigitForceSchoolBook = ~~(32000 / BigNatModule_baseBits);\nvar BigNatModule_productDigitsUpperFft = ~~(BigNatModule_table[0].bigN / BigNatModule_baseBits);\nfunction BigNatModule_mul(p, q) {\n  return BigNatModule_mulSchoolBook(p, q);\n}\nfunction BigNatModule_scaleSubInPlace(x, f, a, n) {\n  var patternInput = [x.digits, BigNatModule_degree(x)];\n  var x_1 = patternInput[0];\n  var patternInput_1 = [a.digits, BigNatModule_degree(a)];\n  var ad = patternInput_1[1] | 0;\n  var a_1 = patternInput_1[0];\n  var f_1 = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(f, false, 2);\n  var j = 0;\n  var z = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)(f_1, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(a_1[0], false, 2));\n  while ((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.compare)(z, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(0, 0, false)) > 0 ? true : j < ad) {\n    if (j > patternInput[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    }\n    var zLo = ~~(0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_BitwiseAnd)(z, BigNatModule_baseMaski64));\n    var zHi = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Division)(z, BigNatModule_baseNi64);\n    if (zLo <= x_1[j + n]) {\n      x_1[j + n] = x_1[j + n] - zLo | 0;\n    } else {\n      x_1[j + n] = x_1[j + n] + (BigNatModule_baseN - zLo) | 0;\n      zHi = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)(zHi, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(1, 0, false));\n    }\n    if (j < ad) {\n      z = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)(zHi, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)(f_1, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(a_1[j + 1], false, 2)));\n    } else {\n      z = zHi;\n    }\n    j = j + 1 | 0;\n  }\n  BigNatModule_normN(x);\n}\nfunction BigNatModule_scaleSub(x, f, a, n) {\n  var freshx = BigNatModule_add(x, BigNatModule_zero);\n  BigNatModule_scaleSubInPlace(freshx, f, a, n);\n  return BigNatModule_normN(freshx);\n}\nfunction BigNatModule_scaleAddInPlace(x, f, a, n) {\n  var patternInput = [x.digits, BigNatModule_degree(x)];\n  var x_1 = patternInput[0];\n  var patternInput_1 = [a.digits, BigNatModule_degree(a)];\n  var ad = patternInput_1[1] | 0;\n  var a_1 = patternInput_1[0];\n  var f_1 = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(f, false, 2);\n  var j = 0;\n  var z = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)(f_1, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(a_1[0], false, 2));\n  while ((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.compare)(z, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(0, 0, false)) > 0 ? true : j < ad) {\n    if (j > patternInput[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    }\n    var zLo = ~~(0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_BitwiseAnd)(z, BigNatModule_baseMaski64));\n    var zHi = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Division)(z, BigNatModule_baseNi64);\n    if (zLo < BigNatModule_baseN - x_1[j + n]) {\n      x_1[j + n] = x_1[j + n] + zLo | 0;\n    } else {\n      x_1[j + n] = zLo - (BigNatModule_baseN - x_1[j + n]) | 0;\n      zHi = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)(zHi, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(1, 0, false));\n    }\n    if (j < ad) {\n      z = (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)(zHi, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)(f_1, (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(a_1[j + 1], false, 2)));\n    } else {\n      z = zHi;\n    }\n    j = j + 1 | 0;\n  }\n  BigNatModule_normN(x);\n}\nfunction BigNatModule_scaleAdd(x, f, a, n) {\n  var freshx = BigNatModule_add(x, BigNatModule_zero);\n  BigNatModule_scaleAddInPlace(freshx, f, a, n);\n  return BigNatModule_normN(freshx);\n}\nfunction BigNatModule_removeFactor(x, a, n) {\n  var patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\n  var degx = patternInput[1] | 0;\n  var dega = patternInput[0] | 0;\n  if (degx < dega + n) {\n    return 0;\n  } else {\n    var patternInput_1 = [a.digits, x.digits];\n    var xa = patternInput_1[1];\n    var aa = patternInput_1[0];\n    var f = (dega === 0 ? degx === n ? ~~(xa[n] / aa[0]) : ~~(0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Division)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(xa[degx], false, 2), BigNatModule_baseNi64), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(xa[degx - 1], false, 2)), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(aa[0], false, 2))) : degx === dega + n ? ~~(xa[degx] / (aa[dega] + 1)) : ~~(0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.toInt)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Division)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(xa[degx], false, 2), BigNatModule_baseNi64), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(xa[degx - 1], false, 2)), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(aa[dega], false, 2), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(1, 0, false))))) | 0;\n    if (f === 0) {\n      if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\n        return 1;\n      } else {\n        return 0;\n      }\n    } else {\n      return f | 0;\n    }\n  }\n}\nfunction BigNatModule_divmod(b, a) {\n  if (BigNatModule_isZero(a)) {\n    throw new Error();\n  } else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\n    return [BigNatModule_zero, b];\n  } else {\n    var x = BigNatModule_copyN(b);\n    var d = BigNatModule_createN(BigNatModule_degree(b) - BigNatModule_degree(a) + 1 + 1);\n    var p = BigNatModule_degree(b);\n    var m = BigNatModule_degree(a) | 0;\n    var n = p - m;\n    var Invariant = function Invariant(tupledArg) {};\n    var finished = false;\n    while (!finished) {\n      Invariant([d, x, n, p]);\n      var f = BigNatModule_removeFactor(x, a, n) | 0;\n      if (f > 0) {\n        BigNatModule_scaleSubInPlace(x, f, a, n);\n        BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\n        Invariant([d, x, n, p]);\n      } else {\n        finished = f === 0 && n === 0;\n        if (!finished) {\n          if (p === m + n) {\n            Invariant([d, x, n - 1, p]);\n            n = n - 1 | 0;\n          } else {\n            Invariant([d, x, n - 1, p - 1]);\n            n = n - 1 | 0;\n            p = p - 1 | 0;\n          }\n        }\n      }\n    }\n    return [BigNatModule_normN(d), BigNatModule_normN(x)];\n  }\n}\nfunction BigNatModule_div(b, a) {\n  return BigNatModule_divmod(b, a)[0];\n}\nfunction BigNatModule_rem(b, a) {\n  return BigNatModule_divmod(b, a)[1];\n}\nfunction BigNatModule_bitAnd(a, b) {\n  var r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\n  for (var i = 0; i <= r.bound - 1; i++) {\n    r.digits[i] = a.digits[i] & b.digits[i] | 0;\n  }\n  return BigNatModule_normN(r);\n}\nfunction BigNatModule_bitOr(a, b) {\n  var r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n  for (var i = 0; i <= a.bound - 1; i++) {\n    r.digits[i] = r.digits[i] | a.digits[i] | 0;\n  }\n  for (var i_1 = 0; i_1 <= b.bound - 1; i_1++) {\n    r.digits[i_1] = r.digits[i_1] | b.digits[i_1] | 0;\n  }\n  return BigNatModule_normN(r);\n}\nfunction BigNatModule_bitXor(a, b) {\n  var r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n  for (var i = 0; i <= a.bound - 1; i++) {\n    r.digits[i] = r.digits[i] ^ a.digits[i] | 0;\n  }\n  for (var i_1 = 0; i_1 <= b.bound - 1; i_1++) {\n    r.digits[i_1] = r.digits[i_1] ^ b.digits[i_1] | 0;\n  }\n  return BigNatModule_normN(r);\n}\nfunction BigNatModule_hcf(a, b) {\n  var hcfloop = function hcfloop(a_1_mut, b_1_mut) {\n    hcfloop: while (true) {\n      var a_1 = a_1_mut,\n        b_1 = b_1_mut;\n      if (BigNatModule_equal(BigNatModule_zero, a_1)) {\n        return b_1;\n      } else {\n        a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\n        b_1_mut = a_1;\n        continue hcfloop;\n      }\n      break;\n    }\n  };\n  if (BigNatModule_lt(a, b)) {\n    return hcfloop(a, b);\n  } else {\n    return hcfloop(b, a);\n  }\n}\nvar BigNatModule_two = BigNatModule_embed(2);\nfunction BigNatModule_powi(x, n) {\n  var power = function power(acc_mut, x_1_mut, n_1_mut) {\n    power: while (true) {\n      var acc = acc_mut,\n        x_1 = x_1_mut,\n        n_1 = n_1_mut;\n      if (n_1 === 0) {\n        return acc;\n      } else if (n_1 % 2 === 0) {\n        acc_mut = acc;\n        x_1_mut = BigNatModule_mul(x_1, x_1);\n        n_1_mut = ~~(n_1 / 2);\n        continue power;\n      } else {\n        acc_mut = BigNatModule_mul(x_1, acc);\n        x_1_mut = BigNatModule_mul(x_1, x_1);\n        n_1_mut = ~~(n_1 / 2);\n        continue power;\n      }\n      break;\n    }\n  };\n  return power(BigNatModule_one, x, n);\n}\nfunction BigNatModule_pow(x, n) {\n  var power = function power(acc_mut, x_1_mut, n_1_mut) {\n    power: while (true) {\n      var acc = acc_mut,\n        x_1 = x_1_mut,\n        n_1 = n_1_mut;\n      if (BigNatModule_isZero(n_1)) {\n        return acc;\n      } else {\n        var patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\n        var ndiv2 = patternInput[0];\n        if (BigNatModule_isZero(patternInput[1])) {\n          acc_mut = acc;\n          x_1_mut = BigNatModule_mul(x_1, x_1);\n          n_1_mut = ndiv2;\n          continue power;\n        } else {\n          acc_mut = BigNatModule_mul(x_1, acc);\n          x_1_mut = BigNatModule_mul(x_1, x_1);\n          n_1_mut = ndiv2;\n          continue power;\n        }\n      }\n      break;\n    }\n  };\n  return power(BigNatModule_one, x, n);\n}\nfunction BigNatModule_toFloat(n) {\n  var evalFloat = function evalFloat(acc_mut, k_mut, i_mut) {\n    evalFloat: while (true) {\n      var acc = acc_mut,\n        k = k_mut,\n        i = i_mut;\n      if (i === n.bound) {\n        return acc;\n      } else {\n        acc_mut = acc + k * n.digits[i];\n        k_mut = k * BigNatModule_baseN;\n        i_mut = i + 1;\n        continue evalFloat;\n      }\n      break;\n    }\n  };\n  return evalFloat(0, 1, 0);\n}\nfunction BigNatModule_ofInt32(n) {\n  return BigNatModule_embed(n);\n}\nfunction BigNatModule_ofInt64(n) {\n  return BigNatModule_embed64(n);\n}\nfunction BigNatModule_toUInt32(n) {\n  var matchValue = n.bound | 0;\n  switch (matchValue) {\n    case 0:\n      {\n        return 0;\n      }\n    case 1:\n      {\n        var value = n.digits[0] | 0;\n        return value >>> 0;\n      }\n    case 2:\n      {\n        var patternInput = [n.digits[0], n.digits[1]];\n        var xB = patternInput[1] | 0;\n        if (xB > BigNatModule_baseMask32B) {\n          throw new Error();\n        }\n        return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((xB & BigNatModule_baseMask32B) >>> 0 << BigNatModule_baseShift32B >>> 0);\n      }\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nfunction BigNatModule_toUInt64(n) {\n  var matchValue = n.bound | 0;\n  switch (matchValue) {\n    case 0:\n      {\n        return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromBits)(0, 0, true);\n      }\n    case 1:\n      {\n        return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(n.digits[0], true, 2);\n      }\n    case 2:\n      {\n        var patternInput = [n.digits[0], n.digits[1]];\n        return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(patternInput[0] & BigNatModule_baseMask64A, true, 2), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_LeftShift)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\n      }\n    case 3:\n      {\n        var patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\n        var xC = patternInput_1[2] | 0;\n        if (xC > BigNatModule_baseMask64C) {\n          throw new Error();\n        }\n        return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_Addition)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_LeftShift)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.op_LeftShift)((0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInteger)(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\n      }\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nfunction BigNatModule_toString(n) {\n  var degn = BigNatModule_degree(n) | 0;\n  var route = function route(prior_mut, k_mut, ten2k_mut) {\n    route: while (true) {\n      var prior = prior_mut,\n        k = k_mut,\n        ten2k = ten2k_mut;\n      if (BigNatModule_degree(ten2k) > degn) {\n        return (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.cons)([k, ten2k], prior);\n      } else {\n        prior_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.cons)([k, ten2k], prior);\n        k_mut = k + 1;\n        ten2k_mut = BigNatModule_mul(ten2k, ten2k);\n        continue route;\n      }\n      break;\n    }\n  };\n  var collect = function collect(isLeading_mut, digits_mut, n_1_mut, _arg1_mut) {\n    collect: while (true) {\n      var isLeading = isLeading_mut,\n        digits = digits_mut,\n        n_1 = n_1_mut,\n        _arg1 = _arg1_mut;\n      if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_4__.isEmpty)(_arg1)) {\n        var prior_1 = (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.tail)(_arg1);\n        var patternInput = BigNatModule_divmod(n_1, (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.head)(_arg1)[1]);\n        var nL = patternInput[1];\n        var nH = patternInput[0];\n        if (isLeading && BigNatModule_isZero(nH)) {\n          isLeading_mut = isLeading;\n          digits_mut = digits;\n          n_1_mut = nL;\n          _arg1_mut = prior_1;\n          continue collect;\n        } else {\n          isLeading_mut = isLeading;\n          digits_mut = collect(false, digits, nL, prior_1);\n          n_1_mut = nH;\n          _arg1_mut = prior_1;\n          continue collect;\n        }\n      } else {\n        var n_2 = BigNatModule_eval32(n_1) | 0;\n        if (isLeading && n_2 === 0) {\n          return digits;\n        } else {\n          return (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.cons)((0,_Util_js__WEBPACK_IMPORTED_MODULE_5__.int32ToString)(n_2), digits);\n        }\n      }\n      break;\n    }\n  };\n  var digits_4 = collect(true, (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.empty)(), n, route((0,_List_js__WEBPACK_IMPORTED_MODULE_4__.empty)(), 0, BigNatModule_embed(10)));\n  if ((0,_List_js__WEBPACK_IMPORTED_MODULE_4__.isEmpty)(digits_4)) {\n    return \"0\";\n  } else {\n    return (0,_String_js__WEBPACK_IMPORTED_MODULE_6__.join)(\"\", (0,_List_js__WEBPACK_IMPORTED_MODULE_4__.toArray)(digits_4));\n  }\n}\nfunction BigNatModule_ofString(str) {\n  var len = str.length | 0;\n  if ((0,_String_js__WEBPACK_IMPORTED_MODULE_6__.isNullOrEmpty)(str)) {\n    throw new Error(\"empty string\\\\nParameter name: str\");\n  }\n  var ten = BigNatModule_embed(10);\n  var build = function build(acc_mut, i_mut) {\n    build: while (true) {\n      var acc = acc_mut,\n        i = i_mut;\n      if (i === len) {\n        return acc;\n      } else {\n        var c = str[i];\n        var d = c.charCodeAt(0) - 48 | 0;\n        if (0 <= d && d <= 9) {\n          acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\n          i_mut = i + 1;\n          continue build;\n        } else {\n          throw new Error();\n        }\n      }\n      break;\n    }\n  };\n  return build(BigNatModule_embed(0), 0);\n}\nfunction BigNatModule_isSmall(n) {\n  return n.bound <= 1;\n}\nfunction BigNatModule_getSmall(n) {\n  var z = n;\n  var i = 0;\n  if (i < z.bound) {\n    return z.digits[i] | 0;\n  } else {\n    return 0;\n  }\n}\nfunction BigNatModule_factorial(n) {\n  var productR = function productR(a, b) {\n    if (BigNatModule_equal(a, b)) {\n      return a;\n    } else {\n      var m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\n      return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\n    }\n  };\n  return productR(BigNatModule_one, n);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/BigInt/n.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/BigInt/z.js":
/*!*************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/BigInt/z.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BigInteger\": () => (/* binding */ BigInteger),\n/* harmony export */   \"BigInteger$reflection\": () => (/* binding */ BigInteger$reflection),\n/* harmony export */   \"BigInteger_$ctor_Z2BE94A1\": () => (/* binding */ BigInteger_$ctor_Z2BE94A1),\n/* harmony export */   \"BigInteger_nat_Z67CCE57D\": () => (/* binding */ BigInteger_nat_Z67CCE57D),\n/* harmony export */   \"BigInteger_create_Z2BE94A1\": () => (/* binding */ BigInteger_create_Z2BE94A1),\n/* harmony export */   \"BigInteger_posn_Z67CCE57D\": () => (/* binding */ BigInteger_posn_Z67CCE57D),\n/* harmony export */   \"BigInteger_negn_Z67CCE57D\": () => (/* binding */ BigInteger_negn_Z67CCE57D),\n/* harmony export */   \"BigInteger__get_Sign\": () => (/* binding */ BigInteger__get_Sign),\n/* harmony export */   \"BigInteger__get_SignInt\": () => (/* binding */ BigInteger__get_SignInt),\n/* harmony export */   \"BigInteger__get_V\": () => (/* binding */ BigInteger__get_V),\n/* harmony export */   \"BigInteger_op_Equality_56F059C0\": () => (/* binding */ BigInteger_op_Equality_56F059C0),\n/* harmony export */   \"BigInteger_op_Inequality_56F059C0\": () => (/* binding */ BigInteger_op_Inequality_56F059C0),\n/* harmony export */   \"BigInteger_op_LessThan_56F059C0\": () => (/* binding */ BigInteger_op_LessThan_56F059C0),\n/* harmony export */   \"BigInteger_op_GreaterThan_56F059C0\": () => (/* binding */ BigInteger_op_GreaterThan_56F059C0),\n/* harmony export */   \"BigInteger_compare_56F059C0\": () => (/* binding */ BigInteger_compare_56F059C0),\n/* harmony export */   \"BigInteger_hash_Z665282C2\": () => (/* binding */ BigInteger_hash_Z665282C2),\n/* harmony export */   \"BigInteger__get_StructuredDisplayString\": () => (/* binding */ BigInteger__get_StructuredDisplayString),\n/* harmony export */   \"BigInteger_$ctor_Z524259A4\": () => (/* binding */ BigInteger_$ctor_Z524259A4),\n/* harmony export */   \"BigInteger_$ctor_Z524259C1\": () => (/* binding */ BigInteger_$ctor_Z524259C1),\n/* harmony export */   \"BigInteger_get_One\": () => (/* binding */ BigInteger_get_One),\n/* harmony export */   \"BigInteger_get_Two\": () => (/* binding */ BigInteger_get_Two),\n/* harmony export */   \"BigInteger_get_Zero\": () => (/* binding */ BigInteger_get_Zero),\n/* harmony export */   \"BigInteger_op_UnaryNegation_Z665282C2\": () => (/* binding */ BigInteger_op_UnaryNegation_Z665282C2),\n/* harmony export */   \"BigInteger_Scale_Z320F31E\": () => (/* binding */ BigInteger_Scale_Z320F31E),\n/* harmony export */   \"BigInteger_subnn_6A57060\": () => (/* binding */ BigInteger_subnn_6A57060),\n/* harmony export */   \"BigInteger_addnn_6A57060\": () => (/* binding */ BigInteger_addnn_6A57060),\n/* harmony export */   \"BigInteger__get_IsZero\": () => (/* binding */ BigInteger__get_IsZero),\n/* harmony export */   \"BigInteger__get_IsOne\": () => (/* binding */ BigInteger__get_IsOne),\n/* harmony export */   \"BigInteger_op_Addition_56F059C0\": () => (/* binding */ BigInteger_op_Addition_56F059C0),\n/* harmony export */   \"BigInteger_op_Subtraction_56F059C0\": () => (/* binding */ BigInteger_op_Subtraction_56F059C0),\n/* harmony export */   \"BigInteger_op_Multiply_56F059C0\": () => (/* binding */ BigInteger_op_Multiply_56F059C0),\n/* harmony export */   \"BigInteger_DivRem_56F059C0\": () => (/* binding */ BigInteger_DivRem_56F059C0),\n/* harmony export */   \"BigInteger_op_Division_56F059C0\": () => (/* binding */ BigInteger_op_Division_56F059C0),\n/* harmony export */   \"BigInteger_op_Modulus_56F059C0\": () => (/* binding */ BigInteger_op_Modulus_56F059C0),\n/* harmony export */   \"BigInteger_op_RightShift_62E082A2\": () => (/* binding */ BigInteger_op_RightShift_62E082A2),\n/* harmony export */   \"BigInteger_op_LeftShift_62E082A2\": () => (/* binding */ BigInteger_op_LeftShift_62E082A2),\n/* harmony export */   \"BigInteger_op_BitwiseAnd_56F059C0\": () => (/* binding */ BigInteger_op_BitwiseAnd_56F059C0),\n/* harmony export */   \"BigInteger_op_BitwiseOr_56F059C0\": () => (/* binding */ BigInteger_op_BitwiseOr_56F059C0),\n/* harmony export */   \"BigInteger_op_ExclusiveOr_56F059C0\": () => (/* binding */ BigInteger_op_ExclusiveOr_56F059C0),\n/* harmony export */   \"BigInteger_GreatestCommonDivisor_56F059C0\": () => (/* binding */ BigInteger_GreatestCommonDivisor_56F059C0),\n/* harmony export */   \"BigInteger__get_IsNegative\": () => (/* binding */ BigInteger__get_IsNegative),\n/* harmony export */   \"BigInteger__get_IsPositive\": () => (/* binding */ BigInteger__get_IsPositive),\n/* harmony export */   \"BigInteger_Abs_Z665282C2\": () => (/* binding */ BigInteger_Abs_Z665282C2),\n/* harmony export */   \"BigInteger_op_LessThanOrEqual_56F059C0\": () => (/* binding */ BigInteger_op_LessThanOrEqual_56F059C0),\n/* harmony export */   \"BigInteger_op_GreaterThanOrEqual_56F059C0\": () => (/* binding */ BigInteger_op_GreaterThanOrEqual_56F059C0),\n/* harmony export */   \"BigInteger_Pow_62E082A2\": () => (/* binding */ BigInteger_Pow_62E082A2),\n/* harmony export */   \"BigInteger__get_ToInt32\": () => (/* binding */ BigInteger__get_ToInt32),\n/* harmony export */   \"BigInteger__get_ToUInt32\": () => (/* binding */ BigInteger__get_ToUInt32),\n/* harmony export */   \"BigInteger__get_ToInt64\": () => (/* binding */ BigInteger__get_ToInt64),\n/* harmony export */   \"BigInteger__get_ToUInt64\": () => (/* binding */ BigInteger__get_ToUInt64),\n/* harmony export */   \"BigInteger__get_ToDouble\": () => (/* binding */ BigInteger__get_ToDouble),\n/* harmony export */   \"BigInteger__get_ToSByte\": () => (/* binding */ BigInteger__get_ToSByte),\n/* harmony export */   \"BigInteger__get_ToByte\": () => (/* binding */ BigInteger__get_ToByte),\n/* harmony export */   \"BigInteger__get_ToInt16\": () => (/* binding */ BigInteger__get_ToInt16),\n/* harmony export */   \"BigInteger__get_ToUInt16\": () => (/* binding */ BigInteger__get_ToUInt16),\n/* harmony export */   \"BigInteger__get_ToSingle\": () => (/* binding */ BigInteger__get_ToSingle),\n/* harmony export */   \"BigInteger__get_ToDecimal\": () => (/* binding */ BigInteger__get_ToDecimal),\n/* harmony export */   \"BigInteger_Parse_Z721C83C5\": () => (/* binding */ BigInteger_Parse_Z721C83C5),\n/* harmony export */   \"BigInteger__get_IsSmall\": () => (/* binding */ BigInteger__get_IsSmall),\n/* harmony export */   \"BigInteger_Factorial_Z665282C2\": () => (/* binding */ BigInteger_Factorial_Z665282C2),\n/* harmony export */   \"BigInteger_op_UnaryPlus_Z665282C2\": () => (/* binding */ BigInteger_op_UnaryPlus_Z665282C2),\n/* harmony export */   \"BigInteger_FromInt64_Z524259C1\": () => (/* binding */ BigInteger_FromInt64_Z524259C1),\n/* harmony export */   \"BigInteger_FromInt32_Z524259A4\": () => (/* binding */ BigInteger_FromInt32_Z524259A4)\n/* harmony export */ });\n/* harmony import */ var _n_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./n.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/BigInt/n.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _Reflection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _Array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Array.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js\");\n/* harmony import */ var _Long_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Long.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Long.js\");\n/* harmony import */ var _Int32_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Int32.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Int32.js\");\n/* harmony import */ var _Decimal_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Decimal.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Decimal.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar BigInteger = /*#__PURE__*/function (_Record) {\n  _inherits(BigInteger, _Record);\n  var _super = _createSuper(BigInteger);\n  function BigInteger(signInt, v) {\n    var _this;\n    _classCallCheck(this, BigInteger);\n    _this = _super.call(this);\n    _this.signInt = signInt | 0;\n    _this.v = v;\n    return _this;\n  }\n  _createClass(BigInteger, [{\n    key: \"toString\",\n    value: function toString() {\n      var x = this;\n      var matchValue = BigInteger__get_SignInt(x) | 0;\n      switch (matchValue) {\n        case -1:\n          {\n            return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x)) ? \"0\" : \"-\" + (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_toString)(BigInteger__get_V(x));\n          }\n        case 0:\n          {\n            return \"0\";\n          }\n        case 1:\n          {\n            return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_toString)(BigInteger__get_V(x));\n          }\n        default:\n          {\n            throw new Error(\"signs should be +/- 1 or 0\");\n          }\n      }\n    }\n  }, {\n    key: \"Equals\",\n    value: function Equals(obj) {\n      var this$ = this;\n      return obj instanceof BigInteger && BigInteger_op_Equality_56F059C0(this$, obj);\n    }\n  }, {\n    key: \"GetHashCode\",\n    value: function GetHashCode() {\n      var x = this;\n      return BigInteger_hash_Z665282C2(x) | 0;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_key) {\n      var this$ = this;\n      return (0,_Types_js__WEBPACK_IMPORTED_MODULE_1__.toString)(this$);\n    }\n  }, {\n    key: \"CompareTo\",\n    value: function CompareTo(obj) {\n      var this$ = this;\n      if (obj instanceof BigInteger) {\n        return BigInteger_compare_56F059C0(this$, obj) | 0;\n      } else {\n        throw new Error(\"the objects are not comparable\\\\nParameter name: obj\");\n      }\n    }\n  }]);\n  return BigInteger;\n}(_Types_js__WEBPACK_IMPORTED_MODULE_1__.Record);\nfunction BigInteger$reflection() {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_2__.class_type)(\"BigInt.BigInteger\", void 0, BigInteger, (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_2__.class_type)(\"System.ValueType\"));\n}\nfunction BigInteger_$ctor_Z2BE94A1(signInt, v) {\n  return new BigInteger(signInt, v);\n}\n(function () {\n  BigInteger.smallLim = 4096;\n  BigInteger.smallPosTab = (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.initialize)(BigInteger.smallLim, _n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_ofInt32);\n  BigInteger.one = BigInteger_$ctor_Z524259A4(1);\n  BigInteger.two = BigInteger_$ctor_Z524259A4(2);\n  BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\n})();\nfunction BigInteger_nat_Z67CCE57D(n) {\n  if ((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isSmall)(n) && (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_getSmall)(n) < BigInteger.smallLim) {\n    return BigInteger.smallPosTab[(0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_getSmall)(n)];\n  } else {\n    return n;\n  }\n}\nfunction BigInteger_create_Z2BE94A1(s, n) {\n  return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\n}\nfunction BigInteger_posn_Z67CCE57D(n) {\n  return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\n}\nfunction BigInteger_negn_Z67CCE57D(n) {\n  return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\n}\nfunction BigInteger__get_Sign(x) {\n  if (BigInteger__get_IsZero(x)) {\n    return 0;\n  } else {\n    return x.signInt | 0;\n  }\n}\nfunction BigInteger__get_SignInt(x) {\n  return x.signInt;\n}\nfunction BigInteger__get_V(x) {\n  return x.v;\n}\nfunction BigInteger_op_Equality_56F059C0(x, y) {\n  var matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n  var pattern_matching_result;\n  if (matchValue[0] === -1) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 1;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 8;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 3;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else if (matchValue[0] === 0) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 6;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 4;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 5;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else if (matchValue[0] === 1) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 2;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 7;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 0;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else {\n    pattern_matching_result = 9;\n  }\n  switch (pattern_matching_result) {\n    case 0:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_equal)(BigInteger__get_V(x), BigInteger__get_V(y));\n      }\n    case 1:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_equal)(BigInteger__get_V(x), BigInteger__get_V(y));\n      }\n    case 2:\n      {\n        if ((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x))) {\n          return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(y));\n        } else {\n          return false;\n        }\n      }\n    case 3:\n      {\n        if ((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x))) {\n          return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(y));\n        } else {\n          return false;\n        }\n      }\n    case 4:\n      {\n        return true;\n      }\n    case 5:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(y));\n      }\n    case 6:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(y));\n      }\n    case 7:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x));\n      }\n    case 8:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x));\n      }\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nfunction BigInteger_op_Inequality_56F059C0(x, y) {\n  return !BigInteger_op_Equality_56F059C0(x, y);\n}\nfunction BigInteger_op_LessThan_56F059C0(x, y) {\n  var matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n  var pattern_matching_result;\n  if (matchValue[0] === -1) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 1;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 8;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 3;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else if (matchValue[0] === 0) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 6;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 4;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 5;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else if (matchValue[0] === 1) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 2;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 7;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 0;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else {\n    pattern_matching_result = 9;\n  }\n  switch (pattern_matching_result) {\n    case 0:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_lt)(BigInteger__get_V(x), BigInteger__get_V(y));\n      }\n    case 1:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_lt)(BigInteger__get_V(y), BigInteger__get_V(x));\n      }\n    case 2:\n      {\n        return false;\n      }\n    case 3:\n      {\n        if (!(0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x))) {\n          return true;\n        } else {\n          return !(0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(y));\n        }\n      }\n    case 4:\n      {\n        return false;\n      }\n    case 5:\n      {\n        return !(0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(y));\n      }\n    case 6:\n      {\n        return false;\n      }\n    case 7:\n      {\n        return false;\n      }\n    case 8:\n      {\n        return !(0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x));\n      }\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nfunction BigInteger_op_GreaterThan_56F059C0(x, y) {\n  var matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n  var pattern_matching_result;\n  if (matchValue[0] === -1) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 1;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 8;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 3;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else if (matchValue[0] === 0) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 6;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 4;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 5;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else if (matchValue[0] === 1) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 2;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 7;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 0;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else {\n    pattern_matching_result = 9;\n  }\n  switch (pattern_matching_result) {\n    case 0:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_gt)(BigInteger__get_V(x), BigInteger__get_V(y));\n      }\n    case 1:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_gt)(BigInteger__get_V(y), BigInteger__get_V(x));\n      }\n    case 2:\n      {\n        if (!(0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x))) {\n          return true;\n        } else {\n          return !(0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(y));\n        }\n      }\n    case 3:\n      {\n        return false;\n      }\n    case 4:\n      {\n        return false;\n      }\n    case 5:\n      {\n        return false;\n      }\n    case 6:\n      {\n        return !(0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(y));\n      }\n    case 7:\n      {\n        return !(0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x));\n      }\n    case 8:\n      {\n        return false;\n      }\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nfunction BigInteger_compare_56F059C0(n, nn) {\n  if (BigInteger_op_LessThan_56F059C0(n, nn)) {\n    return -1;\n  } else if (BigInteger_op_Equality_56F059C0(n, nn)) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\nfunction BigInteger_hash_Z665282C2(z) {\n  if (BigInteger__get_SignInt(z) === 0) {\n    return 1;\n  } else {\n    return BigInteger__get_SignInt(z) + (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_hash)(BigInteger__get_V(z)) | 0;\n  }\n}\nfunction BigInteger__get_StructuredDisplayString(x) {\n  return (0,_Types_js__WEBPACK_IMPORTED_MODULE_1__.toString)(x);\n}\nfunction BigInteger_$ctor_Z524259A4(n) {\n  if (n >= 0) {\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_ofInt32)(n)));\n  } else if (n === -2147483648) {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_ofInt64)((0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.op_UnaryNegation)((0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromInteger)(n, false, 2)))));\n  } else {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_ofInt32)((0,_Int32_js__WEBPACK_IMPORTED_MODULE_5__.op_UnaryNegation_Int32)(n))));\n  }\n}\nfunction BigInteger_$ctor_Z524259C1(n) {\n  if ((0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.compare)(n, (0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromBits)(0, 0, false)) >= 0) {\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_ofInt64)(n)));\n  } else if ((0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.equals)(n, (0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromBits)(0, 2147483648, false))) {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_add)((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_ofInt64)((0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromBits)(4294967295, 2147483647, false)), _n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_one)));\n  } else {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_ofInt64)((0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.op_UnaryNegation)(n))));\n  }\n}\nfunction BigInteger_get_One() {\n  return BigInteger.one;\n}\nfunction BigInteger_get_Two() {\n  return BigInteger.two;\n}\nfunction BigInteger_get_Zero() {\n  return BigInteger.zero;\n}\nfunction BigInteger_op_UnaryNegation_Z665282C2(z) {\n  var matchValue = BigInteger__get_SignInt(z) | 0;\n  if (matchValue === 0) {\n    return BigInteger_get_Zero();\n  } else {\n    return BigInteger_create_Z2BE94A1((0,_Int32_js__WEBPACK_IMPORTED_MODULE_5__.op_UnaryNegation_Int32)(matchValue), BigInteger__get_V(z));\n  }\n}\nfunction BigInteger_Scale_Z320F31E(k, z) {\n  if (BigInteger__get_SignInt(z) === 0) {\n    return BigInteger_get_Zero();\n  } else if (k < 0) {\n    return BigInteger_create_Z2BE94A1((0,_Int32_js__WEBPACK_IMPORTED_MODULE_5__.op_UnaryNegation_Int32)(BigInteger__get_SignInt(z)), (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_scale)((0,_Int32_js__WEBPACK_IMPORTED_MODULE_5__.op_UnaryNegation_Int32)(k), BigInteger__get_V(z)));\n  } else {\n    return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_scale)(k, BigInteger__get_V(z)));\n  }\n}\nfunction BigInteger_subnn_6A57060(nx, ny) {\n  if ((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_gte)(nx, ny)) {\n    return BigInteger_posn_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_sub)(nx, ny));\n  } else {\n    return BigInteger_negn_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_sub)(ny, nx));\n  }\n}\nfunction BigInteger_addnn_6A57060(nx, ny) {\n  return BigInteger_posn_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_add)(nx, ny));\n}\nfunction BigInteger__get_IsZero(x) {\n  if (BigInteger__get_SignInt(x) === 0) {\n    return true;\n  } else {\n    return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x));\n  }\n}\nfunction BigInteger__get_IsOne(x) {\n  if (BigInteger__get_SignInt(x) === 1) {\n    return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isOne)(BigInteger__get_V(x));\n  } else {\n    return false;\n  }\n}\nfunction BigInteger_op_Addition_56F059C0(x, y) {\n  if (BigInteger__get_IsZero(y)) {\n    return x;\n  } else if (BigInteger__get_IsZero(x)) {\n    return y;\n  } else {\n    var matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    var pattern_matching_result;\n    if (matchValue[0] === -1) {\n      if (matchValue[1] === -1) {\n        pattern_matching_result = 1;\n      } else if (matchValue[1] === 1) {\n        pattern_matching_result = 3;\n      } else {\n        pattern_matching_result = 4;\n      }\n    } else if (matchValue[0] === 1) {\n      if (matchValue[1] === -1) {\n        pattern_matching_result = 2;\n      } else if (matchValue[1] === 1) {\n        pattern_matching_result = 0;\n      } else {\n        pattern_matching_result = 4;\n      }\n    } else {\n      pattern_matching_result = 4;\n    }\n    switch (pattern_matching_result) {\n      case 0:\n        {\n          return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n      case 1:\n        {\n          return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n        }\n      case 2:\n        {\n          return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n      case 3:\n        {\n          return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nfunction BigInteger_op_Subtraction_56F059C0(x, y) {\n  if (BigInteger__get_IsZero(y)) {\n    return x;\n  } else if (BigInteger__get_IsZero(x)) {\n    return BigInteger_op_UnaryNegation_Z665282C2(y);\n  } else {\n    var matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    var pattern_matching_result;\n    if (matchValue[0] === -1) {\n      if (matchValue[1] === -1) {\n        pattern_matching_result = 1;\n      } else if (matchValue[1] === 1) {\n        pattern_matching_result = 3;\n      } else {\n        pattern_matching_result = 4;\n      }\n    } else if (matchValue[0] === 1) {\n      if (matchValue[1] === -1) {\n        pattern_matching_result = 2;\n      } else if (matchValue[1] === 1) {\n        pattern_matching_result = 0;\n      } else {\n        pattern_matching_result = 4;\n      }\n    } else {\n      pattern_matching_result = 4;\n    }\n    switch (pattern_matching_result) {\n      case 0:\n        {\n          return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n      case 1:\n        {\n          return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n      case 2:\n        {\n          return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n      case 3:\n        {\n          return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n        }\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nfunction BigInteger_op_Multiply_56F059C0(x, y) {\n  if (BigInteger__get_IsZero(x)) {\n    return x;\n  } else if (BigInteger__get_IsZero(y)) {\n    return y;\n  } else if (BigInteger__get_IsOne(x)) {\n    return y;\n  } else if (BigInteger__get_IsOne(y)) {\n    return x;\n  } else {\n    var m = (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_mul)(BigInteger__get_V(x), BigInteger__get_V(y));\n    return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\n  }\n}\nfunction BigInteger_DivRem_56F059C0(x, y) {\n  if (BigInteger__get_IsZero(y)) {\n    throw new Error();\n  }\n  if (BigInteger__get_IsZero(x)) {\n    return [BigInteger_get_Zero(), BigInteger_get_Zero()];\n  } else {\n    var patternInput = (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_divmod)(BigInteger__get_V(x), BigInteger__get_V(y));\n    var r = patternInput[1];\n    var d = patternInput[0];\n    var matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    var pattern_matching_result;\n    if (matchValue[0] === -1) {\n      if (matchValue[1] === -1) {\n        pattern_matching_result = 1;\n      } else if (matchValue[1] === 1) {\n        pattern_matching_result = 3;\n      } else {\n        pattern_matching_result = 4;\n      }\n    } else if (matchValue[0] === 1) {\n      if (matchValue[1] === -1) {\n        pattern_matching_result = 2;\n      } else if (matchValue[1] === 1) {\n        pattern_matching_result = 0;\n      } else {\n        pattern_matching_result = 4;\n      }\n    } else {\n      pattern_matching_result = 4;\n    }\n    switch (pattern_matching_result) {\n      case 0:\n        {\n          return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n        }\n      case 1:\n        {\n          return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n        }\n      case 2:\n        {\n          return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n        }\n      case 3:\n        {\n          return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n        }\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nfunction BigInteger_op_Division_56F059C0(x, y) {\n  return BigInteger_DivRem_56F059C0(x, y)[0];\n}\nfunction BigInteger_op_Modulus_56F059C0(x, y) {\n  return BigInteger_DivRem_56F059C0(x, y)[1];\n}\nfunction BigInteger_op_RightShift_62E082A2(x, y) {\n  return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\nfunction BigInteger_op_LeftShift_62E082A2(x, y) {\n  return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\nfunction BigInteger_op_BitwiseAnd_56F059C0(x, y) {\n  return BigInteger_posn_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_bitAnd)(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\nfunction BigInteger_op_BitwiseOr_56F059C0(x, y) {\n  return BigInteger_posn_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_bitOr)(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\nfunction BigInteger_op_ExclusiveOr_56F059C0(x, y) {\n  return BigInteger_posn_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_bitXor)(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\nfunction BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\n  var matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n  if (matchValue[0] === 0) {\n    if (matchValue[1] === 0) {\n      return BigInteger_get_Zero();\n    } else {\n      return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\n    }\n  } else if (matchValue[1] === 0) {\n    return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\n  } else {\n    return BigInteger_posn_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_hcf)(BigInteger__get_V(x), BigInteger__get_V(y)));\n  }\n}\nfunction BigInteger__get_IsNegative(x) {\n  if (BigInteger__get_SignInt(x) === -1) {\n    return !BigInteger__get_IsZero(x);\n  } else {\n    return false;\n  }\n}\nfunction BigInteger__get_IsPositive(x) {\n  if (BigInteger__get_SignInt(x) === 1) {\n    return !BigInteger__get_IsZero(x);\n  } else {\n    return false;\n  }\n}\nfunction BigInteger_Abs_Z665282C2(x) {\n  if (BigInteger__get_SignInt(x) === -1) {\n    return BigInteger_op_UnaryNegation_Z665282C2(x);\n  } else {\n    return x;\n  }\n}\nfunction BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\n  var matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n  var pattern_matching_result;\n  if (matchValue[0] === -1) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 1;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 6;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 3;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else if (matchValue[0] === 0) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 8;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 4;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 7;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else if (matchValue[0] === 1) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 2;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 5;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 0;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else {\n    pattern_matching_result = 9;\n  }\n  switch (pattern_matching_result) {\n    case 0:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_lte)(BigInteger__get_V(x), BigInteger__get_V(y));\n      }\n    case 1:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_lte)(BigInteger__get_V(y), BigInteger__get_V(x));\n      }\n    case 2:\n      {\n        if ((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x))) {\n          return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(y));\n        } else {\n          return false;\n        }\n      }\n    case 3:\n      {\n        return true;\n      }\n    case 4:\n      {\n        return true;\n      }\n    case 5:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x));\n      }\n    case 6:\n      {\n        return true;\n      }\n    case 7:\n      {\n        return true;\n      }\n    case 8:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(y));\n      }\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nfunction BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\n  var matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n  var pattern_matching_result;\n  if (matchValue[0] === -1) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 1;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 6;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 3;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else if (matchValue[0] === 0) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 8;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 4;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 7;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else if (matchValue[0] === 1) {\n    if (matchValue[1] === -1) {\n      pattern_matching_result = 2;\n    } else if (matchValue[1] === 0) {\n      pattern_matching_result = 5;\n    } else if (matchValue[1] === 1) {\n      pattern_matching_result = 0;\n    } else {\n      pattern_matching_result = 9;\n    }\n  } else {\n    pattern_matching_result = 9;\n  }\n  switch (pattern_matching_result) {\n    case 0:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_gte)(BigInteger__get_V(x), BigInteger__get_V(y));\n      }\n    case 1:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_gte)(BigInteger__get_V(y), BigInteger__get_V(x));\n      }\n    case 2:\n      {\n        return true;\n      }\n    case 3:\n      {\n        if ((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x))) {\n          return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(y));\n        } else {\n          return false;\n        }\n      }\n    case 4:\n      {\n        return true;\n      }\n    case 5:\n      {\n        return true;\n      }\n    case 6:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(x));\n      }\n    case 7:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)(BigInteger__get_V(y));\n      }\n    case 8:\n      {\n        return true;\n      }\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nfunction BigInteger_Pow_62E082A2(x, y) {\n  if (y < 0) {\n    throw new Error(\"y\");\n  }\n  var matchValue = [BigInteger__get_IsZero(x), y];\n  if (matchValue[0]) {\n    if (matchValue[1] === 0) {\n      return BigInteger_get_One();\n    } else {\n      return BigInteger_get_Zero();\n    }\n  } else {\n    var yval = BigInteger_$ctor_Z524259A4(y);\n    return BigInteger_create_Z2BE94A1((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isZero)((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_rem)(BigInteger__get_V(yval), _n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_pow)(BigInteger__get_V(x), BigInteger__get_V(yval)));\n  }\n}\nfunction BigInteger__get_ToInt32(x) {\n  if (BigInteger__get_IsZero(x)) {\n    return 0;\n  } else {\n    var u = (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_toUInt32)(BigInteger__get_V(x));\n    if (u <= 2147483647 >>> 0) {\n      return BigInteger__get_SignInt(x) * ~~u | 0;\n    } else if (BigInteger__get_SignInt(x) === -1 && u === 2147483647 + 1 >>> 0) {\n      return -2147483648;\n    } else {\n      throw new Error();\n    }\n  }\n}\nfunction BigInteger__get_ToUInt32(x) {\n  if (BigInteger__get_IsZero(x)) {\n    return 0;\n  } else {\n    return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_toUInt32)(BigInteger__get_V(x));\n  }\n}\nfunction BigInteger__get_ToInt64(x) {\n  if (BigInteger__get_IsZero(x)) {\n    return (0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromBits)(0, 0, false);\n  } else {\n    var u = (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_toUInt64)(BigInteger__get_V(x));\n    if ((0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.compare)(u, (0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromValue)((0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromBits)(4294967295, 2147483647, false), true)) <= 0) {\n      return (0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromInteger)(BigInteger__get_SignInt(x), false, 2), (0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromValue)(u, false));\n    } else if (BigInteger__get_SignInt(x) === -1 && (0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.equals)(u, (0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromValue)((0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.op_Addition)((0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromBits)(4294967295, 2147483647, false), (0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromBits)(1, 0, false)), true))) {\n      return (0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromBits)(0, 2147483648, false);\n    } else {\n      throw new Error();\n    }\n  }\n}\nfunction BigInteger__get_ToUInt64(x) {\n  if (BigInteger__get_IsZero(x)) {\n    return (0,_Long_js__WEBPACK_IMPORTED_MODULE_4__.fromBits)(0, 0, true);\n  } else {\n    return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_toUInt64)(BigInteger__get_V(x));\n  }\n}\nfunction BigInteger__get_ToDouble(x) {\n  var matchValue = BigInteger__get_SignInt(x) | 0;\n  switch (matchValue) {\n    case -1:\n      {\n        return -(0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_toFloat)(BigInteger__get_V(x));\n      }\n    case 0:\n      {\n        return 0;\n      }\n    case 1:\n      {\n        return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_toFloat)(BigInteger__get_V(x));\n      }\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nfunction BigInteger__get_ToSByte(x) {\n  return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\n}\nfunction BigInteger__get_ToByte(x) {\n  return BigInteger__get_ToUInt32(x) & 0xFF;\n}\nfunction BigInteger__get_ToInt16(x) {\n  return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\n}\nfunction BigInteger__get_ToUInt16(x) {\n  return BigInteger__get_ToUInt32(x) & 0xFFFF;\n}\nfunction BigInteger__get_ToSingle(x) {\n  return BigInteger__get_ToDouble(x);\n}\nfunction BigInteger__get_ToDecimal(x) {\n  return new _Decimal_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](BigInteger__get_ToDouble(x));\n}\nfunction BigInteger_Parse_Z721C83C5(text) {\n  if (text == null) {\n    throw new Error(\"text\");\n  }\n  var text_1 = text.trim();\n  var len = text_1.length | 0;\n  if (len === 0) {\n    throw new Error();\n  }\n  var matchValue = [text_1[0], len];\n  if (matchValue[0] === \"+\") {\n    if (matchValue[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger_posn_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_ofString)(text_1.slice(1, len - 1 + 1)));\n    }\n  } else if (matchValue[0] === \"-\") {\n    if (matchValue[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger_negn_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_ofString)(text_1.slice(1, len - 1 + 1)));\n    }\n  } else {\n    return BigInteger_posn_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_ofString)(text_1));\n  }\n}\nfunction BigInteger__get_IsSmall(x) {\n  if (BigInteger__get_IsZero(x)) {\n    return true;\n  } else {\n    return (0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_isSmall)(BigInteger__get_V(x));\n  }\n}\nfunction BigInteger_Factorial_Z665282C2(x) {\n  if (BigInteger__get_IsNegative(x)) {\n    throw new Error(\"mustBeNonNegative\\\\nParameter name: x\");\n  }\n  if (BigInteger__get_IsPositive(x)) {\n    return BigInteger_posn_Z67CCE57D((0,_n_js__WEBPACK_IMPORTED_MODULE_0__.BigNatModule_factorial)(BigInteger__get_V(x)));\n  } else {\n    return BigInteger_get_One();\n  }\n}\nfunction BigInteger_op_UnaryPlus_Z665282C2(n1) {\n  return n1;\n}\nfunction BigInteger_FromInt64_Z524259C1(x) {\n  return BigInteger_$ctor_Z524259C1(x);\n}\nfunction BigInteger_FromInt32_Z524259A4(x) {\n  return BigInteger_$ctor_Z524259A4(x);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/BigInt/z.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Choice.js":
/*!***********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Choice.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FSharpResult$2\": () => (/* binding */ FSharpResult$2),\n/* harmony export */   \"FSharpResult$2$reflection\": () => (/* binding */ FSharpResult$2$reflection),\n/* harmony export */   \"Result_Map\": () => (/* binding */ Result_Map),\n/* harmony export */   \"Result_MapError\": () => (/* binding */ Result_MapError),\n/* harmony export */   \"Result_Bind\": () => (/* binding */ Result_Bind),\n/* harmony export */   \"FSharpChoice$2\": () => (/* binding */ FSharpChoice$2),\n/* harmony export */   \"FSharpChoice$2$reflection\": () => (/* binding */ FSharpChoice$2$reflection),\n/* harmony export */   \"FSharpChoice$3\": () => (/* binding */ FSharpChoice$3),\n/* harmony export */   \"FSharpChoice$3$reflection\": () => (/* binding */ FSharpChoice$3$reflection),\n/* harmony export */   \"FSharpChoice$4\": () => (/* binding */ FSharpChoice$4),\n/* harmony export */   \"FSharpChoice$4$reflection\": () => (/* binding */ FSharpChoice$4$reflection),\n/* harmony export */   \"FSharpChoice$5\": () => (/* binding */ FSharpChoice$5),\n/* harmony export */   \"FSharpChoice$5$reflection\": () => (/* binding */ FSharpChoice$5$reflection),\n/* harmony export */   \"FSharpChoice$6\": () => (/* binding */ FSharpChoice$6),\n/* harmony export */   \"FSharpChoice$6$reflection\": () => (/* binding */ FSharpChoice$6$reflection),\n/* harmony export */   \"FSharpChoice$7\": () => (/* binding */ FSharpChoice$7),\n/* harmony export */   \"FSharpChoice$7$reflection\": () => (/* binding */ FSharpChoice$7$reflection),\n/* harmony export */   \"Choice_makeChoice1Of2\": () => (/* binding */ Choice_makeChoice1Of2),\n/* harmony export */   \"Choice_makeChoice2Of2\": () => (/* binding */ Choice_makeChoice2Of2),\n/* harmony export */   \"Choice_tryValueIfChoice1Of2\": () => (/* binding */ Choice_tryValueIfChoice1Of2),\n/* harmony export */   \"Choice_tryValueIfChoice2Of2\": () => (/* binding */ Choice_tryValueIfChoice2Of2)\n/* harmony export */ });\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _Reflection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _Option_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Option.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar FSharpResult$2 = /*#__PURE__*/function (_Union) {\n  _inherits(FSharpResult$2, _Union);\n  var _super = _createSuper(FSharpResult$2);\n  function FSharpResult$2(tag) {\n    var _this;\n    _classCallCheck(this, FSharpResult$2);\n    _this = _super.call(this);\n    _this.tag = tag | 0;\n    for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      fields[_key - 1] = arguments[_key];\n    }\n    _this.fields = fields;\n    return _this;\n  }\n  _createClass(FSharpResult$2, [{\n    key: \"cases\",\n    value: function cases() {\n      return [\"Ok\", \"Error\"];\n    }\n  }]);\n  return FSharpResult$2;\n}(_Types_js__WEBPACK_IMPORTED_MODULE_0__.Union);\nfunction FSharpResult$2$reflection(gen0, gen1) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.union_type)(\"FSharp.Core.FSharpResult`2\", [gen0, gen1], FSharpResult$2, function () {\n    return [[[\"ResultValue\", gen0]], [[\"ErrorValue\", gen1]]];\n  });\n}\nfunction Result_Map(mapping, result) {\n  if (result.tag === 0) {\n    return new FSharpResult$2(0, mapping(result.fields[0]));\n  } else {\n    return new FSharpResult$2(1, result.fields[0]);\n  }\n}\nfunction Result_MapError(mapping, result) {\n  if (result.tag === 0) {\n    return new FSharpResult$2(0, result.fields[0]);\n  } else {\n    return new FSharpResult$2(1, mapping(result.fields[0]));\n  }\n}\nfunction Result_Bind(binder, result) {\n  if (result.tag === 0) {\n    return binder(result.fields[0]);\n  } else {\n    return new FSharpResult$2(1, result.fields[0]);\n  }\n}\nvar FSharpChoice$2 = /*#__PURE__*/function (_Union2) {\n  _inherits(FSharpChoice$2, _Union2);\n  var _super2 = _createSuper(FSharpChoice$2);\n  function FSharpChoice$2(tag) {\n    var _this2;\n    _classCallCheck(this, FSharpChoice$2);\n    _this2 = _super2.call(this);\n    _this2.tag = tag | 0;\n    for (var _len2 = arguments.length, fields = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      fields[_key2 - 1] = arguments[_key2];\n    }\n    _this2.fields = fields;\n    return _this2;\n  }\n  _createClass(FSharpChoice$2, [{\n    key: \"cases\",\n    value: function cases() {\n      return [\"Choice1Of2\", \"Choice2Of2\"];\n    }\n  }]);\n  return FSharpChoice$2;\n}(_Types_js__WEBPACK_IMPORTED_MODULE_0__.Union);\nfunction FSharpChoice$2$reflection(gen0, gen1) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.union_type)(\"FSharp.Core.FSharpChoice`2\", [gen0, gen1], FSharpChoice$2, function () {\n    return [[[\"Item\", gen0]], [[\"Item\", gen1]]];\n  });\n}\nvar FSharpChoice$3 = /*#__PURE__*/function (_Union3) {\n  _inherits(FSharpChoice$3, _Union3);\n  var _super3 = _createSuper(FSharpChoice$3);\n  function FSharpChoice$3(tag) {\n    var _this3;\n    _classCallCheck(this, FSharpChoice$3);\n    _this3 = _super3.call(this);\n    _this3.tag = tag | 0;\n    for (var _len3 = arguments.length, fields = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      fields[_key3 - 1] = arguments[_key3];\n    }\n    _this3.fields = fields;\n    return _this3;\n  }\n  _createClass(FSharpChoice$3, [{\n    key: \"cases\",\n    value: function cases() {\n      return [\"Choice1Of3\", \"Choice2Of3\", \"Choice3Of3\"];\n    }\n  }]);\n  return FSharpChoice$3;\n}(_Types_js__WEBPACK_IMPORTED_MODULE_0__.Union);\nfunction FSharpChoice$3$reflection(gen0, gen1, gen2) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.union_type)(\"FSharp.Core.FSharpChoice`3\", [gen0, gen1, gen2], FSharpChoice$3, function () {\n    return [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]]];\n  });\n}\nvar FSharpChoice$4 = /*#__PURE__*/function (_Union4) {\n  _inherits(FSharpChoice$4, _Union4);\n  var _super4 = _createSuper(FSharpChoice$4);\n  function FSharpChoice$4(tag) {\n    var _this4;\n    _classCallCheck(this, FSharpChoice$4);\n    _this4 = _super4.call(this);\n    _this4.tag = tag | 0;\n    for (var _len4 = arguments.length, fields = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      fields[_key4 - 1] = arguments[_key4];\n    }\n    _this4.fields = fields;\n    return _this4;\n  }\n  _createClass(FSharpChoice$4, [{\n    key: \"cases\",\n    value: function cases() {\n      return [\"Choice1Of4\", \"Choice2Of4\", \"Choice3Of4\", \"Choice4Of4\"];\n    }\n  }]);\n  return FSharpChoice$4;\n}(_Types_js__WEBPACK_IMPORTED_MODULE_0__.Union);\nfunction FSharpChoice$4$reflection(gen0, gen1, gen2, gen3) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.union_type)(\"FSharp.Core.FSharpChoice`4\", [gen0, gen1, gen2, gen3], FSharpChoice$4, function () {\n    return [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]]];\n  });\n}\nvar FSharpChoice$5 = /*#__PURE__*/function (_Union5) {\n  _inherits(FSharpChoice$5, _Union5);\n  var _super5 = _createSuper(FSharpChoice$5);\n  function FSharpChoice$5(tag) {\n    var _this5;\n    _classCallCheck(this, FSharpChoice$5);\n    _this5 = _super5.call(this);\n    _this5.tag = tag | 0;\n    for (var _len5 = arguments.length, fields = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      fields[_key5 - 1] = arguments[_key5];\n    }\n    _this5.fields = fields;\n    return _this5;\n  }\n  _createClass(FSharpChoice$5, [{\n    key: \"cases\",\n    value: function cases() {\n      return [\"Choice1Of5\", \"Choice2Of5\", \"Choice3Of5\", \"Choice4Of5\", \"Choice5Of5\"];\n    }\n  }]);\n  return FSharpChoice$5;\n}(_Types_js__WEBPACK_IMPORTED_MODULE_0__.Union);\nfunction FSharpChoice$5$reflection(gen0, gen1, gen2, gen3, gen4) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.union_type)(\"FSharp.Core.FSharpChoice`5\", [gen0, gen1, gen2, gen3, gen4], FSharpChoice$5, function () {\n    return [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]]];\n  });\n}\nvar FSharpChoice$6 = /*#__PURE__*/function (_Union6) {\n  _inherits(FSharpChoice$6, _Union6);\n  var _super6 = _createSuper(FSharpChoice$6);\n  function FSharpChoice$6(tag) {\n    var _this6;\n    _classCallCheck(this, FSharpChoice$6);\n    _this6 = _super6.call(this);\n    _this6.tag = tag | 0;\n    for (var _len6 = arguments.length, fields = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      fields[_key6 - 1] = arguments[_key6];\n    }\n    _this6.fields = fields;\n    return _this6;\n  }\n  _createClass(FSharpChoice$6, [{\n    key: \"cases\",\n    value: function cases() {\n      return [\"Choice1Of6\", \"Choice2Of6\", \"Choice3Of6\", \"Choice4Of6\", \"Choice5Of6\", \"Choice6Of6\"];\n    }\n  }]);\n  return FSharpChoice$6;\n}(_Types_js__WEBPACK_IMPORTED_MODULE_0__.Union);\nfunction FSharpChoice$6$reflection(gen0, gen1, gen2, gen3, gen4, gen5) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.union_type)(\"FSharp.Core.FSharpChoice`6\", [gen0, gen1, gen2, gen3, gen4, gen5], FSharpChoice$6, function () {\n    return [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]]];\n  });\n}\nvar FSharpChoice$7 = /*#__PURE__*/function (_Union7) {\n  _inherits(FSharpChoice$7, _Union7);\n  var _super7 = _createSuper(FSharpChoice$7);\n  function FSharpChoice$7(tag) {\n    var _this7;\n    _classCallCheck(this, FSharpChoice$7);\n    _this7 = _super7.call(this);\n    _this7.tag = tag | 0;\n    for (var _len7 = arguments.length, fields = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n      fields[_key7 - 1] = arguments[_key7];\n    }\n    _this7.fields = fields;\n    return _this7;\n  }\n  _createClass(FSharpChoice$7, [{\n    key: \"cases\",\n    value: function cases() {\n      return [\"Choice1Of7\", \"Choice2Of7\", \"Choice3Of7\", \"Choice4Of7\", \"Choice5Of7\", \"Choice6Of7\", \"Choice7Of7\"];\n    }\n  }]);\n  return FSharpChoice$7;\n}(_Types_js__WEBPACK_IMPORTED_MODULE_0__.Union);\nfunction FSharpChoice$7$reflection(gen0, gen1, gen2, gen3, gen4, gen5, gen6) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.union_type)(\"FSharp.Core.FSharpChoice`7\", [gen0, gen1, gen2, gen3, gen4, gen5, gen6], FSharpChoice$7, function () {\n    return [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]], [[\"Item\", gen6]]];\n  });\n}\nfunction Choice_makeChoice1Of2(x) {\n  return new FSharpChoice$2(0, x);\n}\nfunction Choice_makeChoice2Of2(x) {\n  return new FSharpChoice$2(1, x);\n}\nfunction Choice_tryValueIfChoice1Of2(x) {\n  if (x.tag === 0) {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_2__.some)(x.fields[0]);\n  } else {\n    return void 0;\n  }\n}\nfunction Choice_tryValueIfChoice2Of2(x) {\n  if (x.tag === 1) {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_2__.some)(x.fields[0]);\n  } else {\n    return void 0;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Choice.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Date.js":
/*!*********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Date.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dateOffsetToString\": () => (/* binding */ dateOffsetToString),\n/* harmony export */   \"dateToHalfUTCString\": () => (/* binding */ dateToHalfUTCString),\n/* harmony export */   \"toString\": () => (/* binding */ toString),\n/* harmony export */   \"DateTime\": () => (/* binding */ DateTime),\n/* harmony export */   \"fromTicks\": () => (/* binding */ fromTicks),\n/* harmony export */   \"fromDateTimeOffset\": () => (/* binding */ fromDateTimeOffset),\n/* harmony export */   \"getTicks\": () => (/* binding */ getTicks),\n/* harmony export */   \"minValue\": () => (/* binding */ minValue),\n/* harmony export */   \"maxValue\": () => (/* binding */ maxValue),\n/* harmony export */   \"parseRaw\": () => (/* binding */ parseRaw),\n/* harmony export */   \"parse\": () => (/* binding */ parse),\n/* harmony export */   \"tryParse\": () => (/* binding */ tryParse),\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"now\": () => (/* binding */ now),\n/* harmony export */   \"utcNow\": () => (/* binding */ utcNow),\n/* harmony export */   \"today\": () => (/* binding */ today),\n/* harmony export */   \"isLeapYear\": () => (/* binding */ isLeapYear),\n/* harmony export */   \"daysInMonth\": () => (/* binding */ daysInMonth),\n/* harmony export */   \"toUniversalTime\": () => (/* binding */ toUniversalTime),\n/* harmony export */   \"toLocalTime\": () => (/* binding */ toLocalTime),\n/* harmony export */   \"specifyKind\": () => (/* binding */ specifyKind),\n/* harmony export */   \"timeOfDay\": () => (/* binding */ timeOfDay),\n/* harmony export */   \"date\": () => (/* binding */ date),\n/* harmony export */   \"day\": () => (/* binding */ day),\n/* harmony export */   \"hour\": () => (/* binding */ hour),\n/* harmony export */   \"millisecond\": () => (/* binding */ millisecond),\n/* harmony export */   \"minute\": () => (/* binding */ minute),\n/* harmony export */   \"month\": () => (/* binding */ month),\n/* harmony export */   \"second\": () => (/* binding */ second),\n/* harmony export */   \"year\": () => (/* binding */ year),\n/* harmony export */   \"dayOfWeek\": () => (/* binding */ dayOfWeek),\n/* harmony export */   \"dayOfYear\": () => (/* binding */ dayOfYear),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"addDays\": () => (/* binding */ addDays),\n/* harmony export */   \"addHours\": () => (/* binding */ addHours),\n/* harmony export */   \"addMinutes\": () => (/* binding */ addMinutes),\n/* harmony export */   \"addSeconds\": () => (/* binding */ addSeconds),\n/* harmony export */   \"addMilliseconds\": () => (/* binding */ addMilliseconds),\n/* harmony export */   \"addYears\": () => (/* binding */ addYears),\n/* harmony export */   \"addMonths\": () => (/* binding */ addMonths),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"toLongDateString\": () => (/* binding */ toLongDateString),\n/* harmony export */   \"toShortDateString\": () => (/* binding */ toShortDateString),\n/* harmony export */   \"toLongTimeString\": () => (/* binding */ toLongTimeString),\n/* harmony export */   \"toShortTimeString\": () => (/* binding */ toShortTimeString),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"compareTo\": () => (/* binding */ compareTo),\n/* harmony export */   \"op_Addition\": () => (/* binding */ op_Addition),\n/* harmony export */   \"op_Subtraction\": () => (/* binding */ op_Subtraction),\n/* harmony export */   \"isDaylightSavingTime\": () => (/* binding */ isDaylightSavingTime),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Long_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Long.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Long.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\n\n\nfunction dateOffsetToString(offset) {\n  var isMinus = offset < 0;\n  offset = Math.abs(offset);\n  var hours = ~~(offset / 3600000);\n  var minutes = offset % 3600000 / 60000;\n  return (isMinus ? \"-\" : \"+\") + (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.padWithZeros)(hours, 2) + \":\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.padWithZeros)(minutes, 2);\n}\nfunction dateToHalfUTCString(date, half) {\n  var str = date.toISOString();\n  return half === \"first\" ? str.substring(0, str.indexOf(\"T\")) : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n  if (utc) {\n    return d.toISOString();\n  } else {\n    // JS Date is always local\n    var printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n    return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.padWithZeros)(d.getFullYear(), 4) + \"-\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.padWithZeros)(d.getMonth() + 1, 2) + \"-\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.padWithZeros)(d.getDate(), 2) + \"T\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.padWithZeros)(d.getHours(), 2) + \":\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.padWithZeros)(d.getMinutes(), 2) + \":\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.padWithZeros)(d.getSeconds(), 2) + \".\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.padWithZeros)(d.getMilliseconds(), 3) + (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n  }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n  var str = dateWithOffset.toISOString();\n  return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n  return format.replace(/(\\w)\\1*/g, function (match) {\n    var rep = Number.NaN;\n    switch (match.substring(0, 1)) {\n      case \"y\":\n        var y = utc ? date.getUTCFullYear() : date.getFullYear();\n        rep = match.length < 4 ? y % 100 : y;\n        break;\n      case \"M\":\n        rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n        break;\n      case \"d\":\n        rep = utc ? date.getUTCDate() : date.getDate();\n        break;\n      case \"H\":\n        rep = utc ? date.getUTCHours() : date.getHours();\n        break;\n      case \"h\":\n        var h = utc ? date.getUTCHours() : date.getHours();\n        rep = h > 12 ? h % 12 : h;\n        break;\n      case \"m\":\n        rep = utc ? date.getUTCMinutes() : date.getMinutes();\n        break;\n      case \"s\":\n        rep = utc ? date.getUTCSeconds() : date.getSeconds();\n        break;\n      case \"f\":\n        rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n        break;\n    }\n    if (Number.isNaN(rep)) {\n      return match;\n    } else {\n      return rep < 10 && match.length > 1 ? \"0\" + rep : \"\" + rep;\n    }\n  });\n}\nfunction dateToStringWithOffset(date, format) {\n  var _a, _b, _c;\n  var d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n  if (typeof format !== \"string\") {\n    return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString((_b = date.offset) !== null && _b !== void 0 ? _b : 0);\n  } else if (format.length === 1) {\n    switch (format) {\n      case \"D\":\n      case \"d\":\n        return dateToHalfUTCString(d, \"first\");\n      case \"T\":\n      case \"t\":\n        return dateToHalfUTCString(d, \"second\");\n      case \"O\":\n      case \"o\":\n        return dateToISOStringWithOffset(d, (_c = date.offset) !== null && _c !== void 0 ? _c : 0);\n      default:\n        throw new Error(\"Unrecognized Date print format\");\n    }\n  } else {\n    return dateToStringWithCustomFormat(d, format, true);\n  }\n}\nfunction dateToStringWithKind(date, format) {\n  var utc = date.kind === 1 /* UTC */;\n  if (typeof format !== \"string\") {\n    return utc ? date.toUTCString() : date.toLocaleString();\n  } else if (format.length === 1) {\n    switch (format) {\n      case \"D\":\n      case \"d\":\n        return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n      case \"T\":\n      case \"t\":\n        return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n      case \"O\":\n      case \"o\":\n        return dateToISOString(date, utc);\n      default:\n        throw new Error(\"Unrecognized Date print format\");\n    }\n  } else {\n    return dateToStringWithCustomFormat(date, format, utc);\n  }\n}\nfunction toString(date, format, _provider) {\n  return date.offset != null ? dateToStringWithOffset(date, format) : dateToStringWithKind(date, format);\n}\nfunction DateTime(value, kind) {\n  var d = new Date(value);\n  d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n  return d;\n}\nfunction fromTicks(ticks, kind) {\n  ticks = (0,_Long_js__WEBPACK_IMPORTED_MODULE_1__.fromValue)(ticks);\n  kind = kind != null ? kind : 2 /* Local */; // better default than Unspecified\n  var date = DateTime((0,_Long_js__WEBPACK_IMPORTED_MODULE_1__.ticksToUnixEpochMilliseconds)(ticks), kind);\n  // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n  // If kind is anything but UTC, that means that the tick number was not\n  // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n  if (kind !== 1 /* UTC */) {\n    date = DateTime(date.getTime() - (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.dateOffset)(date), kind);\n  }\n  return date;\n}\nfunction fromDateTimeOffset(date, kind) {\n  var _a;\n  switch (kind) {\n    case 1 /* UTC */:\n      return DateTime(date.getTime(), 1 /* UTC */);\n    case 2 /* Local */:\n      return DateTime(date.getTime(), 2 /* Local */);\n    default:\n      var d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n      return DateTime(d.getTime() - (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.dateOffset)(d), kind);\n  }\n}\nfunction getTicks(date) {\n  return (0,_Long_js__WEBPACK_IMPORTED_MODULE_1__.unixEpochMillisecondsToTicks)(date.getTime(), (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.dateOffset)(date));\n}\nfunction minValue() {\n  // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n  return DateTime(-62135596800000, 0 /* Unspecified */);\n}\n\nfunction maxValue() {\n  // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n  return DateTime(253402300799999, 0 /* Unspecified */);\n}\n\nfunction parseRaw(input) {\n  function fail() {\n    throw new Error(\"The string is not a valid Date: \".concat(input));\n  }\n  if (input == null || input.trim() === \"\") {\n    fail();\n  }\n  // ISO dates without TZ are parsed as UTC. Adding time without TZ keeps them local.\n  if (input.length === 10 && input[4] === \"-\" && input[7] === \"-\") {\n    input += \"T00:00:00\";\n  }\n  var date = new Date(input);\n  var offset = null;\n  if (isNaN(date.getTime())) {\n    // Try to check strings JS Date cannot parse (see #1045, #1422)\n    // tslint:disable-next-line:max-line-length\n    var m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*(Z|[+-]([01]?\\d):?([0-5]?\\d)?)?\\s*$/.exec(input);\n    if (m != null) {\n      var baseDate;\n      var timeInSeconds = 0;\n      if (m[2] != null) {\n        var timeParts = m[2].split(\":\");\n        timeInSeconds = parseInt(timeParts[0], 10) * 3600 + parseInt(timeParts[1] || \"0\", 10) * 60 + parseFloat(timeParts[2] || \"0\");\n        if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n          timeInSeconds += 720;\n        }\n      }\n      if (m[4] != null) {\n        // There's an offset, parse as UTC\n        if (m[1] != null) {\n          baseDate = new Date(m[1] + \" UTC\");\n        } else {\n          var d = new Date();\n          baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n        }\n        if (m[4] === \"Z\") {\n          offset = \"Z\";\n        } else {\n          var offsetInMinutes = parseInt(m[5], 10) * 60 + parseInt(m[6] || \"0\", 10);\n          if (m[4][0] === \"-\") {\n            offsetInMinutes *= -1;\n          }\n          offset = offsetInMinutes;\n          timeInSeconds -= offsetInMinutes * 60;\n        }\n      } else {\n        if (m[1] != null) {\n          baseDate = new Date(m[1]);\n        } else {\n          var _d = new Date();\n          baseDate = new Date(_d.getFullYear() + \"/\" + (_d.getMonth() + 1) + \"/\" + _d.getDate());\n        }\n      }\n      date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n      // correct for daylight savings time\n      date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n    } else {\n      fail();\n    }\n    // Check again the date is valid after transformations, see #2229\n    if (isNaN(date.getTime())) {\n      fail();\n    }\n  }\n  return [date, offset];\n}\nfunction parse(str) {\n  var detectUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var _parseRaw = parseRaw(str),\n    _parseRaw2 = _slicedToArray(_parseRaw, 2),\n    date = _parseRaw2[0],\n    offset = _parseRaw2[1];\n  // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n  // Newtonsoft.Json uses UTC if the offset is \"Z\"\n  var kind = offset != null ? detectUTC && offset === \"Z\" ? 1 /* UTC */ : 2 /* Local */ : 0 /* Unspecified */;\n  return DateTime(date.getTime(), kind);\n}\nfunction tryParse(v, defValue) {\n  try {\n    defValue.contents = parse(v);\n    return true;\n  } catch (_err) {\n    return false;\n  }\n}\nfunction create(year, month, day) {\n  var h = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var m = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var s = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  var ms = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var kind = arguments.length > 7 ? arguments[7] : undefined;\n  var dateValue = kind === 1 /* UTC */ ? Date.UTC(year, month - 1, day, h, m, s, ms) : new Date(year, month - 1, day, h, m, s, ms).getTime();\n  if (isNaN(dateValue)) {\n    throw new Error(\"The parameters describe an unrepresentable Date.\");\n  }\n  var date = DateTime(dateValue, kind);\n  if (year <= 99) {\n    date.setFullYear(year, month - 1, day);\n  }\n  return date;\n}\nfunction now() {\n  return DateTime(Date.now(), 2 /* Local */);\n}\n\nfunction utcNow() {\n  return DateTime(Date.now(), 1 /* UTC */);\n}\n\nfunction today() {\n  return date(now());\n}\nfunction isLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nfunction daysInMonth(year, month) {\n  return month === 2 ? isLeapYear(year) ? 29 : 28 : month >= 8 ? month % 2 === 0 ? 31 : 30 : month % 2 === 0 ? 30 : 31;\n}\nfunction toUniversalTime(date) {\n  return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\n\nfunction toLocalTime(date) {\n  return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\n\nfunction specifyKind(d, kind) {\n  return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nfunction timeOfDay(d) {\n  return hour(d) * 3600000 + minute(d) * 60000 + second(d) * 1000 + millisecond(d);\n}\nfunction date(d) {\n  return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nfunction day(d) {\n  return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nfunction hour(d) {\n  return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nfunction millisecond(d) {\n  return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nfunction minute(d) {\n  return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nfunction month(d) {\n  return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nfunction second(d) {\n  return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nfunction year(d) {\n  return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nfunction dayOfWeek(d) {\n  return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nfunction dayOfYear(d) {\n  var _year = year(d);\n  var _month = month(d);\n  var _day = day(d);\n  for (var i = 1; i < _month; i++) {\n    _day += daysInMonth(_year, i);\n  }\n  return _day;\n}\nfunction add(d, ts) {\n  var newDate = DateTime(d.getTime() + ts, d.kind);\n  if (d.kind === 2 /* Local */) {\n    var oldTzOffset = d.getTimezoneOffset();\n    var newTzOffset = newDate.getTimezoneOffset();\n    return oldTzOffset !== newTzOffset ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind) : newDate;\n  } else {\n    return newDate;\n  }\n}\nfunction addDays(d, v) {\n  return add(d, v * 86400000);\n}\nfunction addHours(d, v) {\n  return add(d, v * 3600000);\n}\nfunction addMinutes(d, v) {\n  return add(d, v * 60000);\n}\nfunction addSeconds(d, v) {\n  return add(d, v * 1000);\n}\nfunction addMilliseconds(d, v) {\n  return add(d, v);\n}\nfunction addYears(d, v) {\n  var newMonth = month(d);\n  var newYear = year(d) + v;\n  var _daysInMonth = daysInMonth(newYear, newMonth);\n  var newDay = Math.min(_daysInMonth, day(d));\n  return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nfunction addMonths(d, v) {\n  var newMonth = month(d) + v;\n  var newMonth_ = 0;\n  var yearOffset = 0;\n  if (newMonth > 12) {\n    newMonth_ = newMonth % 12;\n    yearOffset = Math.floor(newMonth / 12);\n    newMonth = newMonth_;\n  } else if (newMonth < 1) {\n    newMonth_ = 12 + newMonth % 12;\n    yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n    newMonth = newMonth_;\n  }\n  var newYear = year(d) + yearOffset;\n  var _daysInMonth = daysInMonth(newYear, newMonth);\n  var newDay = Math.min(_daysInMonth, day(d));\n  return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nfunction subtract(d, that) {\n  return typeof that === \"number\" ? add(d, -that) : d.getTime() - that.getTime();\n}\nfunction toLongDateString(d) {\n  return d.toDateString();\n}\nfunction toShortDateString(d) {\n  return d.toLocaleDateString();\n}\nfunction toLongTimeString(d) {\n  return d.toLocaleTimeString();\n}\nfunction toShortTimeString(d) {\n  return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nfunction equals(d1, d2) {\n  return d1.getTime() === d2.getTime();\n}\nvar compare = _Util_js__WEBPACK_IMPORTED_MODULE_0__.compareDates;\nvar compareTo = _Util_js__WEBPACK_IMPORTED_MODULE_0__.compareDates;\nfunction op_Addition(x, y) {\n  return add(x, y);\n}\nfunction op_Subtraction(x, y) {\n  return subtract(x, y);\n}\nfunction isDaylightSavingTime(x) {\n  var jan = new Date(x.getFullYear(), 0, 1);\n  var jul = new Date(x.getFullYear(), 6, 1);\n  return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n  return Math.min(janOffset, julOffset) === tOffset;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DateTime);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Date.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/DateOffset.js":
/*!***************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/DateOffset.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DateTimeOffset),\n/* harmony export */   \"fromDate\": () => (/* binding */ fromDate),\n/* harmony export */   \"fromTicks\": () => (/* binding */ fromTicks),\n/* harmony export */   \"getUtcTicks\": () => (/* binding */ getUtcTicks),\n/* harmony export */   \"minValue\": () => (/* binding */ minValue),\n/* harmony export */   \"maxValue\": () => (/* binding */ maxValue),\n/* harmony export */   \"parse\": () => (/* binding */ parse),\n/* harmony export */   \"tryParse\": () => (/* binding */ tryParse),\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"now\": () => (/* binding */ now),\n/* harmony export */   \"utcNow\": () => (/* binding */ utcNow),\n/* harmony export */   \"toUniversalTime\": () => (/* binding */ toUniversalTime),\n/* harmony export */   \"toLocalTime\": () => (/* binding */ toLocalTime),\n/* harmony export */   \"timeOfDay\": () => (/* binding */ timeOfDay),\n/* harmony export */   \"date\": () => (/* binding */ date),\n/* harmony export */   \"day\": () => (/* binding */ day),\n/* harmony export */   \"hour\": () => (/* binding */ hour),\n/* harmony export */   \"millisecond\": () => (/* binding */ millisecond),\n/* harmony export */   \"minute\": () => (/* binding */ minute),\n/* harmony export */   \"month\": () => (/* binding */ month),\n/* harmony export */   \"second\": () => (/* binding */ second),\n/* harmony export */   \"year\": () => (/* binding */ year),\n/* harmony export */   \"dayOfWeek\": () => (/* binding */ dayOfWeek),\n/* harmony export */   \"dayOfYear\": () => (/* binding */ dayOfYear),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"addDays\": () => (/* binding */ addDays),\n/* harmony export */   \"addHours\": () => (/* binding */ addHours),\n/* harmony export */   \"addMinutes\": () => (/* binding */ addMinutes),\n/* harmony export */   \"addSeconds\": () => (/* binding */ addSeconds),\n/* harmony export */   \"addMilliseconds\": () => (/* binding */ addMilliseconds),\n/* harmony export */   \"addYears\": () => (/* binding */ addYears),\n/* harmony export */   \"addMonths\": () => (/* binding */ addMonths),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"equalsExact\": () => (/* binding */ equalsExact),\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"compareTo\": () => (/* binding */ compareTo),\n/* harmony export */   \"op_Addition\": () => (/* binding */ op_Addition),\n/* harmony export */   \"op_Subtraction\": () => (/* binding */ op_Subtraction),\n/* harmony export */   \"toOffset\": () => (/* binding */ toOffset)\n/* harmony export */ });\n/* harmony import */ var _Date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Date.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Date.js\");\n/* harmony import */ var _Long_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Long.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Long.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\n\n\n\nfunction DateTimeOffset(value, offset) {\n  checkOffsetInRange(offset);\n  var d = new Date(value);\n  d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n  return d;\n}\nfunction checkOffsetInRange(offset) {\n  if (offset != null && offset !== 0) {\n    if (offset % 60000 !== 0) {\n      throw new Error(\"Offset must be specified in whole minutes.\");\n    }\n    if (Math.abs(offset / 3600000) > 14) {\n      throw new Error(\"Offset must be within plus or minus 14 hours.\");\n    }\n  }\n}\nfunction fromDate(date, offset) {\n  var offset2 = 0;\n  switch (date.kind) {\n    case 1 /* UTC */:\n      if (offset != null && offset !== 0) {\n        throw new Error(\"The UTC Offset for Utc DateTime instances must be 0.\");\n      }\n      offset2 = 0;\n      break;\n    case 2 /* Local */:\n      offset2 = date.getTimezoneOffset() * -60000;\n      if (offset != null && offset !== offset2) {\n        throw new Error(\"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n      }\n      break;\n    case 0 /* Unspecified */:\n    default:\n      if (offset == null) {\n        offset2 = date.getTimezoneOffset() * -60000;\n      } else {\n        offset2 = offset;\n      }\n      break;\n  }\n  return DateTimeOffset(date.getTime(), offset2);\n}\nfunction fromTicks(ticks, offset) {\n  ticks = (0,_Long_js__WEBPACK_IMPORTED_MODULE_0__.fromValue)(ticks);\n  var epoc = (0,_Long_js__WEBPACK_IMPORTED_MODULE_0__.ticksToUnixEpochMilliseconds)(ticks) - offset;\n  return DateTimeOffset(epoc, offset);\n}\nfunction getUtcTicks(date) {\n  return (0,_Long_js__WEBPACK_IMPORTED_MODULE_0__.unixEpochMillisecondsToTicks)(date.getTime(), 0);\n}\nfunction minValue() {\n  // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n  return DateTimeOffset(-62135596800000, 0);\n}\nfunction maxValue() {\n  // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n  return DateTimeOffset(253402300799999, 0);\n}\nfunction parse(str) {\n  var _parseRaw = (0,_Date_js__WEBPACK_IMPORTED_MODULE_1__.parseRaw)(str),\n    _parseRaw2 = _slicedToArray(_parseRaw, 2),\n    date = _parseRaw2[0],\n    offsetMatch = _parseRaw2[1];\n  var offset = offsetMatch == null ? date.getTimezoneOffset() * -60000 : offsetMatch === \"Z\" ? 0 : offsetMatch * 60000;\n  return DateTimeOffset(date.getTime(), offset);\n}\nfunction tryParse(v, defValue) {\n  try {\n    defValue.contents = parse(v);\n    return true;\n  } catch (_err) {\n    return false;\n  }\n}\nfunction create(year, month, day, h, m, s, ms, offset) {\n  if (offset == null) {\n    offset = ms;\n    ms = 0;\n  }\n  checkOffsetInRange(offset);\n  var date;\n  if (offset === 0) {\n    date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n    if (year <= 99) {\n      date.setFullYear(year, month - 1, day);\n    }\n  } else {\n    var str = (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.padWithZeros)(year, 4) + \"-\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.padWithZeros)(month, 2) + \"-\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.padWithZeros)(day, 2) + \"T\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.padWithZeros)(h, 2) + \":\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.padWithZeros)(m, 2) + \":\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.padWithZeros)(s, 2) + \".\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.padWithZeros)(ms, 3) + (0,_Date_js__WEBPACK_IMPORTED_MODULE_1__.dateOffsetToString)(offset);\n    date = new Date(str);\n  }\n  var dateValue = date.getTime();\n  if (isNaN(dateValue)) {\n    throw new Error(\"The parameters describe an unrepresentable Date\");\n  }\n  return DateTimeOffset(dateValue, offset);\n}\nfunction now() {\n  var date = new Date();\n  var offset = date.getTimezoneOffset() * -60000;\n  return DateTimeOffset(date.getTime(), offset);\n}\nfunction utcNow() {\n  var date = now();\n  return DateTimeOffset(date.getTime(), 0);\n}\nfunction toUniversalTime(date) {\n  return DateTimeOffset(date.getTime(), 0);\n}\nfunction toLocalTime(date) {\n  return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nfunction timeOfDay(d) {\n  var _a;\n  var d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n  return d2.getUTCHours() * 3600000 + d2.getUTCMinutes() * 60000 + d2.getUTCSeconds() * 1000 + d2.getUTCMilliseconds();\n}\nfunction date(d) {\n  var _a;\n  var d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n  return (0,_Date_js__WEBPACK_IMPORTED_MODULE_1__.create)(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nfunction day(d) {\n  var _a;\n  return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDate();\n}\nfunction hour(d) {\n  var _a;\n  return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCHours();\n}\nfunction millisecond(d) {\n  var _a;\n  return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMilliseconds();\n}\nfunction minute(d) {\n  var _a;\n  return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMinutes();\n}\nfunction month(d) {\n  var _a;\n  return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMonth() + 1;\n}\nfunction second(d) {\n  var _a;\n  return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCSeconds();\n}\nfunction year(d) {\n  var _a;\n  return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCFullYear();\n}\nfunction dayOfWeek(d) {\n  var _a;\n  return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDay();\n}\nfunction dayOfYear(d) {\n  var _a;\n  var d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n  var _year = d2.getUTCFullYear();\n  var _month = d2.getUTCMonth() + 1;\n  var _day = d2.getUTCDate();\n  for (var i = 1; i < _month; i++) {\n    _day += (0,_Date_js__WEBPACK_IMPORTED_MODULE_1__.daysInMonth)(_year, i);\n  }\n  return _day;\n}\nfunction add(d, ts) {\n  var _a;\n  return DateTimeOffset(d.getTime() + ts, (_a = d.offset) !== null && _a !== void 0 ? _a : 0);\n}\nfunction addDays(d, v) {\n  var _a;\n  return DateTimeOffset(d.getTime() + v * 86400000, (_a = d.offset) !== null && _a !== void 0 ? _a : 0);\n}\nfunction addHours(d, v) {\n  var _a;\n  return DateTimeOffset(d.getTime() + v * 3600000, (_a = d.offset) !== null && _a !== void 0 ? _a : 0);\n}\nfunction addMinutes(d, v) {\n  var _a;\n  return DateTimeOffset(d.getTime() + v * 60000, (_a = d.offset) !== null && _a !== void 0 ? _a : 0);\n}\nfunction addSeconds(d, v) {\n  var _a;\n  return DateTimeOffset(d.getTime() + v * 1000, (_a = d.offset) !== null && _a !== void 0 ? _a : 0);\n}\nfunction addMilliseconds(d, v) {\n  var _a;\n  return DateTimeOffset(d.getTime() + v, (_a = d.offset) !== null && _a !== void 0 ? _a : 0);\n}\nfunction addYears(d, v) {\n  var _a;\n  var newMonth = d.getUTCMonth() + 1;\n  var newYear = d.getUTCFullYear() + v;\n  var _daysInMonth = (0,_Date_js__WEBPACK_IMPORTED_MODULE_1__.daysInMonth)(newYear, newMonth);\n  var newDay = Math.min(_daysInMonth, d.getUTCDate());\n  return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), (_a = d.offset) !== null && _a !== void 0 ? _a : 0);\n}\nfunction addMonths(d, v) {\n  var _a, _b;\n  var d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n  var newMonth = d2.getUTCMonth() + 1 + v;\n  var newMonth_ = 0;\n  var yearOffset = 0;\n  if (newMonth > 12) {\n    newMonth_ = newMonth % 12;\n    yearOffset = Math.floor(newMonth / 12);\n    newMonth = newMonth_;\n  } else if (newMonth < 1) {\n    newMonth_ = 12 + newMonth % 12;\n    yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n    newMonth = newMonth_;\n  }\n  var newYear = d2.getUTCFullYear() + yearOffset;\n  var _daysInMonth = (0,_Date_js__WEBPACK_IMPORTED_MODULE_1__.daysInMonth)(newYear, newMonth);\n  var newDay = Math.min(_daysInMonth, d2.getUTCDate());\n  return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), (_b = d.offset) !== null && _b !== void 0 ? _b : 0);\n}\nfunction subtract(d, that) {\n  var _a;\n  return typeof that === \"number\" ? DateTimeOffset(d.getTime() - that, (_a = d.offset) !== null && _a !== void 0 ? _a : 0) : d.getTime() - that.getTime();\n}\nfunction equals(d1, d2) {\n  return d1.getTime() === d2.getTime();\n}\nfunction equalsExact(d1, d2) {\n  return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nfunction compare(d1, d2) {\n  return (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.compareDates)(d1, d2);\n}\nvar compareTo = compare;\nfunction op_Addition(x, y) {\n  return add(x, y);\n}\nfunction op_Subtraction(x, y) {\n  return subtract(x, y);\n}\nfunction toOffset(d, offset) {\n  return DateTimeOffset(d.getTime(), offset);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/DateOffset.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Decimal.js":
/*!************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Decimal.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"get_Zero\": () => (/* binding */ get_Zero),\n/* harmony export */   \"get_One\": () => (/* binding */ get_One),\n/* harmony export */   \"get_MinusOne\": () => (/* binding */ get_MinusOne),\n/* harmony export */   \"get_MaxValue\": () => (/* binding */ get_MaxValue),\n/* harmony export */   \"get_MinValue\": () => (/* binding */ get_MinValue),\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"abs\": () => (/* binding */ abs),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"truncate\": () => (/* binding */ truncate),\n/* harmony export */   \"ceiling\": () => (/* binding */ ceiling),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"pow\": () => (/* binding */ pow),\n/* harmony export */   \"sqrt\": () => (/* binding */ sqrt),\n/* harmony export */   \"op_Addition\": () => (/* binding */ op_Addition),\n/* harmony export */   \"op_Subtraction\": () => (/* binding */ op_Subtraction),\n/* harmony export */   \"op_Multiply\": () => (/* binding */ op_Multiply),\n/* harmony export */   \"op_Division\": () => (/* binding */ op_Division),\n/* harmony export */   \"op_Modulus\": () => (/* binding */ op_Modulus),\n/* harmony export */   \"op_UnaryNegation\": () => (/* binding */ op_UnaryNegation),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"remainder\": () => (/* binding */ remainder),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"toString\": () => (/* binding */ toString),\n/* harmony export */   \"tryParse\": () => (/* binding */ tryParse),\n/* harmony export */   \"parse\": () => (/* binding */ parse),\n/* harmony export */   \"toNumber\": () => (/* binding */ toNumber),\n/* harmony export */   \"fromIntArray\": () => (/* binding */ fromIntArray),\n/* harmony export */   \"fromInts\": () => (/* binding */ fromInts),\n/* harmony export */   \"fromParts\": () => (/* binding */ fromParts),\n/* harmony export */   \"getBits\": () => (/* binding */ getBits)\n/* harmony export */ });\n/* harmony import */ var _lib_big_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/big.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/lib/big.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_lib_big_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\nvar get_Zero = new _lib_big_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\nvar get_One = new _lib_big_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1);\nvar get_MinusOne = new _lib_big_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](-1);\nvar get_MaxValue = new _lib_big_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"79228162514264337593543950335\");\nvar get_MinValue = new _lib_big_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"-79228162514264337593543950335\");\nfunction compare(x, y) {\n  return x.cmp(y);\n}\nfunction equals(x, y) {\n  return !x.cmp(y);\n}\nfunction abs(x) {\n  return x.abs();\n}\nfunction round(x) {\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\n\nfunction truncate(x) {\n  return x.round(0, 0 /* ROUND_DOWN */);\n}\n\nfunction ceiling(x) {\n  return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\n\nfunction floor(x) {\n  return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\n\nfunction pow(x, n) {\n  return x.pow(n);\n}\nfunction sqrt(x) {\n  return x.sqrt();\n}\nfunction op_Addition(x, y) {\n  return x.add(y);\n}\nfunction op_Subtraction(x, y) {\n  return x.sub(y);\n}\nfunction op_Multiply(x, y) {\n  return x.mul(y);\n}\nfunction op_Division(x, y) {\n  return x.div(y);\n}\nfunction op_Modulus(x, y) {\n  return x.mod(y);\n}\nfunction op_UnaryNegation(x) {\n  var x2 = new _lib_big_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](x);\n  x2.s = -x2.s || 0;\n  return x2;\n}\nvar add = op_Addition;\nvar subtract = op_Subtraction;\nvar multiply = op_Multiply;\nvar divide = op_Division;\nvar remainder = op_Modulus;\nvar negate = op_UnaryNegation;\nfunction toString(x) {\n  return x.toString();\n}\nfunction tryParse(str, defValue) {\n  try {\n    defValue.contents = new _lib_big_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](str.trim());\n    return true;\n  } catch (_a) {\n    return false;\n  }\n}\nfunction parse(str) {\n  var defValue = new _Types_js__WEBPACK_IMPORTED_MODULE_1__.FSharpRef(get_Zero);\n  if (tryParse(str, defValue)) {\n    return defValue.contents;\n  } else {\n    throw new Error(\"Input string was not in a correct format.\");\n  }\n}\nfunction toNumber(x) {\n  return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n  var hex = new Uint8Array(bitSize / 4 | 0);\n  var hexCount = 1;\n  for (var d = 0; d < dec.length; d++) {\n    var value = dec[d];\n    for (var i = 0; i < hexCount; i++) {\n      var digit = hex[i] * 10 + value | 0;\n      hex[i] = digit & 0xF;\n      value = digit >> 4;\n    }\n    if (value !== 0) {\n      hex[hexCount++] = value;\n    }\n  }\n  return hex.slice(0, hexCount); // digits in reverse order\n}\n\nfunction hexToDecimal(hex, bitSize) {\n  var dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n  var decCount = 1;\n  for (var d = hex.length - 1; d >= 0; d--) {\n    var carry = hex[d];\n    for (var i = 0; i < decCount; i++) {\n      var val = dec[i] * 16 + carry | 0;\n      dec[i] = val % 10 | 0;\n      carry = val / 10 | 0;\n    }\n    while (carry > 0) {\n      dec[decCount++] = carry % 10 | 0;\n      carry = carry / 10 | 0;\n    }\n  }\n  return dec.slice(0, decCount); // digits in reverse order\n}\n\nfunction setInt32Bits(hexDigits, bits, offset) {\n  for (var i = 0; i < 8; i++) {\n    hexDigits[offset + i] = bits >> i * 4 & 0xF;\n  }\n}\nfunction getInt32Bits(hexDigits, offset) {\n  var bits = 0;\n  for (var i = 0; i < 8; i++) {\n    bits = bits | hexDigits[offset + i] << i * 4;\n  }\n  return bits;\n}\nfunction fromIntArray(bits) {\n  return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nfunction fromInts(low, mid, high, signExp) {\n  var isNegative = signExp < 0;\n  var scale = signExp >> 16 & 0x7F;\n  return fromParts(low, mid, high, isNegative, scale);\n}\nfunction fromParts(low, mid, high, isNegative, scale) {\n  var bitSize = 96;\n  var hexDigits = new Uint8Array(bitSize / 4);\n  setInt32Bits(hexDigits, low, 0);\n  setInt32Bits(hexDigits, mid, 8);\n  setInt32Bits(hexDigits, high, 16);\n  var decDigits = hexToDecimal(hexDigits, bitSize);\n  scale = scale & 0x7F;\n  var big = new _lib_big_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n  big.c = Array.from(decDigits.reverse());\n  big.e = decDigits.length - scale - 1;\n  big.s = isNegative ? -1 : 1;\n  var d = new _lib_big_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](big);\n  return d;\n}\nfunction getBits(d) {\n  var bitSize = 96;\n  var decDigits = Uint8Array.from(d.c);\n  var hexDigits = decimalToHex(decDigits, bitSize);\n  var low = getInt32Bits(hexDigits, 0);\n  var mid = getInt32Bits(hexDigits, 8);\n  var high = getInt32Bits(hexDigits, 16);\n  var decStr = d.toString();\n  var dotPos = decStr.indexOf(\".\");\n  var scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n  var signExp = (scale & 0x7F) << 16 | (d.s < 0 ? 0x80000000 : 0);\n  return [low, mid, high, signExp];\n}\n// export function makeRangeStepFunction(step: Decimal, last: Decimal) {\n//   const stepComparedWithZero = step.cmp(get_Zero);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Decimal) => {\n//     const comparedWithLast = x.cmp(last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL2ZhYmxlLWxpYnJhcnkuMy43LjIvRGVjaW1hbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQW1DO0FBQ0k7QUFDdkMsaUVBQWVBLG1EQUFPLEVBQUM7QUFDaEIsSUFBTUUsUUFBUSxHQUFHLElBQUlGLG1EQUFPLENBQUMsQ0FBQyxDQUFDO0FBQy9CLElBQU1HLE9BQU8sR0FBRyxJQUFJSCxtREFBTyxDQUFDLENBQUMsQ0FBQztBQUM5QixJQUFNSSxZQUFZLEdBQUcsSUFBSUosbURBQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwQyxJQUFNSyxZQUFZLEdBQUcsSUFBSUwsbURBQU8sQ0FBQywrQkFBK0IsQ0FBQztBQUNqRSxJQUFNTSxZQUFZLEdBQUcsSUFBSU4sbURBQU8sQ0FBQyxnQ0FBZ0MsQ0FBQztBQUNsRSxTQUFTTyxPQUFPLENBQUNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFO0VBQzFCLE9BQU9ELENBQUMsQ0FBQ0UsR0FBRyxDQUFDRCxDQUFDLENBQUM7QUFDbkI7QUFDTyxTQUFTRSxNQUFNLENBQUNILENBQUMsRUFBRUMsQ0FBQyxFQUFFO0VBQ3pCLE9BQU8sQ0FBQ0QsQ0FBQyxDQUFDRSxHQUFHLENBQUNELENBQUMsQ0FBQztBQUNwQjtBQUNPLFNBQVNHLEdBQUcsQ0FBQ0osQ0FBQyxFQUFFO0VBQ25CLE9BQU9BLENBQUMsQ0FBQ0ksR0FBRyxFQUFFO0FBQ2xCO0FBQ08sU0FBU0MsS0FBSyxDQUFDTCxDQUFDLEVBQWM7RUFBQSxJQUFaTSxNQUFNLHVFQUFHLENBQUM7RUFDL0IsT0FBT04sQ0FBQyxDQUFDSyxLQUFLLENBQUNDLE1BQU0sRUFBRSxDQUFDLENBQUMsc0JBQXNCO0FBQ25EOztBQUNPLFNBQVNDLFFBQVEsQ0FBQ1AsQ0FBQyxFQUFFO0VBQ3hCLE9BQU9BLENBQUMsQ0FBQ0ssS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsaUJBQWlCO0FBQ3pDOztBQUNPLFNBQVNHLE9BQU8sQ0FBQ1IsQ0FBQyxFQUFFO0VBQ3ZCLE9BQU9BLENBQUMsQ0FBQ0ssS0FBSyxDQUFDLENBQUMsRUFBRUwsQ0FBQyxDQUFDRSxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLGlCQUFpQjtBQUM1RTs7QUFDTyxTQUFTTyxLQUFLLENBQUNULENBQUMsRUFBRTtFQUNyQixPQUFPQSxDQUFDLENBQUNLLEtBQUssQ0FBQyxDQUFDLEVBQUVMLENBQUMsQ0FBQ0UsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxlQUFlO0FBQzVFOztBQUNPLFNBQVNRLEdBQUcsQ0FBQ1YsQ0FBQyxFQUFFVyxDQUFDLEVBQUU7RUFDdEIsT0FBT1gsQ0FBQyxDQUFDVSxHQUFHLENBQUNDLENBQUMsQ0FBQztBQUNuQjtBQUNPLFNBQVNDLElBQUksQ0FBQ1osQ0FBQyxFQUFFO0VBQ3BCLE9BQU9BLENBQUMsQ0FBQ1ksSUFBSSxFQUFFO0FBQ25CO0FBQ08sU0FBU0MsV0FBVyxDQUFDYixDQUFDLEVBQUVDLENBQUMsRUFBRTtFQUM5QixPQUFPRCxDQUFDLENBQUNjLEdBQUcsQ0FBQ2IsQ0FBQyxDQUFDO0FBQ25CO0FBQ08sU0FBU2MsY0FBYyxDQUFDZixDQUFDLEVBQUVDLENBQUMsRUFBRTtFQUNqQyxPQUFPRCxDQUFDLENBQUNnQixHQUFHLENBQUNmLENBQUMsQ0FBQztBQUNuQjtBQUNPLFNBQVNnQixXQUFXLENBQUNqQixDQUFDLEVBQUVDLENBQUMsRUFBRTtFQUM5QixPQUFPRCxDQUFDLENBQUNrQixHQUFHLENBQUNqQixDQUFDLENBQUM7QUFDbkI7QUFDTyxTQUFTa0IsV0FBVyxDQUFDbkIsQ0FBQyxFQUFFQyxDQUFDLEVBQUU7RUFDOUIsT0FBT0QsQ0FBQyxDQUFDb0IsR0FBRyxDQUFDbkIsQ0FBQyxDQUFDO0FBQ25CO0FBQ08sU0FBU29CLFVBQVUsQ0FBQ3JCLENBQUMsRUFBRUMsQ0FBQyxFQUFFO0VBQzdCLE9BQU9ELENBQUMsQ0FBQ3NCLEdBQUcsQ0FBQ3JCLENBQUMsQ0FBQztBQUNuQjtBQUNPLFNBQVNzQixnQkFBZ0IsQ0FBQ3ZCLENBQUMsRUFBRTtFQUNoQyxJQUFNd0IsRUFBRSxHQUFHLElBQUloQyxtREFBTyxDQUFDUSxDQUFDLENBQUM7RUFDekJ3QixFQUFFLENBQUNDLENBQUMsR0FBRyxDQUFDRCxFQUFFLENBQUNDLENBQUMsSUFBSSxDQUFDO0VBQ2pCLE9BQU9ELEVBQUU7QUFDYjtBQUNPLElBQU1WLEdBQUcsR0FBR0QsV0FBVztBQUN2QixJQUFNYSxRQUFRLEdBQUdYLGNBQWM7QUFDL0IsSUFBTVksUUFBUSxHQUFHVixXQUFXO0FBQzVCLElBQU1XLE1BQU0sR0FBR1QsV0FBVztBQUMxQixJQUFNVSxTQUFTLEdBQUdSLFVBQVU7QUFDNUIsSUFBTVMsTUFBTSxHQUFHUCxnQkFBZ0I7QUFDL0IsU0FBU1EsUUFBUSxDQUFDL0IsQ0FBQyxFQUFFO0VBQ3hCLE9BQU9BLENBQUMsQ0FBQytCLFFBQVEsRUFBRTtBQUN2QjtBQUNPLFNBQVNDLFFBQVEsQ0FBQ0MsR0FBRyxFQUFFQyxRQUFRLEVBQUU7RUFDcEMsSUFBSTtJQUNBQSxRQUFRLENBQUNDLFFBQVEsR0FBRyxJQUFJM0MsbURBQU8sQ0FBQ3lDLEdBQUcsQ0FBQ0csSUFBSSxFQUFFLENBQUM7SUFDM0MsT0FBTyxJQUFJO0VBQ2YsQ0FBQyxDQUNELE9BQU9DLEVBQUUsRUFBRTtJQUNQLE9BQU8sS0FBSztFQUNoQjtBQUNKO0FBQ08sU0FBU0MsS0FBSyxDQUFDTCxHQUFHLEVBQUU7RUFDdkIsSUFBTUMsUUFBUSxHQUFHLElBQUl6QyxnREFBUyxDQUFDQyxRQUFRLENBQUM7RUFDeEMsSUFBSXNDLFFBQVEsQ0FBQ0MsR0FBRyxFQUFFQyxRQUFRLENBQUMsRUFBRTtJQUN6QixPQUFPQSxRQUFRLENBQUNDLFFBQVE7RUFDNUIsQ0FBQyxNQUNJO0lBQ0QsTUFBTSxJQUFJSSxLQUFLLENBQUMsMkNBQTJDLENBQUM7RUFDaEU7QUFDSjtBQUNPLFNBQVNDLFFBQVEsQ0FBQ3hDLENBQUMsRUFBRTtFQUN4QixPQUFPLENBQUNBLENBQUM7QUFDYjtBQUNBLFNBQVN5QyxZQUFZLENBQUNDLEdBQUcsRUFBRUMsT0FBTyxFQUFFO0VBQ2hDLElBQU1DLEdBQUcsR0FBRyxJQUFJQyxVQUFVLENBQUNGLE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0VBQzNDLElBQUlHLFFBQVEsR0FBRyxDQUFDO0VBQ2hCLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHTCxHQUFHLENBQUNNLE1BQU0sRUFBRUQsQ0FBQyxFQUFFLEVBQUU7SUFDakMsSUFBSUUsS0FBSyxHQUFHUCxHQUFHLENBQUNLLENBQUMsQ0FBQztJQUNsQixLQUFLLElBQUlHLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0osUUFBUSxFQUFFSSxDQUFDLEVBQUUsRUFBRTtNQUMvQixJQUFNQyxLQUFLLEdBQUdQLEdBQUcsQ0FBQ00sQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHRCxLQUFLLEdBQUcsQ0FBQztNQUNyQ0wsR0FBRyxDQUFDTSxDQUFDLENBQUMsR0FBR0MsS0FBSyxHQUFHLEdBQUc7TUFDcEJGLEtBQUssR0FBR0UsS0FBSyxJQUFJLENBQUM7SUFDdEI7SUFDQSxJQUFJRixLQUFLLEtBQUssQ0FBQyxFQUFFO01BQ2JMLEdBQUcsQ0FBQ0UsUUFBUSxFQUFFLENBQUMsR0FBR0csS0FBSztJQUMzQjtFQUNKO0VBQ0EsT0FBT0wsR0FBRyxDQUFDUSxLQUFLLENBQUMsQ0FBQyxFQUFFTixRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQ25DOztBQUNBLFNBQVNPLFlBQVksQ0FBQ1QsR0FBRyxFQUFFRCxPQUFPLEVBQUU7RUFDaEMsSUFBTUQsR0FBRyxHQUFHLElBQUlHLFVBQVUsQ0FBQ0YsT0FBTyxHQUFHLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztFQUN4RCxJQUFJVyxRQUFRLEdBQUcsQ0FBQztFQUNoQixLQUFLLElBQUlQLENBQUMsR0FBR0gsR0FBRyxDQUFDSSxNQUFNLEdBQUcsQ0FBQyxFQUFFRCxDQUFDLElBQUksQ0FBQyxFQUFFQSxDQUFDLEVBQUUsRUFBRTtJQUN0QyxJQUFJUSxLQUFLLEdBQUdYLEdBQUcsQ0FBQ0csQ0FBQyxDQUFDO0lBQ2xCLEtBQUssSUFBSUcsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHSSxRQUFRLEVBQUVKLENBQUMsRUFBRSxFQUFFO01BQy9CLElBQU1NLEdBQUcsR0FBR2QsR0FBRyxDQUFDUSxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUdLLEtBQUssR0FBRyxDQUFDO01BQ25DYixHQUFHLENBQUNRLENBQUMsQ0FBQyxHQUFJTSxHQUFHLEdBQUcsRUFBRSxHQUFJLENBQUM7TUFDdkJELEtBQUssR0FBSUMsR0FBRyxHQUFHLEVBQUUsR0FBSSxDQUFDO0lBQzFCO0lBQ0EsT0FBT0QsS0FBSyxHQUFHLENBQUMsRUFBRTtNQUNkYixHQUFHLENBQUNZLFFBQVEsRUFBRSxDQUFDLEdBQUlDLEtBQUssR0FBRyxFQUFFLEdBQUksQ0FBQztNQUNsQ0EsS0FBSyxHQUFJQSxLQUFLLEdBQUcsRUFBRSxHQUFJLENBQUM7SUFDNUI7RUFDSjtFQUNBLE9BQU9iLEdBQUcsQ0FBQ1UsS0FBSyxDQUFDLENBQUMsRUFBRUUsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUNuQzs7QUFDQSxTQUFTRyxZQUFZLENBQUNDLFNBQVMsRUFBRUMsSUFBSSxFQUFFQyxNQUFNLEVBQUU7RUFDM0MsS0FBSyxJQUFJVixDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEVBQUUsRUFBRTtJQUN4QlEsU0FBUyxDQUFDRSxNQUFNLEdBQUdWLENBQUMsQ0FBQyxHQUFJUyxJQUFJLElBQUtULENBQUMsR0FBRyxDQUFFLEdBQUksR0FBRztFQUNuRDtBQUNKO0FBQ0EsU0FBU1csWUFBWSxDQUFDSCxTQUFTLEVBQUVFLE1BQU0sRUFBRTtFQUNyQyxJQUFJRCxJQUFJLEdBQUcsQ0FBQztFQUNaLEtBQUssSUFBSVQsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxFQUFFLEVBQUU7SUFDeEJTLElBQUksR0FBR0EsSUFBSSxHQUFJRCxTQUFTLENBQUNFLE1BQU0sR0FBR1YsQ0FBQyxDQUFDLElBQUtBLENBQUMsR0FBRyxDQUFHO0VBQ3BEO0VBQ0EsT0FBT1MsSUFBSTtBQUNmO0FBQ08sU0FBU0csWUFBWSxDQUFDSCxJQUFJLEVBQUU7RUFDL0IsT0FBT0ksUUFBUSxDQUFDSixJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUVBLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRUEsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFQSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkQ7QUFDTyxTQUFTSSxRQUFRLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtFQUM5QyxJQUFNQyxVQUFVLEdBQUdELE9BQU8sR0FBRyxDQUFDO0VBQzlCLElBQU1FLEtBQUssR0FBSUYsT0FBTyxJQUFJLEVBQUUsR0FBSSxJQUFJO0VBQ3BDLE9BQU9HLFNBQVMsQ0FBQ04sR0FBRyxFQUFFQyxHQUFHLEVBQUVDLElBQUksRUFBRUUsVUFBVSxFQUFFQyxLQUFLLENBQUM7QUFDdkQ7QUFDTyxTQUFTQyxTQUFTLENBQUNOLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxJQUFJLEVBQUVFLFVBQVUsRUFBRUMsS0FBSyxFQUFFO0VBQ3pELElBQU0xQixPQUFPLEdBQUcsRUFBRTtFQUNsQixJQUFNZSxTQUFTLEdBQUcsSUFBSWIsVUFBVSxDQUFDRixPQUFPLEdBQUcsQ0FBQyxDQUFDO0VBQzdDYyxZQUFZLENBQUNDLFNBQVMsRUFBRU0sR0FBRyxFQUFFLENBQUMsQ0FBQztFQUMvQlAsWUFBWSxDQUFDQyxTQUFTLEVBQUVPLEdBQUcsRUFBRSxDQUFDLENBQUM7RUFDL0JSLFlBQVksQ0FBQ0MsU0FBUyxFQUFFUSxJQUFJLEVBQUUsRUFBRSxDQUFDO0VBQ2pDLElBQU1LLFNBQVMsR0FBR2xCLFlBQVksQ0FBQ0ssU0FBUyxFQUFFZixPQUFPLENBQUM7RUFDbEQwQixLQUFLLEdBQUdBLEtBQUssR0FBRyxJQUFJO0VBQ3BCLElBQU1HLEdBQUcsR0FBRyxJQUFJaEYsbURBQU8sQ0FBQyxDQUFDLENBQUM7RUFDMUJnRixHQUFHLENBQUNDLENBQUMsR0FBR0MsS0FBSyxDQUFDQyxJQUFJLENBQUNKLFNBQVMsQ0FBQ0ssT0FBTyxFQUFFLENBQUM7RUFDdkNKLEdBQUcsQ0FBQ0ssQ0FBQyxHQUFHTixTQUFTLENBQUN2QixNQUFNLEdBQUdxQixLQUFLLEdBQUcsQ0FBQztFQUNwQ0csR0FBRyxDQUFDL0MsQ0FBQyxHQUFHMkMsVUFBVSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7RUFDM0IsSUFBTXJCLENBQUMsR0FBRyxJQUFJdkQsbURBQU8sQ0FBQ2dGLEdBQUcsQ0FBQztFQUMxQixPQUFPekIsQ0FBQztBQUNaO0FBQ08sU0FBUytCLE9BQU8sQ0FBQy9CLENBQUMsRUFBRTtFQUN2QixJQUFNSixPQUFPLEdBQUcsRUFBRTtFQUNsQixJQUFNNEIsU0FBUyxHQUFHMUIsVUFBVSxDQUFDOEIsSUFBSSxDQUFDNUIsQ0FBQyxDQUFDMEIsQ0FBQyxDQUFDO0VBQ3RDLElBQU1mLFNBQVMsR0FBR2pCLFlBQVksQ0FBQzhCLFNBQVMsRUFBRTVCLE9BQU8sQ0FBQztFQUNsRCxJQUFNcUIsR0FBRyxHQUFHSCxZQUFZLENBQUNILFNBQVMsRUFBRSxDQUFDLENBQUM7RUFDdEMsSUFBTU8sR0FBRyxHQUFHSixZQUFZLENBQUNILFNBQVMsRUFBRSxDQUFDLENBQUM7RUFDdEMsSUFBTVEsSUFBSSxHQUFHTCxZQUFZLENBQUNILFNBQVMsRUFBRSxFQUFFLENBQUM7RUFDeEMsSUFBTXFCLE1BQU0sR0FBR2hDLENBQUMsQ0FBQ2hCLFFBQVEsRUFBRTtFQUMzQixJQUFNaUQsTUFBTSxHQUFHRCxNQUFNLENBQUNFLE9BQU8sQ0FBQyxHQUFHLENBQUM7RUFDbEMsSUFBTVosS0FBSyxHQUFHVyxNQUFNLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBR0QsTUFBTSxDQUFDL0IsTUFBTSxHQUFHZ0MsTUFBTSxHQUFHLENBQUM7RUFDekQsSUFBTWIsT0FBTyxHQUFJLENBQUNFLEtBQUssR0FBRyxJQUFJLEtBQUssRUFBRSxJQUFLdEIsQ0FBQyxDQUFDdEIsQ0FBQyxHQUFHLENBQUMsR0FBRyxVQUFVLEdBQUcsQ0FBQyxDQUFDO0VBQ25FLE9BQU8sQ0FBQ3VDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxJQUFJLEVBQUVDLE9BQU8sQ0FBQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL0NsaWVudC8uZmFibGUvZmFibGVfbW9kdWxlcy9mYWJsZS1saWJyYXJ5LjMuNy4yL0RlY2ltYWwuanM/YzU2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGVjaW1hbCBmcm9tIFwiLi9saWIvYmlnLmpzXCI7XG5pbXBvcnQgeyBGU2hhcnBSZWYgfSBmcm9tIFwiLi9UeXBlcy5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgRGVjaW1hbDtcbmV4cG9ydCBjb25zdCBnZXRfWmVybyA9IG5ldyBEZWNpbWFsKDApO1xuZXhwb3J0IGNvbnN0IGdldF9PbmUgPSBuZXcgRGVjaW1hbCgxKTtcbmV4cG9ydCBjb25zdCBnZXRfTWludXNPbmUgPSBuZXcgRGVjaW1hbCgtMSk7XG5leHBvcnQgY29uc3QgZ2V0X01heFZhbHVlID0gbmV3IERlY2ltYWwoXCI3OTIyODE2MjUxNDI2NDMzNzU5MzU0Mzk1MDMzNVwiKTtcbmV4cG9ydCBjb25zdCBnZXRfTWluVmFsdWUgPSBuZXcgRGVjaW1hbChcIi03OTIyODE2MjUxNDI2NDMzNzU5MzU0Mzk1MDMzNVwiKTtcbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlKHgsIHkpIHtcbiAgICByZXR1cm4geC5jbXAoeSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKHgsIHkpIHtcbiAgICByZXR1cm4gIXguY21wKHkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFicyh4KSB7XG4gICAgcmV0dXJuIHguYWJzKCk7XG59XG5leHBvcnQgZnVuY3Rpb24gcm91bmQoeCwgZGlnaXRzID0gMCkge1xuICAgIHJldHVybiB4LnJvdW5kKGRpZ2l0cywgMiAvKiBST1VORF9IQUxGX0VWRU4gKi8pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRydW5jYXRlKHgpIHtcbiAgICByZXR1cm4geC5yb3VuZCgwLCAwIC8qIFJPVU5EX0RPV04gKi8pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNlaWxpbmcoeCkge1xuICAgIHJldHVybiB4LnJvdW5kKDAsIHguY21wKDApID49IDAgPyAzIC8qIFJPVU5EX1VQICovIDogMCAvKiBST1VORF9ET1dOICovKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmbG9vcih4KSB7XG4gICAgcmV0dXJuIHgucm91bmQoMCwgeC5jbXAoMCkgPj0gMCA/IDAgLyogUk9VTkRfRE9XTiAqLyA6IDMgLyogUk9VTkRfVVAgKi8pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBvdyh4LCBuKSB7XG4gICAgcmV0dXJuIHgucG93KG4pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNxcnQoeCkge1xuICAgIHJldHVybiB4LnNxcnQoKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBvcF9BZGRpdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIHguYWRkKHkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG9wX1N1YnRyYWN0aW9uKHgsIHkpIHtcbiAgICByZXR1cm4geC5zdWIoeSk7XG59XG5leHBvcnQgZnVuY3Rpb24gb3BfTXVsdGlwbHkoeCwgeSkge1xuICAgIHJldHVybiB4Lm11bCh5KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBvcF9EaXZpc2lvbih4LCB5KSB7XG4gICAgcmV0dXJuIHguZGl2KHkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG9wX01vZHVsdXMoeCwgeSkge1xuICAgIHJldHVybiB4Lm1vZCh5KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBvcF9VbmFyeU5lZ2F0aW9uKHgpIHtcbiAgICBjb25zdCB4MiA9IG5ldyBEZWNpbWFsKHgpO1xuICAgIHgyLnMgPSAteDIucyB8fCAwO1xuICAgIHJldHVybiB4Mjtcbn1cbmV4cG9ydCBjb25zdCBhZGQgPSBvcF9BZGRpdGlvbjtcbmV4cG9ydCBjb25zdCBzdWJ0cmFjdCA9IG9wX1N1YnRyYWN0aW9uO1xuZXhwb3J0IGNvbnN0IG11bHRpcGx5ID0gb3BfTXVsdGlwbHk7XG5leHBvcnQgY29uc3QgZGl2aWRlID0gb3BfRGl2aXNpb247XG5leHBvcnQgY29uc3QgcmVtYWluZGVyID0gb3BfTW9kdWx1cztcbmV4cG9ydCBjb25zdCBuZWdhdGUgPSBvcF9VbmFyeU5lZ2F0aW9uO1xuZXhwb3J0IGZ1bmN0aW9uIHRvU3RyaW5nKHgpIHtcbiAgICByZXR1cm4geC50b1N0cmluZygpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRyeVBhcnNlKHN0ciwgZGVmVmFsdWUpIHtcbiAgICB0cnkge1xuICAgICAgICBkZWZWYWx1ZS5jb250ZW50cyA9IG5ldyBEZWNpbWFsKHN0ci50cmltKCkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2Uoc3RyKSB7XG4gICAgY29uc3QgZGVmVmFsdWUgPSBuZXcgRlNoYXJwUmVmKGdldF9aZXJvKTtcbiAgICBpZiAodHJ5UGFyc2Uoc3RyLCBkZWZWYWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIGRlZlZhbHVlLmNvbnRlbnRzO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW5wdXQgc3RyaW5nIHdhcyBub3QgaW4gYSBjb3JyZWN0IGZvcm1hdC5cIik7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHRvTnVtYmVyKHgpIHtcbiAgICByZXR1cm4gK3g7XG59XG5mdW5jdGlvbiBkZWNpbWFsVG9IZXgoZGVjLCBiaXRTaXplKSB7XG4gICAgY29uc3QgaGV4ID0gbmV3IFVpbnQ4QXJyYXkoYml0U2l6ZSAvIDQgfCAwKTtcbiAgICBsZXQgaGV4Q291bnQgPSAxO1xuICAgIGZvciAobGV0IGQgPSAwOyBkIDwgZGVjLmxlbmd0aDsgZCsrKSB7XG4gICAgICAgIGxldCB2YWx1ZSA9IGRlY1tkXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBoZXhDb3VudDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBkaWdpdCA9IGhleFtpXSAqIDEwICsgdmFsdWUgfCAwO1xuICAgICAgICAgICAgaGV4W2ldID0gZGlnaXQgJiAweEY7XG4gICAgICAgICAgICB2YWx1ZSA9IGRpZ2l0ID4+IDQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlICE9PSAwKSB7XG4gICAgICAgICAgICBoZXhbaGV4Q291bnQrK10gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaGV4LnNsaWNlKDAsIGhleENvdW50KTsgLy8gZGlnaXRzIGluIHJldmVyc2Ugb3JkZXJcbn1cbmZ1bmN0aW9uIGhleFRvRGVjaW1hbChoZXgsIGJpdFNpemUpIHtcbiAgICBjb25zdCBkZWMgPSBuZXcgVWludDhBcnJheShiaXRTaXplICogMzAxIC8gMTAwMCArIDEgfCAwKTtcbiAgICBsZXQgZGVjQ291bnQgPSAxO1xuICAgIGZvciAobGV0IGQgPSBoZXgubGVuZ3RoIC0gMTsgZCA+PSAwOyBkLS0pIHtcbiAgICAgICAgbGV0IGNhcnJ5ID0gaGV4W2RdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRlY0NvdW50OyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbCA9IGRlY1tpXSAqIDE2ICsgY2FycnkgfCAwO1xuICAgICAgICAgICAgZGVjW2ldID0gKHZhbCAlIDEwKSB8IDA7XG4gICAgICAgICAgICBjYXJyeSA9ICh2YWwgLyAxMCkgfCAwO1xuICAgICAgICB9XG4gICAgICAgIHdoaWxlIChjYXJyeSA+IDApIHtcbiAgICAgICAgICAgIGRlY1tkZWNDb3VudCsrXSA9IChjYXJyeSAlIDEwKSB8IDA7XG4gICAgICAgICAgICBjYXJyeSA9IChjYXJyeSAvIDEwKSB8IDA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRlYy5zbGljZSgwLCBkZWNDb3VudCk7IC8vIGRpZ2l0cyBpbiByZXZlcnNlIG9yZGVyXG59XG5mdW5jdGlvbiBzZXRJbnQzMkJpdHMoaGV4RGlnaXRzLCBiaXRzLCBvZmZzZXQpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDg7IGkrKykge1xuICAgICAgICBoZXhEaWdpdHNbb2Zmc2V0ICsgaV0gPSAoYml0cyA+PiAoaSAqIDQpKSAmIDB4RjtcbiAgICB9XG59XG5mdW5jdGlvbiBnZXRJbnQzMkJpdHMoaGV4RGlnaXRzLCBvZmZzZXQpIHtcbiAgICBsZXQgYml0cyA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA4OyBpKyspIHtcbiAgICAgICAgYml0cyA9IGJpdHMgfCAoaGV4RGlnaXRzW29mZnNldCArIGldIDw8IChpICogNCkpO1xuICAgIH1cbiAgICByZXR1cm4gYml0cztcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tSW50QXJyYXkoYml0cykge1xuICAgIHJldHVybiBmcm9tSW50cyhiaXRzWzBdLCBiaXRzWzFdLCBiaXRzWzJdLCBiaXRzWzNdKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tSW50cyhsb3csIG1pZCwgaGlnaCwgc2lnbkV4cCkge1xuICAgIGNvbnN0IGlzTmVnYXRpdmUgPSBzaWduRXhwIDwgMDtcbiAgICBjb25zdCBzY2FsZSA9IChzaWduRXhwID4+IDE2KSAmIDB4N0Y7XG4gICAgcmV0dXJuIGZyb21QYXJ0cyhsb3csIG1pZCwgaGlnaCwgaXNOZWdhdGl2ZSwgc2NhbGUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZyb21QYXJ0cyhsb3csIG1pZCwgaGlnaCwgaXNOZWdhdGl2ZSwgc2NhbGUpIHtcbiAgICBjb25zdCBiaXRTaXplID0gOTY7XG4gICAgY29uc3QgaGV4RGlnaXRzID0gbmV3IFVpbnQ4QXJyYXkoYml0U2l6ZSAvIDQpO1xuICAgIHNldEludDMyQml0cyhoZXhEaWdpdHMsIGxvdywgMCk7XG4gICAgc2V0SW50MzJCaXRzKGhleERpZ2l0cywgbWlkLCA4KTtcbiAgICBzZXRJbnQzMkJpdHMoaGV4RGlnaXRzLCBoaWdoLCAxNik7XG4gICAgY29uc3QgZGVjRGlnaXRzID0gaGV4VG9EZWNpbWFsKGhleERpZ2l0cywgYml0U2l6ZSk7XG4gICAgc2NhbGUgPSBzY2FsZSAmIDB4N0Y7XG4gICAgY29uc3QgYmlnID0gbmV3IERlY2ltYWwoMCk7XG4gICAgYmlnLmMgPSBBcnJheS5mcm9tKGRlY0RpZ2l0cy5yZXZlcnNlKCkpO1xuICAgIGJpZy5lID0gZGVjRGlnaXRzLmxlbmd0aCAtIHNjYWxlIC0gMTtcbiAgICBiaWcucyA9IGlzTmVnYXRpdmUgPyAtMSA6IDE7XG4gICAgY29uc3QgZCA9IG5ldyBEZWNpbWFsKGJpZyk7XG4gICAgcmV0dXJuIGQ7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0Qml0cyhkKSB7XG4gICAgY29uc3QgYml0U2l6ZSA9IDk2O1xuICAgIGNvbnN0IGRlY0RpZ2l0cyA9IFVpbnQ4QXJyYXkuZnJvbShkLmMpO1xuICAgIGNvbnN0IGhleERpZ2l0cyA9IGRlY2ltYWxUb0hleChkZWNEaWdpdHMsIGJpdFNpemUpO1xuICAgIGNvbnN0IGxvdyA9IGdldEludDMyQml0cyhoZXhEaWdpdHMsIDApO1xuICAgIGNvbnN0IG1pZCA9IGdldEludDMyQml0cyhoZXhEaWdpdHMsIDgpO1xuICAgIGNvbnN0IGhpZ2ggPSBnZXRJbnQzMkJpdHMoaGV4RGlnaXRzLCAxNik7XG4gICAgY29uc3QgZGVjU3RyID0gZC50b1N0cmluZygpO1xuICAgIGNvbnN0IGRvdFBvcyA9IGRlY1N0ci5pbmRleE9mKFwiLlwiKTtcbiAgICBjb25zdCBzY2FsZSA9IGRvdFBvcyA8IDAgPyAwIDogZGVjU3RyLmxlbmd0aCAtIGRvdFBvcyAtIDE7XG4gICAgY29uc3Qgc2lnbkV4cCA9ICgoc2NhbGUgJiAweDdGKSA8PCAxNikgfCAoZC5zIDwgMCA/IDB4ODAwMDAwMDAgOiAwKTtcbiAgICByZXR1cm4gW2xvdywgbWlkLCBoaWdoLCBzaWduRXhwXTtcbn1cbi8vIGV4cG9ydCBmdW5jdGlvbiBtYWtlUmFuZ2VTdGVwRnVuY3Rpb24oc3RlcDogRGVjaW1hbCwgbGFzdDogRGVjaW1hbCkge1xuLy8gICBjb25zdCBzdGVwQ29tcGFyZWRXaXRoWmVybyA9IHN0ZXAuY21wKGdldF9aZXJvKTtcbi8vICAgaWYgKHN0ZXBDb21wYXJlZFdpdGhaZXJvID09PSAwKSB7XG4vLyAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0ZXAgb2YgYSByYW5nZSBjYW5ub3QgYmUgemVyb1wiKTtcbi8vICAgfVxuLy8gICBjb25zdCBzdGVwR3JlYXRlclRoYW5aZXJvID0gc3RlcENvbXBhcmVkV2l0aFplcm8gPiAwO1xuLy8gICByZXR1cm4gKHg6IERlY2ltYWwpID0+IHtcbi8vICAgICBjb25zdCBjb21wYXJlZFdpdGhMYXN0ID0geC5jbXAobGFzdCk7XG4vLyAgICAgaWYgKChzdGVwR3JlYXRlclRoYW5aZXJvICYmIGNvbXBhcmVkV2l0aExhc3QgPD0gMClcbi8vICAgICAgIHx8ICghc3RlcEdyZWF0ZXJUaGFuWmVybyAmJiBjb21wYXJlZFdpdGhMYXN0ID49IDApKSB7XG4vLyAgICAgICByZXR1cm4gW3gsIG9wX0FkZGl0aW9uKHgsIHN0ZXApXTtcbi8vICAgICB9IGVsc2Uge1xuLy8gICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbi8vICAgICB9XG4vLyAgIH07XG4vLyB9XG4iXSwibmFtZXMiOlsiRGVjaW1hbCIsIkZTaGFycFJlZiIsImdldF9aZXJvIiwiZ2V0X09uZSIsImdldF9NaW51c09uZSIsImdldF9NYXhWYWx1ZSIsImdldF9NaW5WYWx1ZSIsImNvbXBhcmUiLCJ4IiwieSIsImNtcCIsImVxdWFscyIsImFicyIsInJvdW5kIiwiZGlnaXRzIiwidHJ1bmNhdGUiLCJjZWlsaW5nIiwiZmxvb3IiLCJwb3ciLCJuIiwic3FydCIsIm9wX0FkZGl0aW9uIiwiYWRkIiwib3BfU3VidHJhY3Rpb24iLCJzdWIiLCJvcF9NdWx0aXBseSIsIm11bCIsIm9wX0RpdmlzaW9uIiwiZGl2Iiwib3BfTW9kdWx1cyIsIm1vZCIsIm9wX1VuYXJ5TmVnYXRpb24iLCJ4MiIsInMiLCJzdWJ0cmFjdCIsIm11bHRpcGx5IiwiZGl2aWRlIiwicmVtYWluZGVyIiwibmVnYXRlIiwidG9TdHJpbmciLCJ0cnlQYXJzZSIsInN0ciIsImRlZlZhbHVlIiwiY29udGVudHMiLCJ0cmltIiwiX2EiLCJwYXJzZSIsIkVycm9yIiwidG9OdW1iZXIiLCJkZWNpbWFsVG9IZXgiLCJkZWMiLCJiaXRTaXplIiwiaGV4IiwiVWludDhBcnJheSIsImhleENvdW50IiwiZCIsImxlbmd0aCIsInZhbHVlIiwiaSIsImRpZ2l0Iiwic2xpY2UiLCJoZXhUb0RlY2ltYWwiLCJkZWNDb3VudCIsImNhcnJ5IiwidmFsIiwic2V0SW50MzJCaXRzIiwiaGV4RGlnaXRzIiwiYml0cyIsIm9mZnNldCIsImdldEludDMyQml0cyIsImZyb21JbnRBcnJheSIsImZyb21JbnRzIiwibG93IiwibWlkIiwiaGlnaCIsInNpZ25FeHAiLCJpc05lZ2F0aXZlIiwic2NhbGUiLCJmcm9tUGFydHMiLCJkZWNEaWdpdHMiLCJiaWciLCJjIiwiQXJyYXkiLCJmcm9tIiwicmV2ZXJzZSIsImUiLCJnZXRCaXRzIiwiZGVjU3RyIiwiZG90UG9zIiwiaW5kZXhPZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Decimal.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Double.js":
/*!***********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Double.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tryParse\": () => (/* binding */ tryParse),\n/* harmony export */   \"parse\": () => (/* binding */ parse),\n/* harmony export */   \"isInfinity\": () => (/* binding */ isInfinity)\n/* harmony export */ });\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n\nfunction tryParse(str, defValue) {\n  // TODO: test if value is valid and in range\n  if (str != null && /\\S/.test(str)) {\n    var v = +str.replace(\"_\", \"\");\n    if (!Number.isNaN(v)) {\n      defValue.contents = v;\n      return true;\n    }\n  }\n  return false;\n}\nfunction parse(str) {\n  var defValue = new _Types_js__WEBPACK_IMPORTED_MODULE_0__.FSharpRef(0);\n  if (tryParse(str, defValue)) {\n    return defValue.contents;\n  } else {\n    throw new Error(\"Input string was not in a correct format.\");\n  }\n}\n// JS Number.isFinite function evals false for NaN\nfunction isInfinity(x) {\n  return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL2ZhYmxlLWxpYnJhcnkuMy43LjIvRG91YmxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBdUM7QUFDaEMsU0FBU0MsUUFBUSxDQUFDQyxHQUFHLEVBQUVDLFFBQVEsRUFBRTtFQUNwQztFQUNBLElBQUlELEdBQUcsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDRSxJQUFJLENBQUNGLEdBQUcsQ0FBQyxFQUFFO0lBQy9CLElBQU1HLENBQUMsR0FBRyxDQUFDSCxHQUFHLENBQUNJLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO0lBQy9CLElBQUksQ0FBQ0MsTUFBTSxDQUFDQyxLQUFLLENBQUNILENBQUMsQ0FBQyxFQUFFO01BQ2xCRixRQUFRLENBQUNNLFFBQVEsR0FBR0osQ0FBQztNQUNyQixPQUFPLElBQUk7SUFDZjtFQUNKO0VBQ0EsT0FBTyxLQUFLO0FBQ2hCO0FBQ08sU0FBU0ssS0FBSyxDQUFDUixHQUFHLEVBQUU7RUFDdkIsSUFBTUMsUUFBUSxHQUFHLElBQUlILGdEQUFTLENBQUMsQ0FBQyxDQUFDO0VBQ2pDLElBQUlDLFFBQVEsQ0FBQ0MsR0FBRyxFQUFFQyxRQUFRLENBQUMsRUFBRTtJQUN6QixPQUFPQSxRQUFRLENBQUNNLFFBQVE7RUFDNUIsQ0FBQyxNQUNJO0lBQ0QsTUFBTSxJQUFJRSxLQUFLLENBQUMsMkNBQTJDLENBQUM7RUFDaEU7QUFDSjtBQUNBO0FBQ08sU0FBU0MsVUFBVSxDQUFDQyxDQUFDLEVBQUU7RUFDMUIsT0FBT0EsQ0FBQyxLQUFLTixNQUFNLENBQUNPLGlCQUFpQixJQUFJRCxDQUFDLEtBQUtOLE1BQU0sQ0FBQ1EsaUJBQWlCO0FBQzNFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL0NsaWVudC8uZmFibGUvZmFibGVfbW9kdWxlcy9mYWJsZS1saWJyYXJ5LjMuNy4yL0RvdWJsZS5qcz9lNTNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZTaGFycFJlZiB9IGZyb20gXCIuL1R5cGVzLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gdHJ5UGFyc2Uoc3RyLCBkZWZWYWx1ZSkge1xuICAgIC8vIFRPRE86IHRlc3QgaWYgdmFsdWUgaXMgdmFsaWQgYW5kIGluIHJhbmdlXG4gICAgaWYgKHN0ciAhPSBudWxsICYmIC9cXFMvLnRlc3Qoc3RyKSkge1xuICAgICAgICBjb25zdCB2ID0gK3N0ci5yZXBsYWNlKFwiX1wiLCBcIlwiKTtcbiAgICAgICAgaWYgKCFOdW1iZXIuaXNOYU4odikpIHtcbiAgICAgICAgICAgIGRlZlZhbHVlLmNvbnRlbnRzID0gdjtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZShzdHIpIHtcbiAgICBjb25zdCBkZWZWYWx1ZSA9IG5ldyBGU2hhcnBSZWYoMCk7XG4gICAgaWYgKHRyeVBhcnNlKHN0ciwgZGVmVmFsdWUpKSB7XG4gICAgICAgIHJldHVybiBkZWZWYWx1ZS5jb250ZW50cztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIklucHV0IHN0cmluZyB3YXMgbm90IGluIGEgY29ycmVjdCBmb3JtYXQuXCIpO1xuICAgIH1cbn1cbi8vIEpTIE51bWJlci5pc0Zpbml0ZSBmdW5jdGlvbiBldmFscyBmYWxzZSBmb3IgTmFOXG5leHBvcnQgZnVuY3Rpb24gaXNJbmZpbml0eSh4KSB7XG4gICAgcmV0dXJuIHggPT09IE51bWJlci5QT1NJVElWRV9JTkZJTklUWSB8fCB4ID09PSBOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFk7XG59XG4iXSwibmFtZXMiOlsiRlNoYXJwUmVmIiwidHJ5UGFyc2UiLCJzdHIiLCJkZWZWYWx1ZSIsInRlc3QiLCJ2IiwicmVwbGFjZSIsIk51bWJlciIsImlzTmFOIiwiY29udGVudHMiLCJwYXJzZSIsIkVycm9yIiwiaXNJbmZpbml0eSIsIngiLCJQT1NJVElWRV9JTkZJTklUWSIsIk5FR0FUSVZFX0lORklOSVRZIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Double.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/FSharp.Collections.js":
/*!***********************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/FSharp.Collections.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HashIdentity_FromFunctions\": () => (/* binding */ HashIdentity_FromFunctions),\n/* harmony export */   \"HashIdentity_Structural\": () => (/* binding */ HashIdentity_Structural),\n/* harmony export */   \"HashIdentity_Reference\": () => (/* binding */ HashIdentity_Reference),\n/* harmony export */   \"ComparisonIdentity_FromFunction\": () => (/* binding */ ComparisonIdentity_FromFunction),\n/* harmony export */   \"ComparisonIdentity_Structural\": () => (/* binding */ ComparisonIdentity_Structural)\n/* harmony export */ });\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n\nfunction HashIdentity_FromFunctions(hash, eq) {\n  return {\n    Equals: function Equals(x, y) {\n      return eq(x, y);\n    },\n    GetHashCode: function GetHashCode(x_1) {\n      return hash(x_1);\n    }\n  };\n}\nfunction HashIdentity_Structural() {\n  return HashIdentity_FromFunctions(_Util_js__WEBPACK_IMPORTED_MODULE_0__.structuralHash, _Util_js__WEBPACK_IMPORTED_MODULE_0__.equals);\n}\nfunction HashIdentity_Reference() {\n  return HashIdentity_FromFunctions(_Util_js__WEBPACK_IMPORTED_MODULE_0__.physicalHash, function (e1, e2) {\n    return e1 === e2;\n  });\n}\nfunction ComparisonIdentity_FromFunction(comparer) {\n  return {\n    Compare: function Compare(x, y) {\n      return comparer(x, y);\n    }\n  };\n}\nfunction ComparisonIdentity_Structural() {\n  return ComparisonIdentity_FromFunction(_Util_js__WEBPACK_IMPORTED_MODULE_0__.compare);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL2ZhYmxlLWxpYnJhcnkuMy43LjIvRlNoYXJwLkNvbGxlY3Rpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwRTtBQUVuRSxTQUFTSSwwQkFBMEIsQ0FBQ0MsSUFBSSxFQUFFQyxFQUFFLEVBQUU7RUFDakQsT0FBTztJQUNIQyxNQUFNLGtCQUFDQyxDQUFDLEVBQUVDLENBQUMsRUFBRTtNQUNULE9BQU9ILEVBQUUsQ0FBQ0UsQ0FBQyxFQUFFQyxDQUFDLENBQUM7SUFDbkIsQ0FBQztJQUNEQyxXQUFXLHVCQUFDQyxHQUFHLEVBQUU7TUFDYixPQUFPTixJQUFJLENBQUNNLEdBQUcsQ0FBQztJQUNwQjtFQUNKLENBQUM7QUFDTDtBQUVPLFNBQVNDLHVCQUF1QixHQUFHO0VBQ3RDLE9BQU9SLDBCQUEwQixDQUFDRCxvREFBYyxFQUFFRCw0Q0FBTSxDQUFDO0FBQzdEO0FBRU8sU0FBU1csc0JBQXNCLEdBQUc7RUFDckMsT0FBT1QsMEJBQTBCLENBQUNILGtEQUFZLEVBQUUsVUFBQ2EsRUFBRSxFQUFFQyxFQUFFO0lBQUEsT0FBTUQsRUFBRSxLQUFLQyxFQUFFO0VBQUEsQ0FBQyxDQUFDO0FBQzVFO0FBRU8sU0FBU0MsK0JBQStCLENBQUNDLFFBQVEsRUFBRTtFQUN0RCxPQUFPO0lBQ0hDLE9BQU8sbUJBQUNWLENBQUMsRUFBRUMsQ0FBQyxFQUFFO01BQ1YsT0FBT1EsUUFBUSxDQUFDVCxDQUFDLEVBQUVDLENBQUMsQ0FBQztJQUN6QjtFQUNKLENBQUM7QUFDTDtBQUVPLFNBQVNVLDZCQUE2QixHQUFHO0VBQzVDLE9BQU9ILCtCQUErQixDQUFDaEIsNkNBQU8sQ0FBQztBQUNuRCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9DbGllbnQvLmZhYmxlL2ZhYmxlX21vZHVsZXMvZmFibGUtbGlicmFyeS4zLjcuMi9GU2hhcnAuQ29sbGVjdGlvbnMuanM/YjlmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb21wYXJlLCBwaHlzaWNhbEhhc2gsIGVxdWFscywgc3RydWN0dXJhbEhhc2ggfSBmcm9tIFwiLi9VdGlsLmpzXCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gSGFzaElkZW50aXR5X0Zyb21GdW5jdGlvbnMoaGFzaCwgZXEpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgRXF1YWxzKHgsIHkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGVxKHgsIHkpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgR2V0SGFzaENvZGUoeF8xKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBoYXNoKHhfMSk7XHJcbiAgICAgICAgfSxcclxuICAgIH07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBIYXNoSWRlbnRpdHlfU3RydWN0dXJhbCgpIHtcclxuICAgIHJldHVybiBIYXNoSWRlbnRpdHlfRnJvbUZ1bmN0aW9ucyhzdHJ1Y3R1cmFsSGFzaCwgZXF1YWxzKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIEhhc2hJZGVudGl0eV9SZWZlcmVuY2UoKSB7XHJcbiAgICByZXR1cm4gSGFzaElkZW50aXR5X0Zyb21GdW5jdGlvbnMocGh5c2ljYWxIYXNoLCAoZTEsIGUyKSA9PiAoZTEgPT09IGUyKSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBDb21wYXJpc29uSWRlbnRpdHlfRnJvbUZ1bmN0aW9uKGNvbXBhcmVyKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIENvbXBhcmUoeCwgeSkge1xyXG4gICAgICAgICAgICByZXR1cm4gY29tcGFyZXIoeCwgeSk7XHJcbiAgICAgICAgfSxcclxuICAgIH07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBDb21wYXJpc29uSWRlbnRpdHlfU3RydWN0dXJhbCgpIHtcclxuICAgIHJldHVybiBDb21wYXJpc29uSWRlbnRpdHlfRnJvbUZ1bmN0aW9uKGNvbXBhcmUpO1xyXG59XHJcblxyXG4iXSwibmFtZXMiOlsiY29tcGFyZSIsInBoeXNpY2FsSGFzaCIsImVxdWFscyIsInN0cnVjdHVyYWxIYXNoIiwiSGFzaElkZW50aXR5X0Zyb21GdW5jdGlvbnMiLCJoYXNoIiwiZXEiLCJFcXVhbHMiLCJ4IiwieSIsIkdldEhhc2hDb2RlIiwieF8xIiwiSGFzaElkZW50aXR5X1N0cnVjdHVyYWwiLCJIYXNoSWRlbnRpdHlfUmVmZXJlbmNlIiwiZTEiLCJlMiIsIkNvbXBhcmlzb25JZGVudGl0eV9Gcm9tRnVuY3Rpb24iLCJjb21wYXJlciIsIkNvbXBhcmUiLCJDb21wYXJpc29uSWRlbnRpdHlfU3RydWN0dXJhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/FSharp.Collections.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/FSharp.Core.js":
/*!****************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/FSharp.Core.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LanguagePrimitives_GenericEqualityComparer\": () => (/* binding */ LanguagePrimitives_GenericEqualityComparer),\n/* harmony export */   \"LanguagePrimitives_GenericEqualityERComparer\": () => (/* binding */ LanguagePrimitives_GenericEqualityERComparer),\n/* harmony export */   \"LanguagePrimitives_FastGenericComparer\": () => (/* binding */ LanguagePrimitives_FastGenericComparer),\n/* harmony export */   \"LanguagePrimitives_FastGenericComparerFromTable\": () => (/* binding */ LanguagePrimitives_FastGenericComparerFromTable),\n/* harmony export */   \"LanguagePrimitives_FastGenericEqualityComparer\": () => (/* binding */ LanguagePrimitives_FastGenericEqualityComparer),\n/* harmony export */   \"LanguagePrimitives_FastGenericEqualityComparerFromTable\": () => (/* binding */ LanguagePrimitives_FastGenericEqualityComparerFromTable),\n/* harmony export */   \"Operators_Failure\": () => (/* binding */ Operators_Failure),\n/* harmony export */   \"Operators_FailurePattern\": () => (/* binding */ Operators_FailurePattern),\n/* harmony export */   \"Operators_NullArg\": () => (/* binding */ Operators_NullArg),\n/* harmony export */   \"Operators_Using\": () => (/* binding */ Operators_Using),\n/* harmony export */   \"Operators_Lock\": () => (/* binding */ Operators_Lock),\n/* harmony export */   \"ExtraTopLevelOperators_LazyPattern\": () => (/* binding */ ExtraTopLevelOperators_LazyPattern),\n/* harmony export */   \"PrintfModule_PrintFormatToStringBuilderThen\": () => (/* binding */ PrintfModule_PrintFormatToStringBuilderThen),\n/* harmony export */   \"PrintfModule_PrintFormatToStringBuilder\": () => (/* binding */ PrintfModule_PrintFormatToStringBuilder)\n/* harmony export */ });\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _FSharp_Collections_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FSharp.Collections.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/FSharp.Collections.js\");\n/* harmony import */ var _System_Text_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./System.Text.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/System.Text.js\");\nvar _LanguagePrimitives_G, _LanguagePrimitives_G2;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\nvar LanguagePrimitives_GenericEqualityComparer = (_LanguagePrimitives_G = {}, _defineProperty(_LanguagePrimitives_G, \"System.Collections.IEqualityComparer.Equals541DA560\", function SystemCollectionsIEqualityComparerEquals541DA560(x, y) {\n  return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.equals)(x, y);\n}), _defineProperty(_LanguagePrimitives_G, \"System.Collections.IEqualityComparer.GetHashCode4E60E31B\", function SystemCollectionsIEqualityComparerGetHashCode4E60E31B(x_1) {\n  return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.structuralHash)(x_1);\n}), _LanguagePrimitives_G);\nvar LanguagePrimitives_GenericEqualityERComparer = (_LanguagePrimitives_G2 = {}, _defineProperty(_LanguagePrimitives_G2, \"System.Collections.IEqualityComparer.Equals541DA560\", function SystemCollectionsIEqualityComparerEquals541DA560(x, y) {\n  return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.equals)(x, y);\n}), _defineProperty(_LanguagePrimitives_G2, \"System.Collections.IEqualityComparer.GetHashCode4E60E31B\", function SystemCollectionsIEqualityComparerGetHashCode4E60E31B(x_1) {\n  return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.structuralHash)(x_1);\n}), _LanguagePrimitives_G2);\nfunction LanguagePrimitives_FastGenericComparer() {\n  return (0,_FSharp_Collections_js__WEBPACK_IMPORTED_MODULE_1__.ComparisonIdentity_Structural)();\n}\nfunction LanguagePrimitives_FastGenericComparerFromTable() {\n  return (0,_FSharp_Collections_js__WEBPACK_IMPORTED_MODULE_1__.ComparisonIdentity_Structural)();\n}\nfunction LanguagePrimitives_FastGenericEqualityComparer() {\n  return (0,_FSharp_Collections_js__WEBPACK_IMPORTED_MODULE_1__.HashIdentity_Structural)();\n}\nfunction LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n  return (0,_FSharp_Collections_js__WEBPACK_IMPORTED_MODULE_1__.HashIdentity_Structural)();\n}\nfunction Operators_Failure(message) {\n  return new Error(message);\n}\nfunction Operators_FailurePattern(exn) {\n  return exn.message;\n}\nfunction Operators_NullArg(x) {\n  throw new Error(x);\n}\nfunction Operators_Using(resource, action) {\n  try {\n    return action(resource);\n  } finally {\n    if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.equals)(resource, null)) {} else {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(resource);\n    }\n  }\n}\nfunction Operators_Lock(_lockObj, action) {\n  return action();\n}\nfunction ExtraTopLevelOperators_LazyPattern(input) {\n  return input.Value;\n}\nfunction PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n  return format.cont(function (s) {\n    (0,_System_Text_js__WEBPACK_IMPORTED_MODULE_2__.StringBuilder__Append_Z721C83C5)(builder, s);\n    return continuation();\n  });\n}\nfunction PrintfModule_PrintFormatToStringBuilder(builder, format) {\n  return PrintfModule_PrintFormatToStringBuilderThen(function () {}, builder, format);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL2ZhYmxlLWxpYnJhcnkuMy43LjIvRlNoYXJwLkNvcmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFnRTtBQUNpQztBQUM5QjtBQUU1RCxJQUFNTSwwQ0FBMEMsdUVBQ2xELHFEQUFxRCw0REFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUU7RUFDMUQsT0FBT04sZ0RBQU0sQ0FBQ0ssQ0FBQyxFQUFFQyxDQUFDLENBQUM7QUFDdkIsQ0FBQywwQ0FDQSwwREFBMEQsaUVBQUVDLEdBQUcsRUFBRTtFQUM5RCxPQUFPUix3REFBYyxDQUFDUSxHQUFHLENBQUM7QUFDOUIsQ0FBQyx5QkFDSjtBQUVNLElBQU1DLDRDQUE0Qyx5RUFDcEQscURBQXFELDREQUFFSCxDQUFDLEVBQUVDLENBQUMsRUFBRTtFQUMxRCxPQUFPTixnREFBTSxDQUFDSyxDQUFDLEVBQUVDLENBQUMsQ0FBQztBQUN2QixDQUFDLDJDQUNBLDBEQUEwRCxpRUFBRUMsR0FBRyxFQUFFO0VBQzlELE9BQU9SLHdEQUFjLENBQUNRLEdBQUcsQ0FBQztBQUM5QixDQUFDLDBCQUNKO0FBRU0sU0FBU0Usc0NBQXNDLEdBQUc7RUFDckQsT0FBT1AscUZBQTZCLEVBQUU7QUFDMUM7QUFFTyxTQUFTUSwrQ0FBK0MsR0FBRztFQUM5RCxPQUFPUixxRkFBNkIsRUFBRTtBQUMxQztBQUVPLFNBQVNTLDhDQUE4QyxHQUFHO0VBQzdELE9BQU9WLCtFQUF1QixFQUFFO0FBQ3BDO0FBRU8sU0FBU1csdURBQXVELEdBQUc7RUFDdEUsT0FBT1gsK0VBQXVCLEVBQUU7QUFDcEM7QUFFTyxTQUFTWSxpQkFBaUIsQ0FBQ0MsT0FBTyxFQUFFO0VBQ3ZDLE9BQU8sSUFBSUMsS0FBSyxDQUFDRCxPQUFPLENBQUM7QUFDN0I7QUFFTyxTQUFTRSx3QkFBd0IsQ0FBQ0MsR0FBRyxFQUFFO0VBQzFDLE9BQU9BLEdBQUcsQ0FBQ0gsT0FBTztBQUN0QjtBQUVPLFNBQVNJLGlCQUFpQixDQUFDYixDQUFDLEVBQUU7RUFDakMsTUFBTyxJQUFJVSxLQUFLLENBQUNWLENBQUMsQ0FBQztBQUN2QjtBQUVPLFNBQVNjLGVBQWUsQ0FBQ0MsUUFBUSxFQUFFQyxNQUFNLEVBQUU7RUFDOUMsSUFBSTtJQUNBLE9BQU9BLE1BQU0sQ0FBQ0QsUUFBUSxDQUFDO0VBQzNCLENBQUMsU0FDTztJQUNKLElBQUlwQixnREFBTSxDQUFDb0IsUUFBUSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQzVCLENBQUMsTUFDSTtNQUNEdEIscURBQVcsQ0FBQ3NCLFFBQVEsQ0FBQztJQUN6QjtFQUNKO0FBQ0o7QUFFTyxTQUFTRSxjQUFjLENBQUNDLFFBQVEsRUFBRUYsTUFBTSxFQUFFO0VBQzdDLE9BQU9BLE1BQU0sRUFBRTtBQUNuQjtBQUVPLFNBQVNHLGtDQUFrQyxDQUFDQyxLQUFLLEVBQUU7RUFDdEQsT0FBT0EsS0FBSyxDQUFDQyxLQUFLO0FBQ3RCO0FBRU8sU0FBU0MsMkNBQTJDLENBQUNDLFlBQVksRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUU7RUFDdkYsT0FBT0EsTUFBTSxDQUFDQyxJQUFJLENBQUMsVUFBQ0MsQ0FBQyxFQUFLO0lBQ3RCN0IsZ0ZBQStCLENBQUMwQixPQUFPLEVBQUVHLENBQUMsQ0FBQztJQUMzQyxPQUFPSixZQUFZLEVBQUU7RUFDekIsQ0FBQyxDQUFDO0FBQ047QUFFTyxTQUFTSyx1Q0FBdUMsQ0FBQ0osT0FBTyxFQUFFQyxNQUFNLEVBQUU7RUFDckUsT0FBT0gsMkNBQTJDLENBQUMsWUFBTSxDQUN6RCxDQUFDLEVBQUVFLE9BQU8sRUFBRUMsTUFBTSxDQUFDO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL0NsaWVudC8uZmFibGUvZmFibGVfbW9kdWxlcy9mYWJsZS1saWJyYXJ5LjMuNy4yL0ZTaGFycC5Db3JlLmpzPzMzYjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGlzcG9zZVNhZmUsIHN0cnVjdHVyYWxIYXNoLCBlcXVhbHMgfSBmcm9tIFwiLi9VdGlsLmpzXCI7XHJcbmltcG9ydCB7IEhhc2hJZGVudGl0eV9TdHJ1Y3R1cmFsLCBDb21wYXJpc29uSWRlbnRpdHlfU3RydWN0dXJhbCB9IGZyb20gXCIuL0ZTaGFycC5Db2xsZWN0aW9ucy5qc1wiO1xyXG5pbXBvcnQgeyBTdHJpbmdCdWlsZGVyX19BcHBlbmRfWjcyMUM4M0M1IH0gZnJvbSBcIi4vU3lzdGVtLlRleHQuanNcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBMYW5ndWFnZVByaW1pdGl2ZXNfR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXIgPSB7XHJcbiAgICBbXCJTeXN0ZW0uQ29sbGVjdGlvbnMuSUVxdWFsaXR5Q29tcGFyZXIuRXF1YWxzNTQxREE1NjBcIl0oeCwgeSkge1xyXG4gICAgICAgIHJldHVybiBlcXVhbHMoeCwgeSk7XHJcbiAgICB9LFxyXG4gICAgW1wiU3lzdGVtLkNvbGxlY3Rpb25zLklFcXVhbGl0eUNvbXBhcmVyLkdldEhhc2hDb2RlNEU2MEUzMUJcIl0oeF8xKSB7XHJcbiAgICAgICAgcmV0dXJuIHN0cnVjdHVyYWxIYXNoKHhfMSk7XHJcbiAgICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IExhbmd1YWdlUHJpbWl0aXZlc19HZW5lcmljRXF1YWxpdHlFUkNvbXBhcmVyID0ge1xyXG4gICAgW1wiU3lzdGVtLkNvbGxlY3Rpb25zLklFcXVhbGl0eUNvbXBhcmVyLkVxdWFsczU0MURBNTYwXCJdKHgsIHkpIHtcclxuICAgICAgICByZXR1cm4gZXF1YWxzKHgsIHkpO1xyXG4gICAgfSxcclxuICAgIFtcIlN5c3RlbS5Db2xsZWN0aW9ucy5JRXF1YWxpdHlDb21wYXJlci5HZXRIYXNoQ29kZTRFNjBFMzFCXCJdKHhfMSkge1xyXG4gICAgICAgIHJldHVybiBzdHJ1Y3R1cmFsSGFzaCh4XzEpO1xyXG4gICAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBMYW5ndWFnZVByaW1pdGl2ZXNfRmFzdEdlbmVyaWNDb21wYXJlcigpIHtcclxuICAgIHJldHVybiBDb21wYXJpc29uSWRlbnRpdHlfU3RydWN0dXJhbCgpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gTGFuZ3VhZ2VQcmltaXRpdmVzX0Zhc3RHZW5lcmljQ29tcGFyZXJGcm9tVGFibGUoKSB7XHJcbiAgICByZXR1cm4gQ29tcGFyaXNvbklkZW50aXR5X1N0cnVjdHVyYWwoKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIExhbmd1YWdlUHJpbWl0aXZlc19GYXN0R2VuZXJpY0VxdWFsaXR5Q29tcGFyZXIoKSB7XHJcbiAgICByZXR1cm4gSGFzaElkZW50aXR5X1N0cnVjdHVyYWwoKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIExhbmd1YWdlUHJpbWl0aXZlc19GYXN0R2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJGcm9tVGFibGUoKSB7XHJcbiAgICByZXR1cm4gSGFzaElkZW50aXR5X1N0cnVjdHVyYWwoKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIE9wZXJhdG9yc19GYWlsdXJlKG1lc3NhZ2UpIHtcclxuICAgIHJldHVybiBuZXcgRXJyb3IobWVzc2FnZSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBPcGVyYXRvcnNfRmFpbHVyZVBhdHRlcm4oZXhuKSB7XHJcbiAgICByZXR1cm4gZXhuLm1lc3NhZ2U7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBPcGVyYXRvcnNfTnVsbEFyZyh4KSB7XHJcbiAgICB0aHJvdyAobmV3IEVycm9yKHgpKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIE9wZXJhdG9yc19Vc2luZyhyZXNvdXJjZSwgYWN0aW9uKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBhY3Rpb24ocmVzb3VyY2UpO1xyXG4gICAgfVxyXG4gICAgZmluYWxseSB7XHJcbiAgICAgICAgaWYgKGVxdWFscyhyZXNvdXJjZSwgbnVsbCkpIHtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGRpc3Bvc2VTYWZlKHJlc291cmNlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBPcGVyYXRvcnNfTG9jayhfbG9ja09iaiwgYWN0aW9uKSB7XHJcbiAgICByZXR1cm4gYWN0aW9uKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBFeHRyYVRvcExldmVsT3BlcmF0b3JzX0xhenlQYXR0ZXJuKGlucHV0KSB7XHJcbiAgICByZXR1cm4gaW5wdXQuVmFsdWU7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBQcmludGZNb2R1bGVfUHJpbnRGb3JtYXRUb1N0cmluZ0J1aWxkZXJUaGVuKGNvbnRpbnVhdGlvbiwgYnVpbGRlciwgZm9ybWF0KSB7XHJcbiAgICByZXR1cm4gZm9ybWF0LmNvbnQoKHMpID0+IHtcclxuICAgICAgICBTdHJpbmdCdWlsZGVyX19BcHBlbmRfWjcyMUM4M0M1KGJ1aWxkZXIsIHMpO1xyXG4gICAgICAgIHJldHVybiBjb250aW51YXRpb24oKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gUHJpbnRmTW9kdWxlX1ByaW50Rm9ybWF0VG9TdHJpbmdCdWlsZGVyKGJ1aWxkZXIsIGZvcm1hdCkge1xyXG4gICAgcmV0dXJuIFByaW50Zk1vZHVsZV9QcmludEZvcm1hdFRvU3RyaW5nQnVpbGRlclRoZW4oKCkgPT4ge1xyXG4gICAgfSwgYnVpbGRlciwgZm9ybWF0KTtcclxufVxyXG5cclxuIl0sIm5hbWVzIjpbImRpc3Bvc2VTYWZlIiwic3RydWN0dXJhbEhhc2giLCJlcXVhbHMiLCJIYXNoSWRlbnRpdHlfU3RydWN0dXJhbCIsIkNvbXBhcmlzb25JZGVudGl0eV9TdHJ1Y3R1cmFsIiwiU3RyaW5nQnVpbGRlcl9fQXBwZW5kX1o3MjFDODNDNSIsIkxhbmd1YWdlUHJpbWl0aXZlc19HZW5lcmljRXF1YWxpdHlDb21wYXJlciIsIngiLCJ5IiwieF8xIiwiTGFuZ3VhZ2VQcmltaXRpdmVzX0dlbmVyaWNFcXVhbGl0eUVSQ29tcGFyZXIiLCJMYW5ndWFnZVByaW1pdGl2ZXNfRmFzdEdlbmVyaWNDb21wYXJlciIsIkxhbmd1YWdlUHJpbWl0aXZlc19GYXN0R2VuZXJpY0NvbXBhcmVyRnJvbVRhYmxlIiwiTGFuZ3VhZ2VQcmltaXRpdmVzX0Zhc3RHZW5lcmljRXF1YWxpdHlDb21wYXJlciIsIkxhbmd1YWdlUHJpbWl0aXZlc19GYXN0R2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJGcm9tVGFibGUiLCJPcGVyYXRvcnNfRmFpbHVyZSIsIm1lc3NhZ2UiLCJFcnJvciIsIk9wZXJhdG9yc19GYWlsdXJlUGF0dGVybiIsImV4biIsIk9wZXJhdG9yc19OdWxsQXJnIiwiT3BlcmF0b3JzX1VzaW5nIiwicmVzb3VyY2UiLCJhY3Rpb24iLCJPcGVyYXRvcnNfTG9jayIsIl9sb2NrT2JqIiwiRXh0cmFUb3BMZXZlbE9wZXJhdG9yc19MYXp5UGF0dGVybiIsImlucHV0IiwiVmFsdWUiLCJQcmludGZNb2R1bGVfUHJpbnRGb3JtYXRUb1N0cmluZ0J1aWxkZXJUaGVuIiwiY29udGludWF0aW9uIiwiYnVpbGRlciIsImZvcm1hdCIsImNvbnQiLCJzIiwiUHJpbnRmTW9kdWxlX1ByaW50Rm9ybWF0VG9TdHJpbmdCdWlsZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/FSharp.Core.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Global.js":
/*!***********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Global.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SR_indexOutOfBounds\": () => (/* binding */ SR_indexOutOfBounds),\n/* harmony export */   \"SR_inputWasEmpty\": () => (/* binding */ SR_inputWasEmpty),\n/* harmony export */   \"SR_inputMustBeNonNegative\": () => (/* binding */ SR_inputMustBeNonNegative),\n/* harmony export */   \"SR_inputSequenceEmpty\": () => (/* binding */ SR_inputSequenceEmpty),\n/* harmony export */   \"SR_inputSequenceTooLong\": () => (/* binding */ SR_inputSequenceTooLong),\n/* harmony export */   \"SR_keyNotFoundAlt\": () => (/* binding */ SR_keyNotFoundAlt),\n/* harmony export */   \"SR_differentLengths\": () => (/* binding */ SR_differentLengths),\n/* harmony export */   \"SR_notEnoughElements\": () => (/* binding */ SR_notEnoughElements)\n/* harmony export */ });\nvar SR_indexOutOfBounds = \"The index was outside the range of elements in the collection.\";\nvar SR_inputWasEmpty = \"Collection was empty.\";\nvar SR_inputMustBeNonNegative = \"The input must be non-negative.\";\nvar SR_inputSequenceEmpty = \"The input sequence was empty.\";\nvar SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\nvar SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\nvar SR_differentLengths = \"The collections had different lengths.\";\nvar SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL2ZhYmxlLWxpYnJhcnkuMy43LjIvR2xvYmFsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQ08sSUFBTUEsbUJBQW1CLEdBQUcsZ0VBQWdFO0FBRTVGLElBQU1DLGdCQUFnQixHQUFHLHVCQUF1QjtBQUVoRCxJQUFNQyx5QkFBeUIsR0FBRyxpQ0FBaUM7QUFFbkUsSUFBTUMscUJBQXFCLEdBQUcsK0JBQStCO0FBRTdELElBQU1DLHVCQUF1QixHQUFHLG9EQUFvRDtBQUVwRixJQUFNQyxpQkFBaUIsR0FBRyxvRUFBb0U7QUFFOUYsSUFBTUMsbUJBQW1CLEdBQUcsd0NBQXdDO0FBRXBFLElBQU1DLG9CQUFvQixHQUFHLDREQUE0RCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9DbGllbnQvLmZhYmxlL2ZhYmxlX21vZHVsZXMvZmFibGUtbGlicmFyeS4zLjcuMi9HbG9iYWwuanM/ZTU4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuZXhwb3J0IGNvbnN0IFNSX2luZGV4T3V0T2ZCb3VuZHMgPSBcIlRoZSBpbmRleCB3YXMgb3V0c2lkZSB0aGUgcmFuZ2Ugb2YgZWxlbWVudHMgaW4gdGhlIGNvbGxlY3Rpb24uXCI7XHJcblxyXG5leHBvcnQgY29uc3QgU1JfaW5wdXRXYXNFbXB0eSA9IFwiQ29sbGVjdGlvbiB3YXMgZW1wdHkuXCI7XHJcblxyXG5leHBvcnQgY29uc3QgU1JfaW5wdXRNdXN0QmVOb25OZWdhdGl2ZSA9IFwiVGhlIGlucHV0IG11c3QgYmUgbm9uLW5lZ2F0aXZlLlwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IFNSX2lucHV0U2VxdWVuY2VFbXB0eSA9IFwiVGhlIGlucHV0IHNlcXVlbmNlIHdhcyBlbXB0eS5cIjtcclxuXHJcbmV4cG9ydCBjb25zdCBTUl9pbnB1dFNlcXVlbmNlVG9vTG9uZyA9IFwiVGhlIGlucHV0IHNlcXVlbmNlIGNvbnRhaW5zIG1vcmUgdGhhbiBvbmUgZWxlbWVudC5cIjtcclxuXHJcbmV4cG9ydCBjb25zdCBTUl9rZXlOb3RGb3VuZEFsdCA9IFwiQW4gaW5kZXggc2F0aXNmeWluZyB0aGUgcHJlZGljYXRlIHdhcyBub3QgZm91bmQgaW4gdGhlIGNvbGxlY3Rpb24uXCI7XHJcblxyXG5leHBvcnQgY29uc3QgU1JfZGlmZmVyZW50TGVuZ3RocyA9IFwiVGhlIGNvbGxlY3Rpb25zIGhhZCBkaWZmZXJlbnQgbGVuZ3Rocy5cIjtcclxuXHJcbmV4cG9ydCBjb25zdCBTUl9ub3RFbm91Z2hFbGVtZW50cyA9IFwiVGhlIGlucHV0IHNlcXVlbmNlIGhhcyBhbiBpbnN1ZmZpY2llbnQgbnVtYmVyIG9mIGVsZW1lbnRzLlwiO1xyXG5cclxuIl0sIm5hbWVzIjpbIlNSX2luZGV4T3V0T2ZCb3VuZHMiLCJTUl9pbnB1dFdhc0VtcHR5IiwiU1JfaW5wdXRNdXN0QmVOb25OZWdhdGl2ZSIsIlNSX2lucHV0U2VxdWVuY2VFbXB0eSIsIlNSX2lucHV0U2VxdWVuY2VUb29Mb25nIiwiU1Jfa2V5Tm90Rm91bmRBbHQiLCJTUl9kaWZmZXJlbnRMZW5ndGhzIiwiU1Jfbm90RW5vdWdoRWxlbWVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Global.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Guid.js":
/*!*********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Guid.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toString\": () => (/* binding */ toString),\n/* harmony export */   \"parse\": () => (/* binding */ parse),\n/* harmony export */   \"tryParse\": () => (/* binding */ tryParse),\n/* harmony export */   \"newGuid\": () => (/* binding */ newGuid),\n/* harmony export */   \"guidToArray\": () => (/* binding */ guidToArray),\n/* harmony export */   \"arrayToGuid\": () => (/* binding */ arrayToGuid)\n/* harmony export */ });\n/* harmony import */ var _String_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./String.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js\");\n\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nvar guidRegex = /^[\\(\\{]{0,2}[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}[\\)\\}]{0,2}$/;\nvar guidRegexNoHyphen = /^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/;\nvar guidRegexHex = /^\\{0x[0-9a-f]{8},(0x[0-9a-f]{4},){2}\\{(0x[0-9a-f]{2},){7}0x[0-9a-f]{2}\\}\\}$/;\nvar guidHexCaptures = /^([0-9a-f]{8})-(([0-9a-f]{4})-)(([0-9a-f]{4})-)([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/;\nfunction toString(str, format, _provider) {\n  if (format && (format === null || format === void 0 ? void 0 : format.length) > 0) {\n    switch (format) {\n      case \"N\":\n        return str.replace(/-/g, '');\n      case \"D\":\n        return str;\n      case \"B\":\n        return \"{\" + str + \"}\";\n      case \"P\":\n        return \"(\" + str + \")\";\n      case \"X\":\n        return str.replace(guidHexCaptures, \"{0x$1,0x$3,0x$5,{0x$6,0x$7,0x$8,0x$9,0x$10,0x$11,0x$12,0x$13}}\");\n      default:\n        throw new Error(\"Unrecognized Guid print format\");\n    }\n  } else {\n    return str;\n  }\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). */\nfunction parse(str) {\n  function hyphenateGuid(str) {\n    return str.replace(guidRegexNoHyphen, \"$1-$2-$3-$4-$5\");\n  }\n  var wsTrimAndLowered = str.trim().toLowerCase();\n  if (guidRegex.test(wsTrimAndLowered)) {\n    return (0,_String_js__WEBPACK_IMPORTED_MODULE_0__.trim)(wsTrimAndLowered, \"{\", \"}\", \"(\", \")\");\n  } else if (guidRegexNoHyphen.test(wsTrimAndLowered)) {\n    return hyphenateGuid(wsTrimAndLowered);\n  } else if (guidRegexHex.test(wsTrimAndLowered)) {\n    return hyphenateGuid(wsTrimAndLowered.replace(/[\\{\\},]|0x/g, ''));\n  } else {\n    throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n  }\n}\nfunction tryParse(str, defValue) {\n  try {\n    defValue.contents = parse(str);\n    return true;\n  } catch (_a) {\n    return false;\n  }\n}\n// From https://gist.github.com/LeverOne/1308368\nfunction newGuid() {\n  var b = \"\";\n  for (var a = 0; a++ < 36;) {\n    b += a * 51 & 52 ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16) : \"-\";\n  }\n  return b;\n}\n// Maps for number <-> hex string conversion\nvar _convertMapsInitialized = false;\nvar _byteToHex;\nvar _hexToByte;\nfunction initConvertMaps() {\n  _byteToHex = new Array(256);\n  _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n  _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nfunction guidToArray(s) {\n  if (!_convertMapsInitialized) {\n    initConvertMaps();\n  }\n  var i = 0;\n  var buf = new Uint8Array(16);\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function (oct) {\n    switch (i) {\n      // .NET saves first three byte groups with different endianness\n      // See https://stackoverflow.com/a/16722909/3922220\n      case 0:\n      case 1:\n      case 2:\n      case 3:\n        buf[3 - i++] = _hexToByte[oct];\n        break;\n      case 4:\n      case 5:\n        buf[9 - i++] = _hexToByte[oct];\n        break;\n      case 6:\n      case 7:\n        buf[13 - i++] = _hexToByte[oct];\n        break;\n      case 8:\n      case 9:\n      case 10:\n      case 11:\n      case 12:\n      case 13:\n      case 14:\n      case 15:\n        buf[i++] = _hexToByte[oct];\n        break;\n    }\n  });\n  // Zero out remaining bytes if string was short\n  while (i < 16) {\n    buf[i++] = 0;\n  }\n  return buf;\n}\n/** Convert UUID byte array into a string */\nfunction arrayToGuid(buf) {\n  if (buf.length !== 16) {\n    throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n  }\n  if (!_convertMapsInitialized) {\n    initConvertMaps();\n  }\n  var guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] + _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" + _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" + _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" + _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" + _byteToHex[buf[10]] + _byteToHex[buf[11]] + _byteToHex[buf[12]] + _byteToHex[buf[13]] + _byteToHex[buf[14]] + _byteToHex[buf[15]];\n  return guid;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Guid.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Int32.js":
/*!**********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Int32.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NumberStyles\": () => (/* binding */ NumberStyles),\n/* harmony export */   \"isValid\": () => (/* binding */ isValid),\n/* harmony export */   \"parse\": () => (/* binding */ parse),\n/* harmony export */   \"tryParse\": () => (/* binding */ tryParse),\n/* harmony export */   \"op_UnaryNegation_Int8\": () => (/* binding */ op_UnaryNegation_Int8),\n/* harmony export */   \"op_UnaryNegation_Int16\": () => (/* binding */ op_UnaryNegation_Int16),\n/* harmony export */   \"op_UnaryNegation_Int32\": () => (/* binding */ op_UnaryNegation_Int32),\n/* harmony export */   \"divRem\": () => (/* binding */ divRem)\n/* harmony export */ });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n// export type decimal = Decimal;\nvar NumberStyles;\n(function (NumberStyles) {\n  // None = 0x00000000,\n  // AllowLeadingWhite = 0x00000001,\n  // AllowTrailingWhite = 0x00000002,\n  // AllowLeadingSign = 0x00000004,\n  // AllowTrailingSign = 0x00000008,\n  // AllowParentheses = 0x00000010,\n  // AllowDecimalPoint = 0x00000020,\n  // AllowThousands = 0x00000040,\n  // AllowExponent = 0x00000080,\n  // AllowCurrencySymbol = 0x00000100,\n  NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n  // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n  // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n  // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n  //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n  // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n  //         AllowDecimalPoint | AllowExponent,\n  // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n  //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n  // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n  //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n  var _regexMatch = _slicedToArray(regexMatch, 4),\n    sign = _regexMatch[1],\n    prefix = _regexMatch[2],\n    digits = _regexMatch[3];\n  return {\n    sign: sign || \"\",\n    prefix: prefix || \"\",\n    digits: digits,\n    radix: radix\n  };\n}\nfunction getRange(unsigned, bitsize) {\n  switch (bitsize) {\n    case 8:\n      return unsigned ? [0, 255] : [-128, 127];\n    case 16:\n      return unsigned ? [0, 65535] : [-32768, 32767];\n    case 32:\n      return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n    default:\n      throw new Error(\"Invalid bit size.\");\n  }\n}\nfunction getInvalidDigits(radix) {\n  switch (radix) {\n    case 2:\n      return /[^0-1]/;\n    case 8:\n      return /[^0-7]/;\n    case 10:\n      return /[^0-9]/;\n    case 16:\n      return /[^0-9a-fA-F]/;\n    default:\n      throw new Error(\"Invalid Base.\");\n  }\n}\nfunction getRadix(prefix, style) {\n  if (style & NumberStyles.AllowHexSpecifier) {\n    return 16;\n  } else {\n    switch (prefix) {\n      case \"0b\":\n      case \"0B\":\n        return 2;\n      case \"0o\":\n      case \"0O\":\n        return 8;\n      case \"0x\":\n      case \"0X\":\n        return 16;\n      default:\n        return 10;\n    }\n  }\n}\nfunction isValid(str, style, radix) {\n  var integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n  var res = integerRegex.exec(str.replace(/_/g, \"\"));\n  if (res != null) {\n    var _res = _slicedToArray(res, 4),\n      prefix = _res[2],\n      digits = _res[3];\n    radix = radix || getRadix(prefix, style);\n    var invalidDigits = getInvalidDigits(radix);\n    if (!invalidDigits.test(digits)) {\n      return validResponse(res, radix);\n    }\n  }\n  return null;\n}\nfunction parse(str, style, unsigned, bitsize, radix) {\n  var res = isValid(str, style, radix);\n  if (res != null) {\n    var v = Number.parseInt(res.sign + res.digits, res.radix);\n    if (!Number.isNaN(v)) {\n      var _getRange = getRange(true, bitsize),\n        _getRange2 = _slicedToArray(_getRange, 2),\n        umin = _getRange2[0],\n        umax = _getRange2[1];\n      if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n        v = v << 32 - bitsize >> 32 - bitsize;\n      }\n      var _getRange3 = getRange(unsigned, bitsize),\n        _getRange4 = _slicedToArray(_getRange3, 2),\n        min = _getRange4[0],\n        max = _getRange4[1];\n      if (v >= min && v <= max) {\n        return v;\n      }\n    }\n  }\n  throw new Error(\"Input string was not in a correct format.\");\n}\nfunction tryParse(str, style, unsigned, bitsize, defValue) {\n  try {\n    defValue.contents = parse(str, style, unsigned, bitsize);\n    return true;\n  } catch (_a) {\n    return false;\n  }\n}\nfunction op_UnaryNegation_Int8(x) {\n  return x === -128 ? x : -x;\n}\nfunction op_UnaryNegation_Int16(x) {\n  return x === -32768 ? x : -x;\n}\nfunction op_UnaryNegation_Int32(x) {\n  return x === -2147483648 ? x : -x;\n}\nfunction divRem(x, y, out) {\n  var div = ~~(x / y);\n  var rem = x % y;\n  if (out != null) {\n    out.contents = rem;\n    return div;\n  } else {\n    return [div, rem];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Int32.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/List.js":
/*!*********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/List.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FSharpList\": () => (/* binding */ FSharpList),\n/* harmony export */   \"FSharpList$reflection\": () => (/* binding */ FSharpList$reflection),\n/* harmony export */   \"ListEnumerator$1\": () => (/* binding */ ListEnumerator$1),\n/* harmony export */   \"ListEnumerator$1$reflection\": () => (/* binding */ ListEnumerator$1$reflection),\n/* harmony export */   \"ListEnumerator$1_$ctor_3002E699\": () => (/* binding */ ListEnumerator$1_$ctor_3002E699),\n/* harmony export */   \"FSharpList_get_Empty\": () => (/* binding */ FSharpList_get_Empty),\n/* harmony export */   \"FSharpList_Cons_305B8EAC\": () => (/* binding */ FSharpList_Cons_305B8EAC),\n/* harmony export */   \"FSharpList__get_IsEmpty\": () => (/* binding */ FSharpList__get_IsEmpty),\n/* harmony export */   \"FSharpList__get_Length\": () => (/* binding */ FSharpList__get_Length),\n/* harmony export */   \"FSharpList__get_Head\": () => (/* binding */ FSharpList__get_Head),\n/* harmony export */   \"FSharpList__get_Tail\": () => (/* binding */ FSharpList__get_Tail),\n/* harmony export */   \"FSharpList__get_Item_Z524259A4\": () => (/* binding */ FSharpList__get_Item_Z524259A4),\n/* harmony export */   \"empty\": () => (/* binding */ empty),\n/* harmony export */   \"cons\": () => (/* binding */ cons),\n/* harmony export */   \"singleton\": () => (/* binding */ singleton),\n/* harmony export */   \"isEmpty\": () => (/* binding */ isEmpty),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"head\": () => (/* binding */ head),\n/* harmony export */   \"tryHead\": () => (/* binding */ tryHead),\n/* harmony export */   \"tail\": () => (/* binding */ tail),\n/* harmony export */   \"tryLast\": () => (/* binding */ tryLast),\n/* harmony export */   \"last\": () => (/* binding */ last),\n/* harmony export */   \"compareWith\": () => (/* binding */ compareWith),\n/* harmony export */   \"toArray\": () => (/* binding */ toArray),\n/* harmony export */   \"fold\": () => (/* binding */ fold),\n/* harmony export */   \"reverse\": () => (/* binding */ reverse),\n/* harmony export */   \"foldBack\": () => (/* binding */ foldBack),\n/* harmony export */   \"foldIndexed\": () => (/* binding */ foldIndexed),\n/* harmony export */   \"fold2\": () => (/* binding */ fold2),\n/* harmony export */   \"foldBack2\": () => (/* binding */ foldBack2),\n/* harmony export */   \"unfold\": () => (/* binding */ unfold),\n/* harmony export */   \"iterate\": () => (/* binding */ iterate),\n/* harmony export */   \"iterate2\": () => (/* binding */ iterate2),\n/* harmony export */   \"iterateIndexed\": () => (/* binding */ iterateIndexed),\n/* harmony export */   \"iterateIndexed2\": () => (/* binding */ iterateIndexed2),\n/* harmony export */   \"toSeq\": () => (/* binding */ toSeq),\n/* harmony export */   \"ofArrayWithTail\": () => (/* binding */ ofArrayWithTail),\n/* harmony export */   \"ofArray\": () => (/* binding */ ofArray),\n/* harmony export */   \"ofSeq\": () => (/* binding */ ofSeq),\n/* harmony export */   \"concat\": () => (/* binding */ concat),\n/* harmony export */   \"scan\": () => (/* binding */ scan),\n/* harmony export */   \"scanBack\": () => (/* binding */ scanBack),\n/* harmony export */   \"append\": () => (/* binding */ append),\n/* harmony export */   \"collect\": () => (/* binding */ collect),\n/* harmony export */   \"mapIndexed\": () => (/* binding */ mapIndexed),\n/* harmony export */   \"map\": () => (/* binding */ map),\n/* harmony export */   \"indexed\": () => (/* binding */ indexed),\n/* harmony export */   \"map2\": () => (/* binding */ map2),\n/* harmony export */   \"mapIndexed2\": () => (/* binding */ mapIndexed2),\n/* harmony export */   \"map3\": () => (/* binding */ map3),\n/* harmony export */   \"mapFold\": () => (/* binding */ mapFold),\n/* harmony export */   \"mapFoldBack\": () => (/* binding */ mapFoldBack),\n/* harmony export */   \"tryPick\": () => (/* binding */ tryPick),\n/* harmony export */   \"pick\": () => (/* binding */ pick),\n/* harmony export */   \"tryFind\": () => (/* binding */ tryFind),\n/* harmony export */   \"find\": () => (/* binding */ find),\n/* harmony export */   \"tryFindBack\": () => (/* binding */ tryFindBack),\n/* harmony export */   \"findBack\": () => (/* binding */ findBack),\n/* harmony export */   \"tryFindIndex\": () => (/* binding */ tryFindIndex),\n/* harmony export */   \"findIndex\": () => (/* binding */ findIndex),\n/* harmony export */   \"tryFindIndexBack\": () => (/* binding */ tryFindIndexBack),\n/* harmony export */   \"findIndexBack\": () => (/* binding */ findIndexBack),\n/* harmony export */   \"tryItem\": () => (/* binding */ tryItem),\n/* harmony export */   \"item\": () => (/* binding */ item),\n/* harmony export */   \"filter\": () => (/* binding */ filter),\n/* harmony export */   \"partition\": () => (/* binding */ partition),\n/* harmony export */   \"choose\": () => (/* binding */ choose),\n/* harmony export */   \"contains\": () => (/* binding */ contains),\n/* harmony export */   \"initialize\": () => (/* binding */ initialize),\n/* harmony export */   \"replicate\": () => (/* binding */ replicate),\n/* harmony export */   \"reduce\": () => (/* binding */ reduce),\n/* harmony export */   \"reduceBack\": () => (/* binding */ reduceBack),\n/* harmony export */   \"forAll\": () => (/* binding */ forAll),\n/* harmony export */   \"forAll2\": () => (/* binding */ forAll2),\n/* harmony export */   \"exists\": () => (/* binding */ exists),\n/* harmony export */   \"exists2\": () => (/* binding */ exists2),\n/* harmony export */   \"unzip\": () => (/* binding */ unzip),\n/* harmony export */   \"unzip3\": () => (/* binding */ unzip3),\n/* harmony export */   \"zip\": () => (/* binding */ zip),\n/* harmony export */   \"zip3\": () => (/* binding */ zip3),\n/* harmony export */   \"sortWith\": () => (/* binding */ sortWith),\n/* harmony export */   \"sort\": () => (/* binding */ sort),\n/* harmony export */   \"sortBy\": () => (/* binding */ sortBy),\n/* harmony export */   \"sortDescending\": () => (/* binding */ sortDescending),\n/* harmony export */   \"sortByDescending\": () => (/* binding */ sortByDescending),\n/* harmony export */   \"sum\": () => (/* binding */ sum),\n/* harmony export */   \"sumBy\": () => (/* binding */ sumBy),\n/* harmony export */   \"maxBy\": () => (/* binding */ maxBy),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"minBy\": () => (/* binding */ minBy),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"average\": () => (/* binding */ average),\n/* harmony export */   \"averageBy\": () => (/* binding */ averageBy),\n/* harmony export */   \"permute\": () => (/* binding */ permute),\n/* harmony export */   \"chunkBySize\": () => (/* binding */ chunkBySize),\n/* harmony export */   \"allPairs\": () => (/* binding */ allPairs),\n/* harmony export */   \"skip\": () => (/* binding */ skip),\n/* harmony export */   \"skipWhile\": () => (/* binding */ skipWhile),\n/* harmony export */   \"take\": () => (/* binding */ take),\n/* harmony export */   \"takeWhile\": () => (/* binding */ takeWhile),\n/* harmony export */   \"truncate\": () => (/* binding */ truncate),\n/* harmony export */   \"getSlice\": () => (/* binding */ getSlice),\n/* harmony export */   \"splitAt\": () => (/* binding */ splitAt),\n/* harmony export */   \"exactlyOne\": () => (/* binding */ exactlyOne),\n/* harmony export */   \"tryExactlyOne\": () => (/* binding */ tryExactlyOne),\n/* harmony export */   \"where\": () => (/* binding */ where),\n/* harmony export */   \"pairwise\": () => (/* binding */ pairwise),\n/* harmony export */   \"windowed\": () => (/* binding */ windowed),\n/* harmony export */   \"splitInto\": () => (/* binding */ splitInto),\n/* harmony export */   \"transpose\": () => (/* binding */ transpose),\n/* harmony export */   \"insertAt\": () => (/* binding */ insertAt),\n/* harmony export */   \"insertManyAt\": () => (/* binding */ insertManyAt),\n/* harmony export */   \"removeAt\": () => (/* binding */ removeAt),\n/* harmony export */   \"removeManyAt\": () => (/* binding */ removeManyAt),\n/* harmony export */   \"updateAt\": () => (/* binding */ updateAt)\n/* harmony export */ });\n/* harmony import */ var _String_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./String.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _Reflection_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _Global_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Global.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Global.js\");\n/* harmony import */ var _Option_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Option.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\");\n/* harmony import */ var _Array_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Array.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar FSharpList = /*#__PURE__*/function (_Record, _Symbol$iterator) {\n  _inherits(FSharpList, _Record);\n  var _super = _createSuper(FSharpList);\n  function FSharpList(head, tail) {\n    var _this;\n    _classCallCheck(this, FSharpList);\n    _this = _super.call(this);\n    _this.head = head;\n    _this.tail = tail;\n    return _this;\n  }\n  _createClass(FSharpList, [{\n    key: \"toString\",\n    value: function toString() {\n      var xs = this;\n      return \"[\" + (0,_String_js__WEBPACK_IMPORTED_MODULE_0__.join)(\"; \", xs) + \"]\";\n    }\n  }, {\n    key: \"Equals\",\n    value: function Equals(other) {\n      var xs = this;\n      if (xs === other) {\n        return true;\n      } else {\n        var loop = function loop(xs_1_mut, ys_1_mut) {\n          loop: while (true) {\n            var xs_1 = xs_1_mut,\n              ys_1 = ys_1_mut;\n            var matchValue = [xs_1.tail, ys_1.tail];\n            if (matchValue[0] != null) {\n              if (matchValue[1] != null) {\n                var xt = matchValue[0];\n                var yt = matchValue[1];\n                if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.equals)(xs_1.head, ys_1.head)) {\n                  xs_1_mut = xt;\n                  ys_1_mut = yt;\n                  continue loop;\n                } else {\n                  return false;\n                }\n              } else {\n                return false;\n              }\n            } else if (matchValue[1] != null) {\n              return false;\n            } else {\n              return true;\n            }\n            break;\n          }\n        };\n        return loop(xs, other);\n      }\n    }\n  }, {\n    key: \"GetHashCode\",\n    value: function GetHashCode() {\n      var xs = this;\n      var loop = function loop(i_mut, h_mut, xs_1_mut) {\n        loop: while (true) {\n          var i = i_mut,\n            h = h_mut,\n            xs_1 = xs_1_mut;\n          var matchValue = xs_1.tail;\n          if (matchValue != null) {\n            var t = matchValue;\n            if (i > 18) {\n              return h | 0;\n            } else {\n              i_mut = i + 1;\n              h_mut = (h << 1) + (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.structuralHash)(xs_1.head) + 631 * i;\n              xs_1_mut = t;\n              continue loop;\n            }\n          } else {\n            return h | 0;\n          }\n          break;\n        }\n      };\n      return loop(0, 0, xs) | 0;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_key) {\n      var this$ = this;\n      return Array.from(this$);\n    }\n  }, {\n    key: \"CompareTo\",\n    value: function CompareTo(other) {\n      var xs = this;\n      var loop = function loop(xs_1_mut, ys_1_mut) {\n        loop: while (true) {\n          var xs_1 = xs_1_mut,\n            ys_1 = ys_1_mut;\n          var matchValue = [xs_1.tail, ys_1.tail];\n          if (matchValue[0] != null) {\n            if (matchValue[1] != null) {\n              var xt = matchValue[0];\n              var yt = matchValue[1];\n              var c = (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.compare)(xs_1.head, ys_1.head) | 0;\n              if (c === 0) {\n                xs_1_mut = xt;\n                ys_1_mut = yt;\n                continue loop;\n              } else {\n                return c | 0;\n              }\n            } else {\n              return 1;\n            }\n          } else if (matchValue[1] != null) {\n            return -1;\n          } else {\n            return 0;\n          }\n          break;\n        }\n      };\n      return loop(xs, other) | 0;\n    }\n  }, {\n    key: \"GetEnumerator\",\n    value: function GetEnumerator() {\n      var xs = this;\n      return ListEnumerator$1_$ctor_3002E699(xs);\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.toIterator)(this.GetEnumerator());\n    }\n  }, {\n    key: \"System.Collections.IEnumerable.GetEnumerator\",\n    value: function SystemCollectionsIEnumerableGetEnumerator() {\n      var xs = this;\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.getEnumerator)(xs);\n    }\n  }]);\n  return FSharpList;\n}(_Types_js__WEBPACK_IMPORTED_MODULE_2__.Record, Symbol.iterator);\nfunction FSharpList$reflection(gen0) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_3__.record_type)(\"ListModule.FSharpList\", [gen0], FSharpList, function () {\n    return [[\"head\", gen0], [\"tail\", (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_3__.option_type)(FSharpList$reflection(gen0))]];\n  });\n}\nvar ListEnumerator$1 = /*#__PURE__*/function () {\n  function ListEnumerator$1(xs) {\n    _classCallCheck(this, ListEnumerator$1);\n    this.xs = xs;\n    this.it = this.xs;\n    this.current = null;\n  }\n  _createClass(ListEnumerator$1, [{\n    key: \"System.Collections.Generic.IEnumerator`1.get_Current\",\n    value: function SystemCollectionsGenericIEnumerator1Get_Current() {\n      var __ = this;\n      return __.current;\n    }\n  }, {\n    key: \"System.Collections.IEnumerator.get_Current\",\n    value: function SystemCollectionsIEnumeratorGet_Current() {\n      var __ = this;\n      return __.current;\n    }\n  }, {\n    key: \"System.Collections.IEnumerator.MoveNext\",\n    value: function SystemCollectionsIEnumeratorMoveNext() {\n      var __ = this;\n      var matchValue = __.it.tail;\n      if (matchValue != null) {\n        var t = matchValue;\n        __.current = __.it.head;\n        __.it = t;\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"System.Collections.IEnumerator.Reset\",\n    value: function SystemCollectionsIEnumeratorReset() {\n      var __ = this;\n      __.it = __.xs;\n      __.current = null;\n    }\n  }, {\n    key: \"Dispose\",\n    value: function Dispose() {}\n  }]);\n  return ListEnumerator$1;\n}();\nfunction ListEnumerator$1$reflection(gen0) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_3__.class_type)(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\n}\nfunction ListEnumerator$1_$ctor_3002E699(xs) {\n  return new ListEnumerator$1(xs);\n}\nfunction FSharpList_get_Empty() {\n  return new FSharpList(null, void 0);\n}\nfunction FSharpList_Cons_305B8EAC(x, xs) {\n  return new FSharpList(x, xs);\n}\nfunction FSharpList__get_IsEmpty(xs) {\n  return xs.tail == null;\n}\nfunction FSharpList__get_Length(xs) {\n  var loop = function loop(i_mut, xs_1_mut) {\n    loop: while (true) {\n      var i = i_mut,\n        xs_1 = xs_1_mut;\n      var matchValue = xs_1.tail;\n      if (matchValue != null) {\n        i_mut = i + 1;\n        xs_1_mut = matchValue;\n        continue loop;\n      } else {\n        return i | 0;\n      }\n      break;\n    }\n  };\n  return loop(0, xs) | 0;\n}\nfunction FSharpList__get_Head(xs) {\n  var matchValue = xs.tail;\n  if (matchValue != null) {\n    return xs.head;\n  } else {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_inputWasEmpty + \"\\\\nParameter name: \" + \"list\");\n  }\n}\nfunction FSharpList__get_Tail(xs) {\n  var matchValue = xs.tail;\n  if (matchValue != null) {\n    return matchValue;\n  } else {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_inputWasEmpty + \"\\\\nParameter name: \" + \"list\");\n  }\n}\nfunction FSharpList__get_Item_Z524259A4(xs, index) {\n  var loop = function loop(i_mut, xs_1_mut) {\n    loop: while (true) {\n      var i = i_mut,\n        xs_1 = xs_1_mut;\n      var matchValue = xs_1.tail;\n      if (matchValue != null) {\n        if (i === index) {\n          return xs_1.head;\n        } else {\n          i_mut = i + 1;\n          xs_1_mut = matchValue;\n          continue loop;\n        }\n      } else {\n        throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n      }\n      break;\n    }\n  };\n  return loop(0, xs);\n}\nfunction empty() {\n  return FSharpList_get_Empty();\n}\nfunction cons(x, xs) {\n  return FSharpList_Cons_305B8EAC(x, xs);\n}\nfunction singleton(x) {\n  return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\n}\nfunction isEmpty(xs) {\n  return FSharpList__get_IsEmpty(xs);\n}\nfunction length(xs) {\n  return FSharpList__get_Length(xs);\n}\nfunction head(xs) {\n  return FSharpList__get_Head(xs);\n}\nfunction tryHead(xs) {\n  if (FSharpList__get_IsEmpty(xs)) {\n    return void 0;\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.some)(FSharpList__get_Head(xs));\n  }\n}\nfunction tail(xs) {\n  return FSharpList__get_Tail(xs);\n}\nfunction tryLast(xs_mut) {\n  tryLast: while (true) {\n    var xs = xs_mut;\n    if (FSharpList__get_IsEmpty(xs)) {\n      return void 0;\n    } else {\n      var t = FSharpList__get_Tail(xs);\n      if (FSharpList__get_IsEmpty(t)) {\n        return (0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.some)(FSharpList__get_Head(xs));\n      } else {\n        xs_mut = t;\n        continue tryLast;\n      }\n    }\n    break;\n  }\n}\nfunction last(xs) {\n  var matchValue = tryLast(xs);\n  if (matchValue == null) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_inputWasEmpty);\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.value)(matchValue);\n  }\n}\nfunction compareWith(comparer, xs, ys) {\n  var loop = function loop(xs_1_mut, ys_1_mut) {\n    loop: while (true) {\n      var xs_1 = xs_1_mut,\n        ys_1 = ys_1_mut;\n      var matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\n      if (matchValue[0]) {\n        if (matchValue[1]) {\n          return 0;\n        } else {\n          return -1;\n        }\n      } else if (matchValue[1]) {\n        return 1;\n      } else {\n        var c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\n        if (c === 0) {\n          xs_1_mut = FSharpList__get_Tail(xs_1);\n          ys_1_mut = FSharpList__get_Tail(ys_1);\n          continue loop;\n        } else {\n          return c | 0;\n        }\n      }\n      break;\n    }\n  };\n  return loop(xs, ys) | 0;\n}\nfunction toArray(xs) {\n  var len = FSharpList__get_Length(xs) | 0;\n  var res = (0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.fill)(new Array(len), 0, len, null);\n  var loop = function loop(i_mut, xs_1_mut) {\n    loop: while (true) {\n      var i = i_mut,\n        xs_1 = xs_1_mut;\n      if (!FSharpList__get_IsEmpty(xs_1)) {\n        res[i] = FSharpList__get_Head(xs_1);\n        i_mut = i + 1;\n        xs_1_mut = FSharpList__get_Tail(xs_1);\n        continue loop;\n      }\n      break;\n    }\n  };\n  loop(0, xs);\n  return res;\n}\nfunction fold(folder, state, xs) {\n  var acc = state;\n  var xs_1 = xs;\n  while (!FSharpList__get_IsEmpty(xs_1)) {\n    acc = folder(acc, FSharpList__get_Head(xs_1));\n    xs_1 = FSharpList__get_Tail(xs_1);\n  }\n  return acc;\n}\nfunction reverse(xs) {\n  return fold(function (acc, x) {\n    return FSharpList_Cons_305B8EAC(x, acc);\n  }, FSharpList_get_Empty(), xs);\n}\nfunction foldBack(folder, xs, state) {\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.foldBack)(folder, toArray(xs), state);\n}\nfunction foldIndexed(folder, state, xs) {\n  var loop = function loop(i_mut, acc_mut, xs_1_mut) {\n    loop: while (true) {\n      var i = i_mut,\n        acc = acc_mut,\n        xs_1 = xs_1_mut;\n      if (FSharpList__get_IsEmpty(xs_1)) {\n        return acc;\n      } else {\n        i_mut = i + 1;\n        acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\n        xs_1_mut = FSharpList__get_Tail(xs_1);\n        continue loop;\n      }\n      break;\n    }\n  };\n  return loop(0, state, xs);\n}\nfunction fold2(folder, state, xs, ys) {\n  var acc = state;\n  var xs_1 = xs;\n  var ys_1 = ys;\n  while (!FSharpList__get_IsEmpty(xs_1) && !FSharpList__get_IsEmpty(ys_1)) {\n    acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\n    xs_1 = FSharpList__get_Tail(xs_1);\n    ys_1 = FSharpList__get_Tail(ys_1);\n  }\n  return acc;\n}\nfunction foldBack2(folder, xs, ys, state) {\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.foldBack2)(folder, toArray(xs), toArray(ys), state);\n}\nfunction unfold(gen, state) {\n  var loop = function loop(acc_mut, node_mut) {\n    var t;\n    loop: while (true) {\n      var acc = acc_mut,\n        node = node_mut;\n      var matchValue = gen(acc);\n      if (matchValue != null) {\n        acc_mut = matchValue[1];\n        node_mut = (t = new FSharpList(matchValue[0], void 0), (node.tail = t, t));\n        continue loop;\n      } else {\n        return node;\n      }\n      break;\n    }\n  };\n  var root = FSharpList_get_Empty();\n  var node_1 = loop(state, root);\n  var t_2 = FSharpList_get_Empty();\n  node_1.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction iterate(action, xs) {\n  fold(function (unitVar0, x) {\n    action(x);\n  }, void 0, xs);\n}\nfunction iterate2(action, xs, ys) {\n  fold2(function (unitVar0, x, y) {\n    action(x, y);\n  }, void 0, xs, ys);\n}\nfunction iterateIndexed(action, xs) {\n  fold(function (i, x) {\n    action(i, x);\n    return i + 1 | 0;\n  }, 0, xs);\n}\nfunction iterateIndexed2(action, xs, ys) {\n  fold2(function (i, x, y) {\n    action(i, x, y);\n    return i + 1 | 0;\n  }, 0, xs, ys);\n}\nfunction toSeq(xs) {\n  return xs;\n}\nfunction ofArrayWithTail(xs, tail_1) {\n  var res = tail_1;\n  for (var i = xs.length - 1; i >= 0; i--) {\n    res = FSharpList_Cons_305B8EAC(xs[i], res);\n  }\n  return res;\n}\nfunction ofArray(xs) {\n  return ofArrayWithTail(xs, FSharpList_get_Empty());\n}\nfunction ofSeq(xs) {\n  var xs_3, t;\n  if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.isArrayLike)(xs)) {\n    return ofArray(xs);\n  } else if (xs instanceof FSharpList) {\n    return xs;\n  } else {\n    var root = FSharpList_get_Empty();\n    var node = root;\n    var enumerator = (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.getEnumerator)(xs);\n    try {\n      while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n        var x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n        node = (xs_3 = node, (t = new FSharpList(x, void 0), (xs_3.tail = t, t)));\n      }\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.disposeSafe)(enumerator);\n    }\n    var xs_5 = node;\n    var t_2 = FSharpList_get_Empty();\n    xs_5.tail = t_2;\n    return FSharpList__get_Tail(root);\n  }\n}\nfunction concat(lists) {\n  var root = FSharpList_get_Empty();\n  var node = root;\n  var action = function action(xs) {\n    node = fold(function (acc, x) {\n      var t = new FSharpList(x, void 0);\n      acc.tail = t;\n      return t;\n    }, node, xs);\n  };\n  if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.isArrayLike)(lists)) {\n    lists.forEach(action);\n  } else if (lists instanceof FSharpList) {\n    iterate(action, lists);\n  } else {\n    var enumerator = (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.getEnumerator)(lists);\n    try {\n      while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n        action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n      }\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.disposeSafe)(enumerator);\n    }\n  }\n  var xs_6 = node;\n  var t_2 = FSharpList_get_Empty();\n  xs_6.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction scan(folder, state, xs) {\n  var t, xs_4, t_2;\n  var root = FSharpList_get_Empty();\n  var node = (t = new FSharpList(state, void 0), (root.tail = t, t));\n  var acc = state;\n  var xs_3 = xs;\n  while (!FSharpList__get_IsEmpty(xs_3)) {\n    acc = folder(acc, FSharpList__get_Head(xs_3));\n    node = (xs_4 = node, (t_2 = new FSharpList(acc, void 0), (xs_4.tail = t_2, t_2)));\n    xs_3 = FSharpList__get_Tail(xs_3);\n  }\n  var xs_6 = node;\n  var t_4 = FSharpList_get_Empty();\n  xs_6.tail = t_4;\n  return FSharpList__get_Tail(root);\n}\nfunction scanBack(folder, xs, state) {\n  return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.scanBack)(folder, toArray(xs), state));\n}\nfunction append(xs, ys) {\n  return fold(function (acc, x) {\n    return FSharpList_Cons_305B8EAC(x, acc);\n  }, ys, reverse(xs));\n}\nfunction collect(mapping, xs) {\n  var xs_1, t;\n  var root = FSharpList_get_Empty();\n  var node = root;\n  var ys = xs;\n  while (!FSharpList__get_IsEmpty(ys)) {\n    var zs = mapping(FSharpList__get_Head(ys));\n    while (!FSharpList__get_IsEmpty(zs)) {\n      node = (xs_1 = node, (t = new FSharpList(FSharpList__get_Head(zs), void 0), (xs_1.tail = t, t)));\n      zs = FSharpList__get_Tail(zs);\n    }\n    ys = FSharpList__get_Tail(ys);\n  }\n  var xs_3 = node;\n  var t_2 = FSharpList_get_Empty();\n  xs_3.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction mapIndexed(mapping, xs) {\n  var root = FSharpList_get_Empty();\n  var node = foldIndexed(function (i, acc, x) {\n    var t;\n    return t = new FSharpList(mapping(i, x), void 0), (acc.tail = t, t);\n  }, root, xs);\n  var t_2 = FSharpList_get_Empty();\n  node.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction map(mapping, xs) {\n  var root = FSharpList_get_Empty();\n  var node = fold(function (acc, x) {\n    var t;\n    return t = new FSharpList(mapping(x), void 0), (acc.tail = t, t);\n  }, root, xs);\n  var t_2 = FSharpList_get_Empty();\n  node.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction indexed(xs) {\n  return mapIndexed(function (i, x) {\n    return [i, x];\n  }, xs);\n}\nfunction map2(mapping, xs, ys) {\n  var root = FSharpList_get_Empty();\n  var node = fold2(function (acc, x, y) {\n    var t;\n    return t = new FSharpList(mapping(x, y), void 0), (acc.tail = t, t);\n  }, root, xs, ys);\n  var t_2 = FSharpList_get_Empty();\n  node.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction mapIndexed2(mapping, xs, ys) {\n  var loop = function loop(i_mut, acc_mut, xs_1_mut, ys_1_mut) {\n    var t;\n    loop: while (true) {\n      var i = i_mut,\n        acc = acc_mut,\n        xs_1 = xs_1_mut,\n        ys_1 = ys_1_mut;\n      if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\n        return acc;\n      } else {\n        i_mut = i + 1;\n        acc_mut = (t = new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0), (acc.tail = t, t));\n        xs_1_mut = FSharpList__get_Tail(xs_1);\n        ys_1_mut = FSharpList__get_Tail(ys_1);\n        continue loop;\n      }\n      break;\n    }\n  };\n  var root = FSharpList_get_Empty();\n  var node_1 = loop(0, root, xs, ys);\n  var t_2 = FSharpList_get_Empty();\n  node_1.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction map3(mapping, xs, ys, zs) {\n  var loop = function loop(acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) {\n    var t;\n    loop: while (true) {\n      var acc = acc_mut,\n        xs_1 = xs_1_mut,\n        ys_1 = ys_1_mut,\n        zs_1 = zs_1_mut;\n      if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\n        return acc;\n      } else {\n        acc_mut = (t = new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0), (acc.tail = t, t));\n        xs_1_mut = FSharpList__get_Tail(xs_1);\n        ys_1_mut = FSharpList__get_Tail(ys_1);\n        zs_1_mut = FSharpList__get_Tail(zs_1);\n        continue loop;\n      }\n      break;\n    }\n  };\n  var root = FSharpList_get_Empty();\n  var node_1 = loop(root, xs, ys, zs);\n  var t_2 = FSharpList_get_Empty();\n  node_1.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction mapFold(mapping, state, xs) {\n  var root = FSharpList_get_Empty();\n  var patternInput_1 = fold(function (tupledArg, x) {\n    var t;\n    var patternInput = mapping(tupledArg[1], x);\n    return [(t = new FSharpList(patternInput[0], void 0), (tupledArg[0].tail = t, t)), patternInput[1]];\n  }, [root, state], xs);\n  var t_2 = FSharpList_get_Empty();\n  patternInput_1[0].tail = t_2;\n  return [FSharpList__get_Tail(root), patternInput_1[1]];\n}\nfunction mapFoldBack(mapping, xs, state) {\n  return mapFold(function (acc, x) {\n    return mapping(x, acc);\n  }, state, reverse(xs));\n}\nfunction tryPick(f, xs) {\n  var loop = function loop(xs_1_mut) {\n    loop: while (true) {\n      var xs_1 = xs_1_mut;\n      if (FSharpList__get_IsEmpty(xs_1)) {\n        return void 0;\n      } else {\n        var matchValue = f(FSharpList__get_Head(xs_1));\n        if (matchValue == null) {\n          xs_1_mut = FSharpList__get_Tail(xs_1);\n          continue loop;\n        } else {\n          return matchValue;\n        }\n      }\n      break;\n    }\n  };\n  return loop(xs);\n}\nfunction pick(f, xs) {\n  var matchValue = tryPick(f, xs);\n  if (matchValue == null) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_keyNotFoundAlt);\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.value)(matchValue);\n  }\n}\nfunction tryFind(f, xs) {\n  return tryPick(function (x) {\n    return f(x) ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.some)(x) : void 0;\n  }, xs);\n}\nfunction find(f, xs) {\n  var matchValue = tryFind(f, xs);\n  if (matchValue == null) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_keyNotFoundAlt);\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.value)(matchValue);\n  }\n}\nfunction tryFindBack(f, xs) {\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.tryFindBack)(f, toArray(xs));\n}\nfunction findBack(f, xs) {\n  var matchValue = tryFindBack(f, xs);\n  if (matchValue == null) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_keyNotFoundAlt);\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.value)(matchValue);\n  }\n}\nfunction tryFindIndex(f, xs) {\n  var loop = function loop(i_mut, xs_1_mut) {\n    loop: while (true) {\n      var i = i_mut,\n        xs_1 = xs_1_mut;\n      if (FSharpList__get_IsEmpty(xs_1)) {\n        return void 0;\n      } else if (f(FSharpList__get_Head(xs_1))) {\n        return i;\n      } else {\n        i_mut = i + 1;\n        xs_1_mut = FSharpList__get_Tail(xs_1);\n        continue loop;\n      }\n      break;\n    }\n  };\n  return loop(0, xs);\n}\nfunction findIndex(f, xs) {\n  var matchValue = tryFindIndex(f, xs);\n  if (matchValue == null) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_keyNotFoundAlt);\n  } else {\n    return matchValue | 0;\n  }\n}\nfunction tryFindIndexBack(f, xs) {\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.tryFindIndexBack)(f, toArray(xs));\n}\nfunction findIndexBack(f, xs) {\n  var matchValue = tryFindIndexBack(f, xs);\n  if (matchValue == null) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_keyNotFoundAlt);\n  } else {\n    return matchValue | 0;\n  }\n}\nfunction tryItem(n, xs) {\n  var loop = function loop(i_mut, xs_1_mut) {\n    loop: while (true) {\n      var i = i_mut,\n        xs_1 = xs_1_mut;\n      if (FSharpList__get_IsEmpty(xs_1)) {\n        return void 0;\n      } else if (i === n) {\n        return (0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.some)(FSharpList__get_Head(xs_1));\n      } else {\n        i_mut = i + 1;\n        xs_1_mut = FSharpList__get_Tail(xs_1);\n        continue loop;\n      }\n      break;\n    }\n  };\n  return loop(0, xs);\n}\nfunction item(n, xs) {\n  return FSharpList__get_Item_Z524259A4(xs, n);\n}\nfunction filter(f, xs) {\n  var root = FSharpList_get_Empty();\n  var node = fold(function (acc, x) {\n    if (f(x)) {\n      var t = new FSharpList(x, void 0);\n      acc.tail = t;\n      return t;\n    } else {\n      return acc;\n    }\n  }, root, xs);\n  var t_2 = FSharpList_get_Empty();\n  node.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction partition(f, xs) {\n  var patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\n  var root2 = patternInput[1];\n  var root1 = patternInput[0];\n  var patternInput_1 = fold((0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.uncurry)(2, function (tupledArg) {\n    var lacc = tupledArg[0];\n    var racc = tupledArg[1];\n    return function (x) {\n      var t, t_2;\n      return f(x) ? [(t = new FSharpList(x, void 0), (lacc.tail = t, t)), racc] : [lacc, (t_2 = new FSharpList(x, void 0), (racc.tail = t_2, t_2))];\n    };\n  }), [root1, root2], xs);\n  var t_4 = FSharpList_get_Empty();\n  patternInput_1[0].tail = t_4;\n  var t_5 = FSharpList_get_Empty();\n  patternInput_1[1].tail = t_5;\n  return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\n}\nfunction choose(f, xs) {\n  var root = FSharpList_get_Empty();\n  var node = fold(function (acc, x) {\n    var matchValue = f(x);\n    if (matchValue == null) {\n      return acc;\n    } else {\n      var t = new FSharpList((0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.value)(matchValue), void 0);\n      acc.tail = t;\n      return t;\n    }\n  }, root, xs);\n  var t_2 = FSharpList_get_Empty();\n  node.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction contains(value, xs, eq) {\n  return tryFindIndex(function (v) {\n    return eq.Equals(value, v);\n  }, xs) != null;\n}\nfunction initialize(n, f) {\n  var xs, t;\n  var root = FSharpList_get_Empty();\n  var node = root;\n  for (var i = 0; i <= n - 1; i++) {\n    node = (xs = node, (t = new FSharpList(f(i), void 0), (xs.tail = t, t)));\n  }\n  var xs_2 = node;\n  var t_2 = FSharpList_get_Empty();\n  xs_2.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction replicate(n, x) {\n  return initialize(n, function (_arg1) {\n    return x;\n  });\n}\nfunction reduce(f, xs) {\n  if (FSharpList__get_IsEmpty(xs)) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_inputWasEmpty);\n  } else {\n    return fold(f, head(xs), tail(xs));\n  }\n}\nfunction reduceBack(f, xs) {\n  if (FSharpList__get_IsEmpty(xs)) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_inputWasEmpty);\n  } else {\n    return foldBack(f, tail(xs), head(xs));\n  }\n}\nfunction forAll(f, xs) {\n  return fold(function (acc, x) {\n    return acc && f(x);\n  }, true, xs);\n}\nfunction forAll2(f, xs, ys) {\n  return fold2(function (acc, x, y) {\n    return acc && f(x, y);\n  }, true, xs, ys);\n}\nfunction exists(f, xs) {\n  return tryFindIndex(f, xs) != null;\n}\nfunction exists2(f_mut, xs_mut, ys_mut) {\n  exists2: while (true) {\n    var f = f_mut,\n      xs = xs_mut,\n      ys = ys_mut;\n    var matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\n    var pattern_matching_result = void 0;\n    if (matchValue[0]) {\n      if (matchValue[1]) {\n        pattern_matching_result = 0;\n      } else {\n        pattern_matching_result = 2;\n      }\n    } else if (matchValue[1]) {\n      pattern_matching_result = 2;\n    } else {\n      pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n      case 0:\n        {\n          return false;\n        }\n      case 1:\n        {\n          if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\n            return true;\n          } else {\n            f_mut = f;\n            xs_mut = FSharpList__get_Tail(xs);\n            ys_mut = FSharpList__get_Tail(ys);\n            continue exists2;\n          }\n        }\n      case 2:\n        {\n          throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_differentLengths + \"\\\\nParameter name: \" + \"list2\");\n        }\n    }\n    break;\n  }\n}\nfunction unzip(xs) {\n  return foldBack(function (tupledArg, tupledArg_1) {\n    return [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])];\n  }, xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\nfunction unzip3(xs) {\n  return foldBack(function (tupledArg, tupledArg_1) {\n    return [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])];\n  }, xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\nfunction zip(xs, ys) {\n  return map2(function (x, y) {\n    return [x, y];\n  }, xs, ys);\n}\nfunction zip3(xs, ys, zs) {\n  return map3(function (x, y, z) {\n    return [x, y, z];\n  }, xs, ys, zs);\n}\nfunction sortWith(comparer, xs) {\n  var arr = toArray(xs);\n  arr.sort(comparer);\n  return ofArray(arr);\n}\nfunction sort(xs, comparer) {\n  return sortWith(function (x, y) {\n    return comparer.Compare(x, y);\n  }, xs);\n}\nfunction sortBy(projection, xs, comparer) {\n  return sortWith(function (x, y) {\n    return comparer.Compare(projection(x), projection(y));\n  }, xs);\n}\nfunction sortDescending(xs, comparer) {\n  return sortWith(function (x, y) {\n    return comparer.Compare(x, y) * -1;\n  }, xs);\n}\nfunction sortByDescending(projection, xs, comparer) {\n  return sortWith(function (x, y) {\n    return comparer.Compare(projection(x), projection(y)) * -1;\n  }, xs);\n}\nfunction sum(xs, adder) {\n  return fold(function (acc, x) {\n    return adder.Add(acc, x);\n  }, adder.GetZero(), xs);\n}\nfunction sumBy(f, xs, adder) {\n  return fold(function (acc, x) {\n    return adder.Add(acc, f(x));\n  }, adder.GetZero(), xs);\n}\nfunction maxBy(projection, xs, comparer) {\n  return reduce(function (x, y) {\n    return comparer.Compare(projection(y), projection(x)) > 0 ? y : x;\n  }, xs);\n}\nfunction max(xs, comparer) {\n  return reduce(function (x, y) {\n    return comparer.Compare(y, x) > 0 ? y : x;\n  }, xs);\n}\nfunction minBy(projection, xs, comparer) {\n  return reduce(function (x, y) {\n    return comparer.Compare(projection(y), projection(x)) > 0 ? x : y;\n  }, xs);\n}\nfunction min(xs, comparer) {\n  return reduce(function (x, y) {\n    return comparer.Compare(y, x) > 0 ? x : y;\n  }, xs);\n}\nfunction average(xs, averager) {\n  var count = 0;\n  var total = fold(function (acc, x) {\n    count = count + 1 | 0;\n    return averager.Add(acc, x);\n  }, averager.GetZero(), xs);\n  return averager.DivideByInt(total, count);\n}\nfunction averageBy(f, xs, averager) {\n  var count = 0;\n  var total = fold(function (acc, x) {\n    count = count + 1 | 0;\n    return averager.Add(acc, f(x));\n  }, averager.GetZero(), xs);\n  return averager.DivideByInt(total, count);\n}\nfunction permute(f, xs) {\n  return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.permute)(f, toArray(xs)));\n}\nfunction chunkBySize(chunkSize, xs) {\n  return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.map)(ofArray, (0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.chunkBySize)(chunkSize, toArray(xs))));\n}\nfunction allPairs(xs, ys) {\n  var root = FSharpList_get_Empty();\n  var node = root;\n  iterate(function (x) {\n    iterate(function (y) {\n      var xs_1, t;\n      node = (xs_1 = node, (t = new FSharpList([x, y], void 0), (xs_1.tail = t, t)));\n    }, ys);\n  }, xs);\n  var xs_3 = node;\n  var t_2 = FSharpList_get_Empty();\n  xs_3.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction skip(count_mut, xs_mut) {\n  skip: while (true) {\n    var count = count_mut,\n      xs = xs_mut;\n    if (count <= 0) {\n      return xs;\n    } else if (FSharpList__get_IsEmpty(xs)) {\n      throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_notEnoughElements + \"\\\\nParameter name: \" + \"list\");\n    } else {\n      count_mut = count - 1;\n      xs_mut = FSharpList__get_Tail(xs);\n      continue skip;\n    }\n    break;\n  }\n}\nfunction skipWhile(predicate_mut, xs_mut) {\n  skipWhile: while (true) {\n    var predicate = predicate_mut,\n      xs = xs_mut;\n    if (FSharpList__get_IsEmpty(xs)) {\n      return xs;\n    } else if (!predicate(FSharpList__get_Head(xs))) {\n      return xs;\n    } else {\n      predicate_mut = predicate;\n      xs_mut = FSharpList__get_Tail(xs);\n      continue skipWhile;\n    }\n    break;\n  }\n}\nfunction take(count, xs) {\n  if (count < 0) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_inputMustBeNonNegative + \"\\\\nParameter name: \" + \"count\");\n  }\n  var loop = function loop(i_mut, acc_mut, xs_1_mut) {\n    var t;\n    loop: while (true) {\n      var i = i_mut,\n        acc = acc_mut,\n        xs_1 = xs_1_mut;\n      if (i <= 0) {\n        return acc;\n      } else if (FSharpList__get_IsEmpty(xs_1)) {\n        throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_notEnoughElements + \"\\\\nParameter name: \" + \"list\");\n      } else {\n        i_mut = i - 1;\n        acc_mut = (t = new FSharpList(FSharpList__get_Head(xs_1), void 0), (acc.tail = t, t));\n        xs_1_mut = FSharpList__get_Tail(xs_1);\n        continue loop;\n      }\n      break;\n    }\n  };\n  var root = FSharpList_get_Empty();\n  var node = loop(count, root, xs);\n  var t_2 = FSharpList_get_Empty();\n  node.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction takeWhile(predicate, xs) {\n  var loop = function loop(acc_mut, xs_1_mut) {\n    var t;\n    loop: while (true) {\n      var acc = acc_mut,\n        xs_1 = xs_1_mut;\n      if (FSharpList__get_IsEmpty(xs_1)) {\n        return acc;\n      } else if (!predicate(FSharpList__get_Head(xs_1))) {\n        return acc;\n      } else {\n        acc_mut = (t = new FSharpList(FSharpList__get_Head(xs_1), void 0), (acc.tail = t, t));\n        xs_1_mut = FSharpList__get_Tail(xs_1);\n        continue loop;\n      }\n      break;\n    }\n  };\n  var root = FSharpList_get_Empty();\n  var node = loop(root, xs);\n  var t_2 = FSharpList_get_Empty();\n  node.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction truncate(count, xs) {\n  var loop = function loop(i_mut, acc_mut, xs_1_mut) {\n    var t;\n    loop: while (true) {\n      var i = i_mut,\n        acc = acc_mut,\n        xs_1 = xs_1_mut;\n      if (i <= 0) {\n        return acc;\n      } else if (FSharpList__get_IsEmpty(xs_1)) {\n        return acc;\n      } else {\n        i_mut = i - 1;\n        acc_mut = (t = new FSharpList(FSharpList__get_Head(xs_1), void 0), (acc.tail = t, t));\n        xs_1_mut = FSharpList__get_Tail(xs_1);\n        continue loop;\n      }\n      break;\n    }\n  };\n  var root = FSharpList_get_Empty();\n  var node = loop(count, root, xs);\n  var t_2 = FSharpList_get_Empty();\n  node.tail = t_2;\n  return FSharpList__get_Tail(root);\n}\nfunction getSlice(startIndex, endIndex, xs) {\n  var len = length(xs) | 0;\n  var startIndex_1 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.defaultArg)(startIndex, 0) | 0;\n  var endIndex_1 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.defaultArg)(endIndex, len - 1) | 0;\n  if (startIndex_1 < 0) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"startIndex\");\n  } else if (endIndex_1 >= len) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"endIndex\");\n  } else if (endIndex_1 < startIndex_1) {\n    return FSharpList_get_Empty();\n  } else {\n    return take(endIndex_1 - startIndex_1 + 1, skip(startIndex_1, xs));\n  }\n}\nfunction splitAt(index, xs) {\n  if (index < 0) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_inputMustBeNonNegative + \"\\\\nParameter name: \" + \"index\");\n  }\n  if (index > FSharpList__get_Length(xs)) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_notEnoughElements + \"\\\\nParameter name: \" + \"index\");\n  }\n  return [take(index, xs), skip(index, xs)];\n}\nfunction exactlyOne(xs) {\n  if (FSharpList__get_IsEmpty(xs)) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_inputSequenceEmpty + \"\\\\nParameter name: \" + \"list\");\n  } else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\n    return FSharpList__get_Head(xs);\n  } else {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_inputSequenceTooLong + \"\\\\nParameter name: \" + \"list\");\n  }\n}\nfunction tryExactlyOne(xs) {\n  if (!FSharpList__get_IsEmpty(xs) && FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.some)(FSharpList__get_Head(xs));\n  } else {\n    return void 0;\n  }\n}\nfunction where(predicate, xs) {\n  return filter(predicate, xs);\n}\nfunction pairwise(xs) {\n  return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.pairwise)(toArray(xs)));\n}\nfunction windowed(windowSize, xs) {\n  return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.map)(ofArray, (0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.windowed)(windowSize, toArray(xs))));\n}\nfunction splitInto(chunks, xs) {\n  return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.map)(ofArray, (0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.splitInto)(chunks, toArray(xs))));\n}\nfunction transpose(lists) {\n  return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.map)(ofArray, (0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.transpose)((0,_Array_js__WEBPACK_IMPORTED_MODULE_6__.map)(toArray, Array.from(lists)))));\n}\nfunction insertAt(index, y, xs) {\n  var i = -1;\n  var isDone = false;\n  var result = fold(function (acc, x) {\n    i = i + 1 | 0;\n    if (i === index) {\n      isDone = true;\n      return FSharpList_Cons_305B8EAC(x, FSharpList_Cons_305B8EAC(y, acc));\n    } else {\n      return FSharpList_Cons_305B8EAC(x, acc);\n    }\n  }, FSharpList_get_Empty(), xs);\n  return reverse(isDone ? result : i + 1 === index ? FSharpList_Cons_305B8EAC(y, result) : function () {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }());\n}\nfunction insertManyAt(index, ys, xs) {\n  var i = -1;\n  var isDone = false;\n  var ys_1 = ofSeq(ys);\n  var result = fold(function (acc, x) {\n    i = i + 1 | 0;\n    if (i === index) {\n      isDone = true;\n      return FSharpList_Cons_305B8EAC(x, append(ys_1, acc));\n    } else {\n      return FSharpList_Cons_305B8EAC(x, acc);\n    }\n  }, FSharpList_get_Empty(), xs);\n  return reverse(isDone ? result : i + 1 === index ? append(ys_1, result) : function () {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }());\n}\nfunction removeAt(index, xs) {\n  var i = -1;\n  var isDone = false;\n  var ys = filter(function (_arg1) {\n    i = i + 1 | 0;\n    if (i === index) {\n      isDone = true;\n      return false;\n    } else {\n      return true;\n    }\n  }, xs);\n  if (!isDone) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }\n  return ys;\n}\nfunction removeManyAt(index, count, xs) {\n  var i = -1;\n  var status = -1;\n  var ys = filter(function (_arg1) {\n    i = i + 1 | 0;\n    if (i === index) {\n      status = 0;\n      return false;\n    } else if (i > index) {\n      if (i < index + count) {\n        return false;\n      } else {\n        status = 1;\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }, xs);\n  var status_1 = (status === 0 && i + 1 === index + count ? 1 : status) | 0;\n  if (status_1 < 1) {\n    var arg = status_1 < 0 ? \"index\" : \"count\";\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + arg);\n  }\n  return ys;\n}\nfunction updateAt(index, y, xs) {\n  var isDone = false;\n  var ys = mapIndexed(function (i, x) {\n    if (i === index) {\n      isDone = true;\n      return y;\n    } else {\n      return x;\n    }\n  }, xs);\n  if (!isDone) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_4__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }\n  return ys;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/List.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Long.js":
/*!*********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Long.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"get_Zero\": () => (/* binding */ get_Zero),\n/* harmony export */   \"get_One\": () => (/* binding */ get_One),\n/* harmony export */   \"op_Addition\": () => (/* binding */ op_Addition),\n/* harmony export */   \"op_Subtraction\": () => (/* binding */ op_Subtraction),\n/* harmony export */   \"op_Multiply\": () => (/* binding */ op_Multiply),\n/* harmony export */   \"op_Division\": () => (/* binding */ op_Division),\n/* harmony export */   \"op_Modulus\": () => (/* binding */ op_Modulus),\n/* harmony export */   \"op_UnaryNegation\": () => (/* binding */ op_UnaryNegation),\n/* harmony export */   \"op_LeftShift\": () => (/* binding */ op_LeftShift),\n/* harmony export */   \"op_RightShift\": () => (/* binding */ op_RightShift),\n/* harmony export */   \"op_RightShiftUnsigned\": () => (/* binding */ op_RightShiftUnsigned),\n/* harmony export */   \"op_BitwiseAnd\": () => (/* binding */ op_BitwiseAnd),\n/* harmony export */   \"op_BitwiseOr\": () => (/* binding */ op_BitwiseOr),\n/* harmony export */   \"op_ExclusiveOr\": () => (/* binding */ op_ExclusiveOr),\n/* harmony export */   \"op_LogicalNot\": () => (/* binding */ op_LogicalNot),\n/* harmony export */   \"op_LessThan\": () => (/* binding */ op_LessThan),\n/* harmony export */   \"op_LessThanOrEqual\": () => (/* binding */ op_LessThanOrEqual),\n/* harmony export */   \"op_GreaterThan\": () => (/* binding */ op_GreaterThan),\n/* harmony export */   \"op_GreaterThanOrEqual\": () => (/* binding */ op_GreaterThanOrEqual),\n/* harmony export */   \"op_Equality\": () => (/* binding */ op_Equality),\n/* harmony export */   \"op_Inequality\": () => (/* binding */ op_Inequality),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"fromInt\": () => (/* binding */ fromInt),\n/* harmony export */   \"fromBits\": () => (/* binding */ fromBits),\n/* harmony export */   \"fromBytes\": () => (/* binding */ fromBytes),\n/* harmony export */   \"fromNumber\": () => (/* binding */ fromNumber),\n/* harmony export */   \"fromString\": () => (/* binding */ fromString),\n/* harmony export */   \"fromValue\": () => (/* binding */ fromValue),\n/* harmony export */   \"toInt\": () => (/* binding */ toInt),\n/* harmony export */   \"toBytes\": () => (/* binding */ toBytes),\n/* harmony export */   \"toNumber\": () => (/* binding */ toNumber),\n/* harmony export */   \"toString\": () => (/* binding */ toString),\n/* harmony export */   \"getLowBits\": () => (/* binding */ getLowBits),\n/* harmony export */   \"getHighBits\": () => (/* binding */ getHighBits),\n/* harmony export */   \"getLowBitsUnsigned\": () => (/* binding */ getLowBitsUnsigned),\n/* harmony export */   \"getHighBitsUnsigned\": () => (/* binding */ getHighBitsUnsigned),\n/* harmony export */   \"abs\": () => (/* binding */ abs),\n/* harmony export */   \"fromInteger\": () => (/* binding */ fromInteger),\n/* harmony export */   \"parse\": () => (/* binding */ parse),\n/* harmony export */   \"tryParse\": () => (/* binding */ tryParse),\n/* harmony export */   \"unixEpochMillisecondsToTicks\": () => (/* binding */ unixEpochMillisecondsToTicks),\n/* harmony export */   \"ticksToUnixEpochMilliseconds\": () => (/* binding */ ticksToUnixEpochMilliseconds),\n/* harmony export */   \"divRem\": () => (/* binding */ divRem)\n/* harmony export */ });\n/* harmony import */ var _Int32_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Int32.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Int32.js\");\n/* harmony import */ var _lib_long_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/long.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/lib/long.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_lib_long_js__WEBPACK_IMPORTED_MODULE_0__.Long);\nvar get_Zero = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.ZERO;\nvar get_One = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.ONE;\nvar op_Addition = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.add;\nvar op_Subtraction = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.subtract;\nvar op_Multiply = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.multiply;\nvar op_Division = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.divide;\nvar op_Modulus = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.modulo;\nvar op_UnaryNegation = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.negate;\nvar op_LeftShift = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.shiftLeft;\nvar op_RightShift = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.shiftRight;\nvar op_RightShiftUnsigned = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.shiftRightUnsigned;\nvar op_BitwiseAnd = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.and;\nvar op_BitwiseOr = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.or;\nvar op_ExclusiveOr = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.xor;\nvar op_LogicalNot = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.not;\nvar op_LessThan = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.lessThan;\nvar op_LessThanOrEqual = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.lessThanOrEqual;\nvar op_GreaterThan = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.greaterThan;\nvar op_GreaterThanOrEqual = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.greaterThanOrEqual;\nvar op_Equality = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.equals;\nvar op_Inequality = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.notEquals;\nvar equals = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.equals;\nvar compare = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.compare;\nvar fromInt = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.fromInt;\nvar fromBits = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.fromBits;\nvar fromBytes = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.fromBytes;\nvar fromNumber = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.fromNumber;\nvar fromString = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.fromString;\nvar fromValue = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.fromValue;\nvar toInt = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.toInt;\nvar toBytes = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.toBytes;\nvar toNumber = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.toNumber;\nvar toString = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.toString;\nvar getLowBits = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.getLowBits;\nvar getHighBits = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.getHighBits;\nvar getLowBitsUnsigned = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.getLowBitsUnsigned;\nvar getHighBitsUnsigned = _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n  switch (radix) {\n    case 2:\n      return unsigned ? \"1111111111111111111111111111111111111111111111111111111111111111\" : isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\" : \"111111111111111111111111111111111111111111111111111111111111111\";\n    case 8:\n      return unsigned ? \"1777777777777777777777\" : isNegative ? \"1000000000000000000000\" : \"777777777777777777777\";\n    case 10:\n      return unsigned ? \"18446744073709551615\" : isNegative ? \"9223372036854775808\" : \"9223372036854775807\";\n    case 16:\n      return unsigned ? \"FFFFFFFFFFFFFFFF\" : isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\";\n    default:\n      throw new Error(\"Invalid radix.\");\n  }\n}\nfunction abs(x) {\n  if (!x.unsigned && _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.isNegative(x)) {\n    return op_UnaryNegation(x);\n  } else {\n    return x;\n  }\n}\nfunction fromInteger(value, unsigned, kind) {\n  var x = value;\n  var xh = 0;\n  switch (kind) {\n    case 0:\n      x = value << 24 >> 24;\n      xh = x;\n      break;\n    case 4:\n      x = value << 24 >>> 24;\n      break;\n    case 1:\n      x = value << 16 >> 16;\n      xh = x;\n      break;\n    case 5:\n      x = value << 16 >>> 16;\n      break;\n    case 2:\n      x = value >> 0;\n      xh = x;\n      break;\n    case 6:\n      x = value >>> 0;\n      break;\n  }\n  return _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.fromBits(x, xh >> 31, unsigned);\n}\nfunction parse(str, style, unsigned, _bitsize, radix) {\n  var res = (0,_Int32_js__WEBPACK_IMPORTED_MODULE_1__.isValid)(str, style, radix);\n  if (res != null) {\n    var lessOrEqual = function lessOrEqual(x, y) {\n      var len = Math.max(x.length, y.length);\n      return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n    };\n    var isNegative = res.sign === \"-\";\n    var maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n    if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n      str = isNegative ? res.sign + res.digits : res.digits;\n      return _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.fromString(str, unsigned, res.radix);\n    }\n  }\n  throw new Error(\"Input string was not in a correct format.\");\n}\nfunction tryParse(str, style, unsigned, bitsize, defValue) {\n  try {\n    defValue.contents = parse(str, style, unsigned, bitsize);\n    return true;\n  } catch (_a) {\n    return false;\n  }\n}\nfunction unixEpochMillisecondsToTicks(ms, offset) {\n  return op_Multiply(op_Addition(op_Addition(_lib_long_js__WEBPACK_IMPORTED_MODULE_0__.fromNumber(ms), 62135596800000), offset), 10000);\n}\nfunction ticksToUnixEpochMilliseconds(ticks) {\n  return _lib_long_js__WEBPACK_IMPORTED_MODULE_0__.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n// export function makeRangeStepFunction(step: Long, last: Long, unsigned: boolean) {\n//   const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Long) => {\n//     const comparedWithLast = LongLib.compare(x, last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\nfunction divRem(x, y, out) {\n  var div = op_Division(x, y);\n  var rem = op_Modulus(x, y);\n  if (out != null) {\n    out.contents = rem;\n    return div;\n  } else {\n    return [div, rem];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Long.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Map.js":
/*!********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Map.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MapTreeLeaf$2\": () => (/* binding */ MapTreeLeaf$2),\n/* harmony export */   \"MapTreeLeaf$2$reflection\": () => (/* binding */ MapTreeLeaf$2$reflection),\n/* harmony export */   \"MapTreeLeaf$2_$ctor_5BDDA1\": () => (/* binding */ MapTreeLeaf$2_$ctor_5BDDA1),\n/* harmony export */   \"MapTreeLeaf$2__get_Key\": () => (/* binding */ MapTreeLeaf$2__get_Key),\n/* harmony export */   \"MapTreeLeaf$2__get_Value\": () => (/* binding */ MapTreeLeaf$2__get_Value),\n/* harmony export */   \"MapTreeNode$2\": () => (/* binding */ MapTreeNode$2),\n/* harmony export */   \"MapTreeNode$2$reflection\": () => (/* binding */ MapTreeNode$2$reflection),\n/* harmony export */   \"MapTreeNode$2_$ctor_499A11FD\": () => (/* binding */ MapTreeNode$2_$ctor_499A11FD),\n/* harmony export */   \"MapTreeNode$2__get_Left\": () => (/* binding */ MapTreeNode$2__get_Left),\n/* harmony export */   \"MapTreeNode$2__get_Right\": () => (/* binding */ MapTreeNode$2__get_Right),\n/* harmony export */   \"MapTreeNode$2__get_Height\": () => (/* binding */ MapTreeNode$2__get_Height),\n/* harmony export */   \"MapTreeModule_empty\": () => (/* binding */ MapTreeModule_empty),\n/* harmony export */   \"MapTreeModule_sizeAux\": () => (/* binding */ MapTreeModule_sizeAux),\n/* harmony export */   \"MapTreeModule_size\": () => (/* binding */ MapTreeModule_size),\n/* harmony export */   \"MapTreeModule_mk\": () => (/* binding */ MapTreeModule_mk),\n/* harmony export */   \"MapTreeModule_rebalance\": () => (/* binding */ MapTreeModule_rebalance),\n/* harmony export */   \"MapTreeModule_add\": () => (/* binding */ MapTreeModule_add),\n/* harmony export */   \"MapTreeModule_tryFind\": () => (/* binding */ MapTreeModule_tryFind),\n/* harmony export */   \"MapTreeModule_find\": () => (/* binding */ MapTreeModule_find),\n/* harmony export */   \"MapTreeModule_partition1\": () => (/* binding */ MapTreeModule_partition1),\n/* harmony export */   \"MapTreeModule_partitionAux\": () => (/* binding */ MapTreeModule_partitionAux),\n/* harmony export */   \"MapTreeModule_partition\": () => (/* binding */ MapTreeModule_partition),\n/* harmony export */   \"MapTreeModule_filter1\": () => (/* binding */ MapTreeModule_filter1),\n/* harmony export */   \"MapTreeModule_filterAux\": () => (/* binding */ MapTreeModule_filterAux),\n/* harmony export */   \"MapTreeModule_filter\": () => (/* binding */ MapTreeModule_filter),\n/* harmony export */   \"MapTreeModule_spliceOutSuccessor\": () => (/* binding */ MapTreeModule_spliceOutSuccessor),\n/* harmony export */   \"MapTreeModule_remove\": () => (/* binding */ MapTreeModule_remove),\n/* harmony export */   \"MapTreeModule_change\": () => (/* binding */ MapTreeModule_change),\n/* harmony export */   \"MapTreeModule_mem\": () => (/* binding */ MapTreeModule_mem),\n/* harmony export */   \"MapTreeModule_iterOpt\": () => (/* binding */ MapTreeModule_iterOpt),\n/* harmony export */   \"MapTreeModule_iter\": () => (/* binding */ MapTreeModule_iter),\n/* harmony export */   \"MapTreeModule_tryPickOpt\": () => (/* binding */ MapTreeModule_tryPickOpt),\n/* harmony export */   \"MapTreeModule_tryPick\": () => (/* binding */ MapTreeModule_tryPick),\n/* harmony export */   \"MapTreeModule_existsOpt\": () => (/* binding */ MapTreeModule_existsOpt),\n/* harmony export */   \"MapTreeModule_exists\": () => (/* binding */ MapTreeModule_exists),\n/* harmony export */   \"MapTreeModule_forallOpt\": () => (/* binding */ MapTreeModule_forallOpt),\n/* harmony export */   \"MapTreeModule_forall\": () => (/* binding */ MapTreeModule_forall),\n/* harmony export */   \"MapTreeModule_map\": () => (/* binding */ MapTreeModule_map),\n/* harmony export */   \"MapTreeModule_mapiOpt\": () => (/* binding */ MapTreeModule_mapiOpt),\n/* harmony export */   \"MapTreeModule_mapi\": () => (/* binding */ MapTreeModule_mapi),\n/* harmony export */   \"MapTreeModule_foldBackOpt\": () => (/* binding */ MapTreeModule_foldBackOpt),\n/* harmony export */   \"MapTreeModule_foldBack\": () => (/* binding */ MapTreeModule_foldBack),\n/* harmony export */   \"MapTreeModule_foldOpt\": () => (/* binding */ MapTreeModule_foldOpt),\n/* harmony export */   \"MapTreeModule_fold\": () => (/* binding */ MapTreeModule_fold),\n/* harmony export */   \"MapTreeModule_foldSectionOpt\": () => (/* binding */ MapTreeModule_foldSectionOpt),\n/* harmony export */   \"MapTreeModule_foldSection\": () => (/* binding */ MapTreeModule_foldSection),\n/* harmony export */   \"MapTreeModule_toList\": () => (/* binding */ MapTreeModule_toList),\n/* harmony export */   \"MapTreeModule_copyToArray\": () => (/* binding */ MapTreeModule_copyToArray),\n/* harmony export */   \"MapTreeModule_toArray\": () => (/* binding */ MapTreeModule_toArray),\n/* harmony export */   \"MapTreeModule_ofList\": () => (/* binding */ MapTreeModule_ofList),\n/* harmony export */   \"MapTreeModule_mkFromEnumerator\": () => (/* binding */ MapTreeModule_mkFromEnumerator),\n/* harmony export */   \"MapTreeModule_ofArray\": () => (/* binding */ MapTreeModule_ofArray),\n/* harmony export */   \"MapTreeModule_ofSeq\": () => (/* binding */ MapTreeModule_ofSeq),\n/* harmony export */   \"MapTreeModule_MapIterator$2\": () => (/* binding */ MapTreeModule_MapIterator$2),\n/* harmony export */   \"MapTreeModule_MapIterator$2$reflection\": () => (/* binding */ MapTreeModule_MapIterator$2$reflection),\n/* harmony export */   \"MapTreeModule_collapseLHS\": () => (/* binding */ MapTreeModule_collapseLHS),\n/* harmony export */   \"MapTreeModule_mkIterator\": () => (/* binding */ MapTreeModule_mkIterator),\n/* harmony export */   \"MapTreeModule_notStarted\": () => (/* binding */ MapTreeModule_notStarted),\n/* harmony export */   \"MapTreeModule_alreadyFinished\": () => (/* binding */ MapTreeModule_alreadyFinished),\n/* harmony export */   \"MapTreeModule_current\": () => (/* binding */ MapTreeModule_current),\n/* harmony export */   \"MapTreeModule_moveNext\": () => (/* binding */ MapTreeModule_moveNext),\n/* harmony export */   \"MapTreeModule_mkIEnumerator\": () => (/* binding */ MapTreeModule_mkIEnumerator),\n/* harmony export */   \"MapTreeModule_toSeq\": () => (/* binding */ MapTreeModule_toSeq),\n/* harmony export */   \"FSharpMap\": () => (/* binding */ FSharpMap),\n/* harmony export */   \"FSharpMap$reflection\": () => (/* binding */ FSharpMap$reflection),\n/* harmony export */   \"FSharpMap_$ctor\": () => (/* binding */ FSharpMap_$ctor),\n/* harmony export */   \"FSharpMap_get_Empty\": () => (/* binding */ FSharpMap_get_Empty),\n/* harmony export */   \"FSharpMap_Create\": () => (/* binding */ FSharpMap_Create),\n/* harmony export */   \"FSharpMap__get_Comparer\": () => (/* binding */ FSharpMap__get_Comparer),\n/* harmony export */   \"FSharpMap__get_Tree\": () => (/* binding */ FSharpMap__get_Tree),\n/* harmony export */   \"FSharpMap__Add\": () => (/* binding */ FSharpMap__Add),\n/* harmony export */   \"FSharpMap__Change\": () => (/* binding */ FSharpMap__Change),\n/* harmony export */   \"FSharpMap__get_IsEmpty\": () => (/* binding */ FSharpMap__get_IsEmpty),\n/* harmony export */   \"FSharpMap__get_Item\": () => (/* binding */ FSharpMap__get_Item),\n/* harmony export */   \"FSharpMap__TryPick\": () => (/* binding */ FSharpMap__TryPick),\n/* harmony export */   \"FSharpMap__Exists\": () => (/* binding */ FSharpMap__Exists),\n/* harmony export */   \"FSharpMap__Filter\": () => (/* binding */ FSharpMap__Filter),\n/* harmony export */   \"FSharpMap__ForAll\": () => (/* binding */ FSharpMap__ForAll),\n/* harmony export */   \"FSharpMap__Fold\": () => (/* binding */ FSharpMap__Fold),\n/* harmony export */   \"FSharpMap__FoldSection\": () => (/* binding */ FSharpMap__FoldSection),\n/* harmony export */   \"FSharpMap__Iterate\": () => (/* binding */ FSharpMap__Iterate),\n/* harmony export */   \"FSharpMap__MapRange\": () => (/* binding */ FSharpMap__MapRange),\n/* harmony export */   \"FSharpMap__Map\": () => (/* binding */ FSharpMap__Map),\n/* harmony export */   \"FSharpMap__Partition\": () => (/* binding */ FSharpMap__Partition),\n/* harmony export */   \"FSharpMap__get_Count\": () => (/* binding */ FSharpMap__get_Count),\n/* harmony export */   \"FSharpMap__ContainsKey\": () => (/* binding */ FSharpMap__ContainsKey),\n/* harmony export */   \"FSharpMap__Remove\": () => (/* binding */ FSharpMap__Remove),\n/* harmony export */   \"FSharpMap__TryGetValue\": () => (/* binding */ FSharpMap__TryGetValue),\n/* harmony export */   \"FSharpMap__get_Keys\": () => (/* binding */ FSharpMap__get_Keys),\n/* harmony export */   \"FSharpMap__get_Values\": () => (/* binding */ FSharpMap__get_Values),\n/* harmony export */   \"FSharpMap__TryFind\": () => (/* binding */ FSharpMap__TryFind),\n/* harmony export */   \"FSharpMap__ToList\": () => (/* binding */ FSharpMap__ToList),\n/* harmony export */   \"FSharpMap__ToArray\": () => (/* binding */ FSharpMap__ToArray),\n/* harmony export */   \"FSharpMap__ComputeHashCode\": () => (/* binding */ FSharpMap__ComputeHashCode),\n/* harmony export */   \"isEmpty\": () => (/* binding */ isEmpty),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"change\": () => (/* binding */ change),\n/* harmony export */   \"find\": () => (/* binding */ find),\n/* harmony export */   \"tryFind\": () => (/* binding */ tryFind),\n/* harmony export */   \"remove\": () => (/* binding */ remove),\n/* harmony export */   \"containsKey\": () => (/* binding */ containsKey),\n/* harmony export */   \"iterate\": () => (/* binding */ iterate),\n/* harmony export */   \"tryPick\": () => (/* binding */ tryPick),\n/* harmony export */   \"pick\": () => (/* binding */ pick),\n/* harmony export */   \"exists\": () => (/* binding */ exists),\n/* harmony export */   \"filter\": () => (/* binding */ filter),\n/* harmony export */   \"partition\": () => (/* binding */ partition),\n/* harmony export */   \"forAll\": () => (/* binding */ forAll),\n/* harmony export */   \"map\": () => (/* binding */ map),\n/* harmony export */   \"fold\": () => (/* binding */ fold),\n/* harmony export */   \"foldBack\": () => (/* binding */ foldBack),\n/* harmony export */   \"toSeq\": () => (/* binding */ toSeq),\n/* harmony export */   \"findKey\": () => (/* binding */ findKey),\n/* harmony export */   \"tryFindKey\": () => (/* binding */ tryFindKey),\n/* harmony export */   \"ofList\": () => (/* binding */ ofList),\n/* harmony export */   \"ofSeq\": () => (/* binding */ ofSeq),\n/* harmony export */   \"ofArray\": () => (/* binding */ ofArray),\n/* harmony export */   \"toList\": () => (/* binding */ toList),\n/* harmony export */   \"toArray\": () => (/* binding */ toArray),\n/* harmony export */   \"keys\": () => (/* binding */ keys),\n/* harmony export */   \"values\": () => (/* binding */ values),\n/* harmony export */   \"empty\": () => (/* binding */ empty),\n/* harmony export */   \"count\": () => (/* binding */ count)\n/* harmony export */ });\n/* harmony import */ var _Reflection_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _Option_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Option.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\");\n/* harmony import */ var _List_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./List.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/List.js\");\n/* harmony import */ var _Array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Array.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _Seq_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Seq.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Seq.js\");\n/* harmony import */ var _String_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./String.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js\");\n/* harmony import */ var _FSharp_Core_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./FSharp.Core.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/FSharp.Core.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\n\nvar MapTreeLeaf$2 = /*#__PURE__*/_createClass(function MapTreeLeaf$2(k, v) {\n  _classCallCheck(this, MapTreeLeaf$2);\n  this.k = k;\n  this.v = v;\n});\nfunction MapTreeLeaf$2$reflection(gen0, gen1) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_0__.class_type)(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\n}\nfunction MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\n  return new MapTreeLeaf$2(k, v);\n}\nfunction MapTreeLeaf$2__get_Key(_) {\n  return _.k;\n}\nfunction MapTreeLeaf$2__get_Value(_) {\n  return _.v;\n}\nvar MapTreeNode$2 = /*#__PURE__*/function (_MapTreeLeaf$) {\n  _inherits(MapTreeNode$2, _MapTreeLeaf$);\n  var _super = _createSuper(MapTreeNode$2);\n  function MapTreeNode$2(k, v, left, right, h) {\n    var _this;\n    _classCallCheck(this, MapTreeNode$2);\n    _this = _super.call(this, k, v);\n    _this.left = left;\n    _this.right = right;\n    _this.h = h | 0;\n    return _this;\n  }\n  return _createClass(MapTreeNode$2);\n}(MapTreeLeaf$2);\nfunction MapTreeNode$2$reflection(gen0, gen1) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_0__.class_type)(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\n}\nfunction MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\n  return new MapTreeNode$2(k, v, left, right, h);\n}\nfunction MapTreeNode$2__get_Left(_) {\n  return _.left;\n}\nfunction MapTreeNode$2__get_Right(_) {\n  return _.right;\n}\nfunction MapTreeNode$2__get_Height(_) {\n  return _.h;\n}\nfunction MapTreeModule_empty() {\n  return void 0;\n}\nfunction MapTreeModule_sizeAux(acc_mut, m_mut) {\n  MapTreeModule_sizeAux: while (true) {\n    var acc = acc_mut,\n      m = m_mut;\n    if (m != null) {\n      var m2 = m;\n      if (m2 instanceof MapTreeNode$2) {\n        acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\n        m_mut = MapTreeNode$2__get_Right(m2);\n        continue MapTreeModule_sizeAux;\n      } else {\n        return acc + 1 | 0;\n      }\n    } else {\n      return acc | 0;\n    }\n    break;\n  }\n}\nfunction MapTreeModule_size(x) {\n  return MapTreeModule_sizeAux(0, x);\n}\nfunction MapTreeModule_mk(l, k, v, r) {\n  var hl;\n  var m = l;\n  if (m != null) {\n    var m2 = m;\n    hl = m2 instanceof MapTreeNode$2 ? MapTreeNode$2__get_Height(m2) : 1;\n  } else {\n    hl = 0;\n  }\n  var hr;\n  var m_1 = r;\n  if (m_1 != null) {\n    var m2_1 = m_1;\n    hr = m2_1 instanceof MapTreeNode$2 ? MapTreeNode$2__get_Height(m2_1) : 1;\n  } else {\n    hr = 0;\n  }\n  var m_2 = (hl < hr ? hr : hl) | 0;\n  if (m_2 === 0) {\n    return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n  } else {\n    return MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\n  }\n}\nfunction MapTreeModule_rebalance(t1, k, v, t2) {\n  var m_2, m2_2, m_3, m2_3;\n  var t1h;\n  var m = t1;\n  if (m != null) {\n    var m2 = m;\n    t1h = m2 instanceof MapTreeNode$2 ? MapTreeNode$2__get_Height(m2) : 1;\n  } else {\n    t1h = 0;\n  }\n  var t2h;\n  var m_1 = t2;\n  if (m_1 != null) {\n    var m2_1 = m_1;\n    t2h = m2_1 instanceof MapTreeNode$2 ? MapTreeNode$2__get_Height(m2_1) : 1;\n  } else {\n    t2h = 0;\n  }\n  if (t2h > t1h + 2) {\n    var matchValue = (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(t2);\n    if (matchValue instanceof MapTreeNode$2) {\n      if ((m_2 = MapTreeNode$2__get_Left(matchValue), m_2 != null ? (m2_2 = m_2, m2_2 instanceof MapTreeNode$2 ? MapTreeNode$2__get_Height(m2_2) : 1) : 0) > t1h + 1) {\n        var matchValue_1 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(MapTreeNode$2__get_Left(matchValue));\n        if (matchValue_1 instanceof MapTreeNode$2) {\n          return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\n        } else {\n          throw new Error(\"internal error: Map.rebalance\");\n        }\n      } else {\n        return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\n      }\n    } else {\n      throw new Error(\"internal error: Map.rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    var matchValue_2 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(t1);\n    if (matchValue_2 instanceof MapTreeNode$2) {\n      if ((m_3 = MapTreeNode$2__get_Right(matchValue_2), m_3 != null ? (m2_3 = m_3, m2_3 instanceof MapTreeNode$2 ? MapTreeNode$2__get_Height(m2_3) : 1) : 0) > t2h + 1) {\n        var matchValue_3 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(MapTreeNode$2__get_Right(matchValue_2));\n        if (matchValue_3 instanceof MapTreeNode$2) {\n          return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\n        } else {\n          throw new Error(\"internal error: Map.rebalance\");\n        }\n      } else {\n        return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\n      }\n    } else {\n      throw new Error(\"internal error: Map.rebalance\");\n    }\n  } else {\n    return MapTreeModule_mk(t1, k, v, t2);\n  }\n}\nfunction MapTreeModule_add(comparer, k, v, m) {\n  if (m != null) {\n    var m2 = m;\n    var c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n    if (m2 instanceof MapTreeNode$2) {\n      if (c < 0) {\n        return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n      } else if (c === 0) {\n        return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n      } else {\n        return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\n      }\n    } else if (c < 0) {\n      return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\n    } else if (c === 0) {\n      return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    } else {\n      return MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\n    }\n  } else {\n    return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n  }\n}\nfunction MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\n  MapTreeModule_tryFind: while (true) {\n    var comparer = comparer_mut,\n      k = k_mut,\n      m = m_mut;\n    if (m != null) {\n      var m2 = m;\n      var c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n      if (c === 0) {\n        return (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.some)(MapTreeLeaf$2__get_Value(m2));\n      } else if (m2 instanceof MapTreeNode$2) {\n        comparer_mut = comparer;\n        k_mut = k;\n        m_mut = c < 0 ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2);\n        continue MapTreeModule_tryFind;\n      } else {\n        return void 0;\n      }\n    } else {\n      return void 0;\n    }\n    break;\n  }\n}\nfunction MapTreeModule_find(comparer, k, m) {\n  var matchValue = MapTreeModule_tryFind(comparer, k, m);\n  if (matchValue == null) {\n    throw new Error();\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(matchValue);\n  }\n}\nfunction MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\n  if (f(k, v)) {\n    return [MapTreeModule_add(comparer, k, v, acc1), acc2];\n  } else {\n    return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\n  }\n}\nfunction MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\n  MapTreeModule_partitionAux: while (true) {\n    var comparer = comparer_mut,\n      f = f_mut,\n      m = m_mut,\n      acc_0 = acc_0_mut,\n      acc_1 = acc_1_mut;\n    var acc = [acc_0, acc_1];\n    if (m != null) {\n      var m2 = m;\n      if (m2 instanceof MapTreeNode$2) {\n        var acc_2 = MapTreeModule_partitionAux(comparer, f, MapTreeNode$2__get_Right(m2), acc[0], acc[1]);\n        var acc_3 = MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_2[0], acc_2[1]);\n        comparer_mut = comparer;\n        f_mut = f;\n        m_mut = MapTreeNode$2__get_Left(m2);\n        acc_0_mut = acc_3[0];\n        acc_1_mut = acc_3[1];\n        continue MapTreeModule_partitionAux;\n      } else {\n        return MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc[0], acc[1]);\n      }\n    } else {\n      return acc;\n    }\n    break;\n  }\n}\nfunction MapTreeModule_partition(comparer, f, m) {\n  return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\n}\nfunction MapTreeModule_filter1(comparer, f, k, v, acc) {\n  if (f(k, v)) {\n    return MapTreeModule_add(comparer, k, v, acc);\n  } else {\n    return acc;\n  }\n}\nfunction MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\n  MapTreeModule_filterAux: while (true) {\n    var comparer = comparer_mut,\n      f = f_mut,\n      m = m_mut,\n      acc = acc_mut;\n    if (m != null) {\n      var m2 = m;\n      if (m2 instanceof MapTreeNode$2) {\n        var acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\n        var acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\n        comparer_mut = comparer;\n        f_mut = f;\n        m_mut = MapTreeNode$2__get_Right(m2);\n        acc_mut = acc_2;\n        continue MapTreeModule_filterAux;\n      } else {\n        return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\n      }\n    } else {\n      return acc;\n    }\n    break;\n  }\n}\nfunction MapTreeModule_filter(comparer, f, m) {\n  return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\n}\nfunction MapTreeModule_spliceOutSuccessor(m) {\n  if (m != null) {\n    var m2 = m;\n    if (m2 instanceof MapTreeNode$2) {\n      if (MapTreeNode$2__get_Left(m2) == null) {\n        return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\n      } else {\n        var patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\n        return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\n      }\n    } else {\n      return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\n    }\n  } else {\n    throw new Error(\"internal error: Map.spliceOutSuccessor\");\n  }\n}\nfunction MapTreeModule_remove(comparer, k, m) {\n  if (m != null) {\n    var m2 = m;\n    var c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n    if (m2 instanceof MapTreeNode$2) {\n      if (c < 0) {\n        return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n      } else if (c === 0) {\n        if (MapTreeNode$2__get_Left(m2) == null) {\n          return MapTreeNode$2__get_Right(m2);\n        } else if (MapTreeNode$2__get_Right(m2) == null) {\n          return MapTreeNode$2__get_Left(m2);\n        } else {\n          var patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n          return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n        }\n      } else {\n        return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\n      }\n    } else if (c === 0) {\n      return MapTreeModule_empty();\n    } else {\n      return m;\n    }\n  } else {\n    return MapTreeModule_empty();\n  }\n}\nfunction MapTreeModule_change(comparer, k, u, m) {\n  if (m != null) {\n    var m2 = m;\n    if (m2 instanceof MapTreeNode$2) {\n      var c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n      if (c < 0) {\n        return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n      } else if (c === 0) {\n        var matchValue_1 = u((0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.some)(MapTreeLeaf$2__get_Value(m2)));\n        if (matchValue_1 != null) {\n          return MapTreeNode$2_$ctor_499A11FD(k, (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(matchValue_1), MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n        } else if (MapTreeNode$2__get_Left(m2) == null) {\n          return MapTreeNode$2__get_Right(m2);\n        } else if (MapTreeNode$2__get_Right(m2) == null) {\n          return MapTreeNode$2__get_Left(m2);\n        } else {\n          var patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n          return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n        }\n      } else {\n        return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\n      }\n    } else {\n      var c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n      if (c_1 < 0) {\n        var matchValue_2 = u(void 0);\n        if (matchValue_2 != null) {\n          return MapTreeNode$2_$ctor_499A11FD(k, (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(matchValue_2), MapTreeModule_empty(), m, 2);\n        } else {\n          return m;\n        }\n      } else if (c_1 === 0) {\n        var matchValue_3 = u((0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.some)(MapTreeLeaf$2__get_Value(m2)));\n        if (matchValue_3 != null) {\n          return MapTreeLeaf$2_$ctor_5BDDA1(k, (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(matchValue_3));\n        } else {\n          return MapTreeModule_empty();\n        }\n      } else {\n        var matchValue_4 = u(void 0);\n        if (matchValue_4 != null) {\n          return MapTreeNode$2_$ctor_499A11FD(k, (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(matchValue_4), m, MapTreeModule_empty(), 2);\n        } else {\n          return m;\n        }\n      }\n    }\n  } else {\n    var matchValue = u(void 0);\n    if (matchValue != null) {\n      return MapTreeLeaf$2_$ctor_5BDDA1(k, (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(matchValue));\n    } else {\n      return m;\n    }\n  }\n}\nfunction MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\n  MapTreeModule_mem: while (true) {\n    var comparer = comparer_mut,\n      k = k_mut,\n      m = m_mut;\n    if (m != null) {\n      var m2 = m;\n      var c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n      if (m2 instanceof MapTreeNode$2) {\n        if (c < 0) {\n          comparer_mut = comparer;\n          k_mut = k;\n          m_mut = MapTreeNode$2__get_Left(m2);\n          continue MapTreeModule_mem;\n        } else if (c === 0) {\n          return true;\n        } else {\n          comparer_mut = comparer;\n          k_mut = k;\n          m_mut = MapTreeNode$2__get_Right(m2);\n          continue MapTreeModule_mem;\n        }\n      } else {\n        return c === 0;\n      }\n    } else {\n      return false;\n    }\n    break;\n  }\n}\nfunction MapTreeModule_iterOpt(f_mut, m_mut) {\n  MapTreeModule_iterOpt: while (true) {\n    var f = f_mut,\n      m = m_mut;\n    if (m != null) {\n      var m2 = m;\n      if (m2 instanceof MapTreeNode$2) {\n        MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\n        f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n        f_mut = f;\n        m_mut = MapTreeNode$2__get_Right(m2);\n        continue MapTreeModule_iterOpt;\n      } else {\n        f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n      }\n    }\n    break;\n  }\n}\nfunction MapTreeModule_iter(f, m) {\n  MapTreeModule_iterOpt(f, m);\n}\nfunction MapTreeModule_tryPickOpt(f_mut, m_mut) {\n  MapTreeModule_tryPickOpt: while (true) {\n    var f = f_mut,\n      m = m_mut;\n    if (m != null) {\n      var m2 = m;\n      if (m2 instanceof MapTreeNode$2) {\n        var matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\n        if (matchValue == null) {\n          var matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n          if (matchValue_1 == null) {\n            f_mut = f;\n            m_mut = MapTreeNode$2__get_Right(m2);\n            continue MapTreeModule_tryPickOpt;\n          } else {\n            return matchValue_1;\n          }\n        } else {\n          return matchValue;\n        }\n      } else {\n        return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n      }\n    } else {\n      return void 0;\n    }\n    break;\n  }\n}\nfunction MapTreeModule_tryPick(f, m) {\n  return MapTreeModule_tryPickOpt(f, m);\n}\nfunction MapTreeModule_existsOpt(f_mut, m_mut) {\n  MapTreeModule_existsOpt: while (true) {\n    var f = f_mut,\n      m = m_mut;\n    if (m != null) {\n      var m2 = m;\n      if (m2 instanceof MapTreeNode$2) {\n        if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\n          return true;\n        } else {\n          f_mut = f;\n          m_mut = MapTreeNode$2__get_Right(m2);\n          continue MapTreeModule_existsOpt;\n        }\n      } else {\n        return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n      }\n    } else {\n      return false;\n    }\n    break;\n  }\n}\nfunction MapTreeModule_exists(f, m) {\n  return MapTreeModule_existsOpt(f, m);\n}\nfunction MapTreeModule_forallOpt(f_mut, m_mut) {\n  MapTreeModule_forallOpt: while (true) {\n    var f = f_mut,\n      m = m_mut;\n    if (m != null) {\n      var m2 = m;\n      if (m2 instanceof MapTreeNode$2) {\n        if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) && f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\n          f_mut = f;\n          m_mut = MapTreeNode$2__get_Right(m2);\n          continue MapTreeModule_forallOpt;\n        } else {\n          return false;\n        }\n      } else {\n        return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n      }\n    } else {\n      return true;\n    }\n    break;\n  }\n}\nfunction MapTreeModule_forall(f, m) {\n  return MapTreeModule_forallOpt(f, m);\n}\nfunction MapTreeModule_map(f, m) {\n  if (m != null) {\n    var m2 = m;\n    if (m2 instanceof MapTreeNode$2) {\n      var l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\n      var v2 = f(MapTreeLeaf$2__get_Value(m2));\n      var r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\n      return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n    } else {\n      return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\n    }\n  } else {\n    return MapTreeModule_empty();\n  }\n}\nfunction MapTreeModule_mapiOpt(f, m) {\n  if (m != null) {\n    var m2 = m;\n    if (m2 instanceof MapTreeNode$2) {\n      var l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\n      var v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n      var r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\n      return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n    } else {\n      return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\n    }\n  } else {\n    return MapTreeModule_empty();\n  }\n}\nfunction MapTreeModule_mapi(f, m) {\n  return MapTreeModule_mapiOpt(f, m);\n}\nfunction MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\n  MapTreeModule_foldBackOpt: while (true) {\n    var f = f_mut,\n      m = m_mut,\n      x = x_mut;\n    if (m != null) {\n      var m2 = m;\n      if (m2 instanceof MapTreeNode$2) {\n        var x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\n        var x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n        f_mut = f;\n        m_mut = MapTreeNode$2__get_Left(m2);\n        x_mut = x_2;\n        continue MapTreeModule_foldBackOpt;\n      } else {\n        return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\n      }\n    } else {\n      return x;\n    }\n    break;\n  }\n}\nfunction MapTreeModule_foldBack(f, m, x) {\n  return MapTreeModule_foldBackOpt(f, m, x);\n}\nfunction MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\n  MapTreeModule_foldOpt: while (true) {\n    var f = f_mut,\n      x = x_mut,\n      m = m_mut;\n    if (m != null) {\n      var m2 = m;\n      if (m2 instanceof MapTreeNode$2) {\n        f_mut = f;\n        x_mut = f(MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n        m_mut = MapTreeNode$2__get_Right(m2);\n        continue MapTreeModule_foldOpt;\n      } else {\n        return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n      }\n    } else {\n      return x;\n    }\n    break;\n  }\n}\nfunction MapTreeModule_fold(f, x, m) {\n  return MapTreeModule_foldOpt(f, x, m);\n}\nfunction MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\n  var foldFromTo = function foldFromTo(f_1_mut, m_1_mut, x_1_mut) {\n    foldFromTo: while (true) {\n      var f_1 = f_1_mut,\n        m_1 = m_1_mut,\n        x_1 = x_1_mut;\n      if (m_1 != null) {\n        var m2 = m_1;\n        if (m2 instanceof MapTreeNode$2) {\n          var cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\n          var cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\n          var x_2 = cLoKey < 0 ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\n          var x_3 = cLoKey <= 0 && cKeyHi <= 0 ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\n          if (cKeyHi < 0) {\n            f_1_mut = f_1;\n            m_1_mut = MapTreeNode$2__get_Right(m2);\n            x_1_mut = x_3;\n            continue foldFromTo;\n          } else {\n            return x_3;\n          }\n        } else if (comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) <= 0 && comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) <= 0) {\n          return f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n        } else {\n          return x_1;\n        }\n      } else {\n        return x_1;\n      }\n      break;\n    }\n  };\n  if (comparer.Compare(lo, hi) === 1) {\n    return x;\n  } else {\n    return foldFromTo(f, m, x);\n  }\n}\nfunction MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\n  return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\n}\nfunction MapTreeModule_toList(m) {\n  var loop = function loop(m_1_mut, acc_mut) {\n    loop: while (true) {\n      var m_1 = m_1_mut,\n        acc = acc_mut;\n      if (m_1 != null) {\n        var m2 = m_1;\n        if (m2 instanceof MapTreeNode$2) {\n          m_1_mut = MapTreeNode$2__get_Left(m2);\n          acc_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_2__.cons)([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc));\n          continue loop;\n        } else {\n          return (0,_List_js__WEBPACK_IMPORTED_MODULE_2__.cons)([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\n        }\n      } else {\n        return acc;\n      }\n      break;\n    }\n  };\n  return loop(m, (0,_List_js__WEBPACK_IMPORTED_MODULE_2__.empty)());\n}\nfunction MapTreeModule_copyToArray(m, arr, i) {\n  var j = i;\n  MapTreeModule_iter(function (x, y) {\n    arr[j] = [x, y];\n    j = j + 1 | 0;\n  }, m);\n}\nfunction MapTreeModule_toArray(m) {\n  var n = MapTreeModule_size(m) | 0;\n  var res = (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.fill)(new Array(n), 0, n, [null, null]);\n  MapTreeModule_copyToArray(m, res, 0);\n  return res;\n}\nfunction MapTreeModule_ofList(comparer, l) {\n  return (0,_List_js__WEBPACK_IMPORTED_MODULE_2__.fold)(function (acc, tupledArg) {\n    return MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc);\n  }, MapTreeModule_empty(), l);\n}\nfunction MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n  MapTreeModule_mkFromEnumerator: while (true) {\n    var comparer = comparer_mut,\n      acc = acc_mut,\n      e = e_mut;\n    if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      var patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n      comparer_mut = comparer;\n      acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\n      e_mut = e;\n      continue MapTreeModule_mkFromEnumerator;\n    } else {\n      return acc;\n    }\n    break;\n  }\n}\nfunction MapTreeModule_ofArray(comparer, arr) {\n  var res = MapTreeModule_empty();\n  for (var idx = 0; idx <= arr.length - 1; idx++) {\n    var forLoopVar = arr[idx];\n    res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\n  }\n  return res;\n}\nfunction MapTreeModule_ofSeq(comparer, c) {\n  if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.isArrayLike)(c)) {\n    return MapTreeModule_ofArray(comparer, c);\n  } else if (c instanceof _List_js__WEBPACK_IMPORTED_MODULE_2__.FSharpList) {\n    return MapTreeModule_ofList(comparer, c);\n  } else {\n    var ie = (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.getEnumerator)(c);\n    try {\n      return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.disposeSafe)(ie);\n    }\n  }\n}\nvar MapTreeModule_MapIterator$2 = /*#__PURE__*/function (_Record) {\n  _inherits(MapTreeModule_MapIterator$2, _Record);\n  var _super2 = _createSuper(MapTreeModule_MapIterator$2);\n  function MapTreeModule_MapIterator$2(stack, started) {\n    var _this2;\n    _classCallCheck(this, MapTreeModule_MapIterator$2);\n    _this2 = _super2.call(this);\n    _this2.stack = stack;\n    _this2.started = started;\n    return _this2;\n  }\n  return _createClass(MapTreeModule_MapIterator$2);\n}(_Types_js__WEBPACK_IMPORTED_MODULE_5__.Record);\nfunction MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_0__.record_type)(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, function () {\n    return [[\"stack\", (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_0__.list_type)((0,_Reflection_js__WEBPACK_IMPORTED_MODULE_0__.option_type)(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", _Reflection_js__WEBPACK_IMPORTED_MODULE_0__.bool_type]];\n  });\n}\nfunction MapTreeModule_collapseLHS(stack_mut) {\n  MapTreeModule_collapseLHS: while (true) {\n    var stack = stack_mut;\n    if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_2__.isEmpty)(stack)) {\n      var rest = (0,_List_js__WEBPACK_IMPORTED_MODULE_2__.tail)(stack);\n      var m = (0,_List_js__WEBPACK_IMPORTED_MODULE_2__.head)(stack);\n      if (m != null) {\n        var m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n          stack_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_2__.ofArrayWithTail)([MapTreeNode$2__get_Left(m2), MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), MapTreeNode$2__get_Right(m2)], rest);\n          continue MapTreeModule_collapseLHS;\n        } else {\n          return stack;\n        }\n      } else {\n        stack_mut = rest;\n        continue MapTreeModule_collapseLHS;\n      }\n    } else {\n      return (0,_List_js__WEBPACK_IMPORTED_MODULE_2__.empty)();\n    }\n    break;\n  }\n}\nfunction MapTreeModule_mkIterator(m) {\n  return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS((0,_List_js__WEBPACK_IMPORTED_MODULE_2__.singleton)(m)), false);\n}\nfunction MapTreeModule_notStarted() {\n  throw new Error(\"enumeration not started\");\n}\nfunction MapTreeModule_alreadyFinished() {\n  throw new Error(\"enumeration already finished\");\n}\nfunction MapTreeModule_current(i) {\n  if (i.started) {\n    var matchValue = i.stack;\n    if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_2__.isEmpty)(matchValue)) {\n      if ((0,_List_js__WEBPACK_IMPORTED_MODULE_2__.head)(matchValue) != null) {\n        var m = (0,_List_js__WEBPACK_IMPORTED_MODULE_2__.head)(matchValue);\n        if (m instanceof MapTreeNode$2) {\n          throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n        } else {\n          return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\n        }\n      } else {\n        throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n      }\n    } else {\n      return MapTreeModule_alreadyFinished();\n    }\n  } else {\n    return MapTreeModule_notStarted();\n  }\n}\nfunction MapTreeModule_moveNext(i) {\n  if (i.started) {\n    var matchValue = i.stack;\n    if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_2__.isEmpty)(matchValue)) {\n      if ((0,_List_js__WEBPACK_IMPORTED_MODULE_2__.head)(matchValue) != null) {\n        var m = (0,_List_js__WEBPACK_IMPORTED_MODULE_2__.head)(matchValue);\n        if (m instanceof MapTreeNode$2) {\n          throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n        } else {\n          i.stack = MapTreeModule_collapseLHS((0,_List_js__WEBPACK_IMPORTED_MODULE_2__.tail)(matchValue));\n          return !(0,_List_js__WEBPACK_IMPORTED_MODULE_2__.isEmpty)(i.stack);\n        }\n      } else {\n        throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n      }\n    } else {\n      return false;\n    }\n  } else {\n    i.started = true;\n    return !(0,_List_js__WEBPACK_IMPORTED_MODULE_2__.isEmpty)(i.stack);\n  }\n}\nfunction MapTreeModule_mkIEnumerator(m) {\n  var _ref;\n  var i = MapTreeModule_mkIterator(m);\n  return _ref = {}, _defineProperty(_ref, \"System.Collections.Generic.IEnumerator`1.get_Current\", function SystemCollectionsGenericIEnumerator1Get_Current() {\n    return MapTreeModule_current(i);\n  }), _defineProperty(_ref, \"System.Collections.IEnumerator.get_Current\", function SystemCollectionsIEnumeratorGet_Current() {\n    return MapTreeModule_current(i);\n  }), _defineProperty(_ref, \"System.Collections.IEnumerator.MoveNext\", function SystemCollectionsIEnumeratorMoveNext() {\n    return MapTreeModule_moveNext(i);\n  }), _defineProperty(_ref, \"System.Collections.IEnumerator.Reset\", function SystemCollectionsIEnumeratorReset() {\n    i = MapTreeModule_mkIterator(m);\n  }), _defineProperty(_ref, \"Dispose\", function Dispose() {}), _ref;\n}\nfunction MapTreeModule_toSeq(s) {\n  return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_6__.unfold)(function (en_1) {\n    if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\n    } else {\n      return void 0;\n    }\n  }, MapTreeModule_mkIEnumerator(s));\n}\nvar FSharpMap = /*#__PURE__*/function (_Symbol$toStringTag, _Symbol$iterator) {\n  function FSharpMap(comparer, tree) {\n    _classCallCheck(this, FSharpMap);\n    this.comparer = comparer;\n    this.tree = tree;\n  }\n  _createClass(FSharpMap, [{\n    key: \"GetHashCode\",\n    value: function GetHashCode() {\n      var this$ = this;\n      return FSharpMap__ComputeHashCode(this$) | 0;\n    }\n  }, {\n    key: \"Equals\",\n    value: function Equals(that) {\n      var this$ = this;\n      if (that instanceof FSharpMap) {\n        var e1 = (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.getEnumerator)(this$);\n        try {\n          var e2 = (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.getEnumerator)(that);\n          try {\n            var loop = function loop() {\n              var m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n              if (m1 === e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                if (!m1) {\n                  return true;\n                } else {\n                  var e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                  var e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                  if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.equals)(e1c[0], e2c[0]) && (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.equals)(e1c[1], e2c[1])) {\n                    return loop();\n                  } else {\n                    return false;\n                  }\n                }\n              } else {\n                return false;\n              }\n            };\n            return loop();\n          } finally {\n            (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.disposeSafe)(e2);\n          }\n        } finally {\n          (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.disposeSafe)(e1);\n        }\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var this$ = this;\n      return \"map [\" + (0,_String_js__WEBPACK_IMPORTED_MODULE_7__.join)(\"; \", (0,_Seq_js__WEBPACK_IMPORTED_MODULE_6__.map)(function (kv) {\n        return (0,_String_js__WEBPACK_IMPORTED_MODULE_7__.format)(\"({0}, {1})\", kv[0], kv[1]);\n      }, this$)) + \"]\";\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return \"FSharpMap\";\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_key) {\n      var this$ = this;\n      return Array.from(this$);\n    }\n  }, {\n    key: \"GetEnumerator\",\n    value: function GetEnumerator() {\n      var __ = this;\n      return MapTreeModule_mkIEnumerator(__.tree);\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.toIterator)(this.GetEnumerator());\n    }\n  }, {\n    key: \"System.Collections.IEnumerable.GetEnumerator\",\n    value: function SystemCollectionsIEnumerableGetEnumerator() {\n      var __ = this;\n      return MapTreeModule_mkIEnumerator(__.tree);\n    }\n  }, {\n    key: \"CompareTo\",\n    value: function CompareTo(obj) {\n      var m = this;\n      if (obj instanceof FSharpMap) {\n        return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_6__.compareWith)(function (kvp1, kvp2) {\n          var c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n          return (c !== 0 ? c : (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.compare)(kvp1[1], kvp2[1])) | 0;\n        }, m, obj) | 0;\n      } else {\n        throw new Error(\"not comparable\\\\nParameter name: obj\");\n      }\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.Add2B595\",\n    value: function SystemCollectionsGenericICollection1Add2B595(x) {\n      throw new Error(\"Map cannot be mutated\");\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.Clear\",\n    value: function SystemCollectionsGenericICollection1Clear() {\n      throw new Error(\"Map cannot be mutated\");\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.Remove2B595\",\n    value: function SystemCollectionsGenericICollection1Remove2B595(x) {\n      throw new Error(\"Map cannot be mutated\");\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.Contains2B595\",\n    value: function SystemCollectionsGenericICollection1Contains2B595(x) {\n      var m = this;\n      return FSharpMap__ContainsKey(m, x[0]) && (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.equals)(FSharpMap__get_Item(m, x[0]), x[1]);\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\",\n    value: function SystemCollectionsGenericICollection1CopyToZ2E171D71(arr, i) {\n      var m = this;\n      MapTreeModule_copyToArray(m.tree, arr, i);\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.get_IsReadOnly\",\n    value: function SystemCollectionsGenericICollection1Get_IsReadOnly() {\n      return true;\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.get_Count\",\n    value: function SystemCollectionsGenericICollection1Get_Count() {\n      var m = this;\n      return FSharpMap__get_Count(m) | 0;\n    }\n  }, {\n    key: \"System.Collections.Generic.IReadOnlyCollection`1.get_Count\",\n    value: function SystemCollectionsGenericIReadOnlyCollection1Get_Count() {\n      var m = this;\n      return FSharpMap__get_Count(m) | 0;\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      var m = this;\n      return FSharpMap__get_Count(m) | 0;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      throw new Error(\"Map cannot be mutated\");\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(_arg1) {\n      throw new Error(\"Map cannot be mutated\");\n      return false;\n    }\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      var m = this;\n      return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_6__.map)(function (p) {\n        return [p[0], p[1]];\n      }, m);\n    }\n  }, {\n    key: \"get\",\n    value: function get(k) {\n      var m = this;\n      return FSharpMap__get_Item(m, k);\n    }\n  }, {\n    key: \"has\",\n    value: function has(k) {\n      var m = this;\n      return FSharpMap__ContainsKey(m, k);\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      var m = this;\n      return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_6__.map)(function (p) {\n        return p[0];\n      }, m);\n    }\n  }, {\n    key: \"set\",\n    value: function set(k, v) {\n      var m = this;\n      throw new Error(\"Map cannot be mutated\");\n      return m;\n    }\n  }, {\n    key: \"values\",\n    value: function values() {\n      var m = this;\n      return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_6__.map)(function (p) {\n        return p[1];\n      }, m);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(f, thisArg) {\n      var m = this;\n      (0,_Seq_js__WEBPACK_IMPORTED_MODULE_6__.iterate)(function (p) {\n        f(p[1], p[0], m);\n      }, m);\n    }\n  }]);\n  return FSharpMap;\n}(Symbol.toStringTag, Symbol.iterator);\nfunction FSharpMap$reflection(gen0, gen1) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_0__.class_type)(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\n}\nfunction FSharpMap_$ctor(comparer, tree) {\n  return new FSharpMap(comparer, tree);\n}\n(function () {\n  FSharpMap.empty = FSharpMap_$ctor((0,_FSharp_Core_js__WEBPACK_IMPORTED_MODULE_8__.LanguagePrimitives_FastGenericComparer)(), MapTreeModule_empty());\n})();\nfunction FSharpMap_get_Empty() {\n  return FSharpMap.empty;\n}\nfunction FSharpMap_Create(ie) {\n  var comparer = (0,_FSharp_Core_js__WEBPACK_IMPORTED_MODULE_8__.LanguagePrimitives_FastGenericComparer)();\n  return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\n}\nfunction FSharpMap__get_Comparer(m) {\n  return m.comparer;\n}\nfunction FSharpMap__get_Tree(m) {\n  return m.tree;\n}\nfunction FSharpMap__Add(m, key, value) {\n  return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\n}\nfunction FSharpMap__Change(m, key, f) {\n  return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\n}\nfunction FSharpMap__get_IsEmpty(m) {\n  return m.tree == null;\n}\nfunction FSharpMap__get_Item(m, key) {\n  return MapTreeModule_find(m.comparer, key, m.tree);\n}\nfunction FSharpMap__TryPick(m, f) {\n  return MapTreeModule_tryPick(f, m.tree);\n}\nfunction FSharpMap__Exists(m, predicate) {\n  return MapTreeModule_exists(predicate, m.tree);\n}\nfunction FSharpMap__Filter(m, predicate) {\n  return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\n}\nfunction FSharpMap__ForAll(m, predicate) {\n  return MapTreeModule_forall(predicate, m.tree);\n}\nfunction FSharpMap__Fold(m, f, acc) {\n  return MapTreeModule_foldBack(f, m.tree, acc);\n}\nfunction FSharpMap__FoldSection(m, lo, hi, f, acc) {\n  return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\n}\nfunction FSharpMap__Iterate(m, f) {\n  MapTreeModule_iter(f, m.tree);\n}\nfunction FSharpMap__MapRange(m, f) {\n  return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\n}\nfunction FSharpMap__Map(m, f) {\n  return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\n}\nfunction FSharpMap__Partition(m, predicate) {\n  var patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\n  return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\n}\nfunction FSharpMap__get_Count(m) {\n  return MapTreeModule_size(m.tree);\n}\nfunction FSharpMap__ContainsKey(m, key) {\n  return MapTreeModule_mem(m.comparer, key, m.tree);\n}\nfunction FSharpMap__Remove(m, key) {\n  return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\n}\nfunction FSharpMap__TryGetValue(__, key, value) {\n  var matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\n  if (matchValue == null) {\n    return false;\n  } else {\n    var v = (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(matchValue);\n    value.contents = v;\n    return true;\n  }\n}\nfunction FSharpMap__get_Keys(__) {\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.map)(function (kvp) {\n    return kvp[0];\n  }, MapTreeModule_toArray(__.tree));\n}\nfunction FSharpMap__get_Values(__) {\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_3__.map)(function (kvp) {\n    return kvp[1];\n  }, MapTreeModule_toArray(__.tree));\n}\nfunction FSharpMap__TryFind(m, key) {\n  return MapTreeModule_tryFind(m.comparer, key, m.tree);\n}\nfunction FSharpMap__ToList(m) {\n  return MapTreeModule_toList(m.tree);\n}\nfunction FSharpMap__ToArray(m) {\n  return MapTreeModule_toArray(m.tree);\n}\nfunction FSharpMap__ComputeHashCode(this$) {\n  var combineHash = function combineHash(x, y) {\n    return (x << 1) + y + 631;\n  };\n  var res = 0;\n  var enumerator = (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.getEnumerator)(this$);\n  try {\n    while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      var activePatternResult8263 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n      res = combineHash(res, (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.structuralHash)(activePatternResult8263[0])) | 0;\n      res = combineHash(res, (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.structuralHash)(activePatternResult8263[1])) | 0;\n    }\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_4__.disposeSafe)(enumerator);\n  }\n  return res | 0;\n}\nfunction isEmpty(table) {\n  return FSharpMap__get_IsEmpty(table);\n}\nfunction add(key, value, table) {\n  return FSharpMap__Add(table, key, value);\n}\nfunction change(key, f, table) {\n  return FSharpMap__Change(table, key, f);\n}\nfunction find(key, table) {\n  return FSharpMap__get_Item(table, key);\n}\nfunction tryFind(key, table) {\n  return FSharpMap__TryFind(table, key);\n}\nfunction remove(key, table) {\n  return FSharpMap__Remove(table, key);\n}\nfunction containsKey(key, table) {\n  return FSharpMap__ContainsKey(table, key);\n}\nfunction iterate(action, table) {\n  FSharpMap__Iterate(table, action);\n}\nfunction tryPick(chooser, table) {\n  return FSharpMap__TryPick(table, chooser);\n}\nfunction pick(chooser, table) {\n  var matchValue = tryPick(chooser, table);\n  if (matchValue != null) {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(matchValue);\n  } else {\n    throw new Error();\n  }\n}\nfunction exists(predicate, table) {\n  return FSharpMap__Exists(table, predicate);\n}\nfunction filter(predicate, table) {\n  return FSharpMap__Filter(table, predicate);\n}\nfunction partition(predicate, table) {\n  return FSharpMap__Partition(table, predicate);\n}\nfunction forAll(predicate, table) {\n  return FSharpMap__ForAll(table, predicate);\n}\nfunction map(mapping, table) {\n  return FSharpMap__Map(table, mapping);\n}\nfunction fold(folder, state, table) {\n  return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\n}\nfunction foldBack(folder, table, state) {\n  return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\n}\nfunction toSeq(table) {\n  return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_6__.map)(function (kvp) {\n    return [kvp[0], kvp[1]];\n  }, table);\n}\nfunction findKey(predicate, table) {\n  return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_6__.pick)(function (kvp) {\n    var k = kvp[0];\n    if (predicate(k, kvp[1])) {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.some)(k);\n    } else {\n      return void 0;\n    }\n  }, table);\n}\nfunction tryFindKey(predicate, table) {\n  return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_6__.tryPick)(function (kvp) {\n    var k = kvp[0];\n    if (predicate(k, kvp[1])) {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.some)(k);\n    } else {\n      return void 0;\n    }\n  }, table);\n}\nfunction ofList(elements) {\n  return FSharpMap_Create(elements);\n}\nfunction ofSeq(elements) {\n  return FSharpMap_Create(elements);\n}\nfunction ofArray(elements) {\n  var comparer = (0,_FSharp_Core_js__WEBPACK_IMPORTED_MODULE_8__.LanguagePrimitives_FastGenericComparer)();\n  return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\n}\nfunction toList(table) {\n  return FSharpMap__ToList(table);\n}\nfunction toArray(table) {\n  return FSharpMap__ToArray(table);\n}\nfunction keys(table) {\n  return FSharpMap__get_Keys(table);\n}\nfunction values(table) {\n  return FSharpMap__get_Values(table);\n}\nfunction empty() {\n  return FSharpMap_get_Empty();\n}\nfunction count(table) {\n  return FSharpMap__get_Count(table);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Map.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/MapUtil.js":
/*!************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/MapUtil.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"keyValueList\": () => (/* binding */ keyValueList),\n/* harmony export */   \"containsValue\": () => (/* binding */ containsValue),\n/* harmony export */   \"tryGetValue\": () => (/* binding */ tryGetValue),\n/* harmony export */   \"addToSet\": () => (/* binding */ addToSet),\n/* harmony export */   \"addToDict\": () => (/* binding */ addToDict),\n/* harmony export */   \"getItemFromDict\": () => (/* binding */ getItemFromDict)\n/* harmony export */ });\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\nvar CaseRules = {\n  None: 0,\n  LowerFirst: 1,\n  SnakeCase: 2,\n  SnakeCaseAllCaps: 3,\n  KebabCase: 4\n};\nfunction dashify(str, separator) {\n  return str.replace(/[a-z]?[A-Z]/g, function (m) {\n    return m.length === 1 ? m.toLowerCase() : m.charAt(0) + separator + m.charAt(1).toLowerCase();\n  });\n}\nfunction changeCase(str, caseRule) {\n  switch (caseRule) {\n    case CaseRules.LowerFirst:\n      return str.charAt(0).toLowerCase() + str.slice(1);\n    case CaseRules.SnakeCase:\n      return dashify(str, \"_\");\n    case CaseRules.SnakeCaseAllCaps:\n      return dashify(str, \"_\").toUpperCase();\n    case CaseRules.KebabCase:\n      return dashify(str, \"-\");\n    case CaseRules.None:\n    default:\n      return str;\n  }\n}\nfunction keyValueList(fields) {\n  var caseRule = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CaseRules.None;\n  var obj = {};\n  var definedCaseRule = caseRule;\n  function fail(kvPair) {\n    throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n  }\n  function assign(key, caseRule, value) {\n    key = changeCase(key, caseRule);\n    obj[key] = value;\n  }\n  var _iterator = _createForOfIteratorHelper(fields),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var kvPair = _step.value;\n      var _caseRule = CaseRules.None;\n      if (kvPair == null) {\n        fail(kvPair);\n      }\n      // Deflate unions and use the defined case rule\n      if (kvPair instanceof _Types_js__WEBPACK_IMPORTED_MODULE_0__.Union) {\n        var name = kvPair.cases()[kvPair.tag];\n        kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n        _caseRule = definedCaseRule;\n      }\n      if (Array.isArray(kvPair)) {\n        switch (kvPair.length) {\n          case 0:\n            fail(kvPair);\n            break;\n          case 1:\n            assign(kvPair[0], _caseRule, true);\n            break;\n          case 2:\n            var value = kvPair[1];\n            assign(kvPair[0], _caseRule, value);\n            break;\n          default:\n            assign(kvPair[0], _caseRule, kvPair.slice(1));\n        }\n      } else if (typeof kvPair === \"string\") {\n        assign(kvPair, _caseRule, true);\n      } else {\n        fail(kvPair);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return obj;\n}\n// TODO: Move these methods to Map and Set modules\nfunction containsValue(v, map) {\n  var _iterator2 = _createForOfIteratorHelper(map),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var kv = _step2.value;\n      if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.equals)(v, kv[1])) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return false;\n}\nfunction tryGetValue(map, key, defaultValue) {\n  if (map.has(key)) {\n    defaultValue.contents = map.get(key);\n    return true;\n  }\n  return false;\n}\nfunction addToSet(v, set) {\n  if (set.has(v)) {\n    return false;\n  }\n  set.add(v);\n  return true;\n}\nfunction addToDict(dict, k, v) {\n  if (dict.has(k)) {\n    throw new Error(\"An item with the same key has already been added. Key: \" + k);\n  }\n  dict.set(k, v);\n}\nfunction getItemFromDict(map, key) {\n  if (map.has(key)) {\n    return map.get(key);\n  } else {\n    throw new Error(\"The given key '\".concat(key, \"' was not present in the dictionary.\"));\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/MapUtil.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/MutableSet.js":
/*!***************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/MutableSet.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HashSet\": () => (/* binding */ HashSet),\n/* harmony export */   \"HashSet$reflection\": () => (/* binding */ HashSet$reflection),\n/* harmony export */   \"HashSet_$ctor_Z6150332D\": () => (/* binding */ HashSet_$ctor_Z6150332D),\n/* harmony export */   \"HashSet__get_Comparer\": () => (/* binding */ HashSet__get_Comparer),\n/* harmony export */   \"HashSet__Clear\": () => (/* binding */ HashSet__Clear),\n/* harmony export */   \"HashSet__get_Count\": () => (/* binding */ HashSet__get_Count),\n/* harmony export */   \"HashSet__Add_2B595\": () => (/* binding */ HashSet__Add_2B595),\n/* harmony export */   \"HashSet__Contains_2B595\": () => (/* binding */ HashSet__Contains_2B595),\n/* harmony export */   \"HashSet__Remove_2B595\": () => (/* binding */ HashSet__Remove_2B595)\n/* harmony export */ });\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _Seq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Seq.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Seq.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _Reflection_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _MapUtil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MapUtil.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/MapUtil.js\");\n/* harmony import */ var _Option_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Option.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n\nvar HashSet = /*#__PURE__*/function (_Symbol$toStringTag, _Symbol$iterator) {\n  function HashSet(items, comparer) {\n    _classCallCheck(this, HashSet);\n    var this$ = new _Types_js__WEBPACK_IMPORTED_MODULE_0__.FSharpRef(null);\n    this.comparer = comparer;\n    this$.contents = this;\n    this.hashMap = new Map([]);\n    this[\"init@8-2\"] = 1;\n    var enumerator = (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.getEnumerator)(items);\n    try {\n      while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n        var item = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n        HashSet__Add_2B595(this$.contents, item);\n      }\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.disposeSafe)(enumerator);\n    }\n  }\n  _createClass(HashSet, [{\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return \"HashSet\";\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_key) {\n      var this$ = this;\n      return Array.from(this$);\n    }\n  }, {\n    key: \"System.Collections.IEnumerable.GetEnumerator\",\n    value: function SystemCollectionsIEnumerableGetEnumerator() {\n      var this$ = this;\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.getEnumerator)(this$);\n    }\n  }, {\n    key: \"GetEnumerator\",\n    value: function GetEnumerator() {\n      var this$ = this;\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.getEnumerator)((0,_Seq_js__WEBPACK_IMPORTED_MODULE_2__.concat)(this$.hashMap.values()));\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.toIterator)(this.GetEnumerator());\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.Add2B595\",\n    value: function SystemCollectionsGenericICollection1Add2B595(item) {\n      var this$ = this;\n      HashSet__Add_2B595(this$, item);\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.Clear\",\n    value: function SystemCollectionsGenericICollection1Clear() {\n      var this$ = this;\n      HashSet__Clear(this$);\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.Contains2B595\",\n    value: function SystemCollectionsGenericICollection1Contains2B595(item) {\n      var this$ = this;\n      return HashSet__Contains_2B595(this$, item);\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\",\n    value: function SystemCollectionsGenericICollection1CopyToZ2E171D71(array, arrayIndex) {\n      var this$ = this;\n      (0,_Seq_js__WEBPACK_IMPORTED_MODULE_2__.iterateIndexed)(function (i, e) {\n        array[arrayIndex + i] = e;\n      }, this$);\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.get_Count\",\n    value: function SystemCollectionsGenericICollection1Get_Count() {\n      var this$ = this;\n      return HashSet__get_Count(this$) | 0;\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.get_IsReadOnly\",\n    value: function SystemCollectionsGenericICollection1Get_IsReadOnly() {\n      return false;\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.Remove2B595\",\n    value: function SystemCollectionsGenericICollection1Remove2B595(item) {\n      var this$ = this;\n      return HashSet__Remove_2B595(this$, item);\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      var this$ = this;\n      return HashSet__get_Count(this$) | 0;\n    }\n  }, {\n    key: \"add\",\n    value: function add(k) {\n      var this$ = this;\n      HashSet__Add_2B595(this$, k);\n      return this$;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var this$ = this;\n      HashSet__Clear(this$);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(k) {\n      var this$ = this;\n      return HashSet__Remove_2B595(this$, k);\n    }\n  }, {\n    key: \"has\",\n    value: function has(k) {\n      var this$ = this;\n      return HashSet__Contains_2B595(this$, k);\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      var this$ = this;\n      return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_2__.map)(function (x) {\n        return x;\n      }, this$);\n    }\n  }, {\n    key: \"values\",\n    value: function values() {\n      var this$ = this;\n      return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_2__.map)(function (x) {\n        return x;\n      }, this$);\n    }\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      var this$ = this;\n      return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_2__.map)(function (v) {\n        return [v, v];\n      }, this$);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(f, thisArg) {\n      var this$ = this;\n      (0,_Seq_js__WEBPACK_IMPORTED_MODULE_2__.iterate)(function (x) {\n        f(x, x, this$);\n      }, this$);\n    }\n  }]);\n  return HashSet;\n}(Symbol.toStringTag, Symbol.iterator);\nfunction HashSet$reflection(gen0) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_3__.class_type)(\"Fable.Collections.HashSet\", [gen0], HashSet);\n}\nfunction HashSet_$ctor_Z6150332D(items, comparer) {\n  return new HashSet(items, comparer);\n}\nfunction HashSet__TryFindIndex_2B595(this$, k) {\n  var h = this$.comparer.GetHashCode(k) | 0;\n  var matchValue;\n  var outArg = null;\n  matchValue = [(0,_MapUtil_js__WEBPACK_IMPORTED_MODULE_4__.tryGetValue)(this$.hashMap, h, new _Types_js__WEBPACK_IMPORTED_MODULE_0__.FSharpRef(function () {\n    return outArg;\n  }, function (v) {\n    outArg = v;\n  })), outArg];\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (v_1) {\n      return this$.comparer.Equals(k, v_1);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\nfunction HashSet__TryFind_2B595(this$, k) {\n  var matchValue = HashSet__TryFindIndex_2B595(this$, k);\n  var pattern_matching_result;\n  if (matchValue[0]) {\n    if (matchValue[2] > -1) {\n      pattern_matching_result = 0;\n    } else {\n      pattern_matching_result = 1;\n    }\n  } else {\n    pattern_matching_result = 1;\n  }\n  switch (pattern_matching_result) {\n    case 0:\n      {\n        return (0,_Option_js__WEBPACK_IMPORTED_MODULE_5__.some)((0,_MapUtil_js__WEBPACK_IMPORTED_MODULE_4__.getItemFromDict)(this$.hashMap, matchValue[1])[matchValue[2]]);\n      }\n    case 1:\n      {\n        return void 0;\n      }\n  }\n}\nfunction HashSet__get_Comparer(this$) {\n  return this$.comparer;\n}\nfunction HashSet__Clear(this$) {\n  this$.hashMap.clear();\n}\nfunction HashSet__get_Count(this$) {\n  var count = 0;\n  var enumerator = (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.getEnumerator)(this$.hashMap.values());\n  try {\n    while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      var items = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n      count = count + items.length | 0;\n    }\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.disposeSafe)(enumerator);\n  }\n  return count | 0;\n}\nfunction HashSet__Add_2B595(this$, k) {\n  var matchValue = HashSet__TryFindIndex_2B595(this$, k);\n  var pattern_matching_result;\n  if (matchValue[0]) {\n    if (matchValue[2] > -1) {\n      pattern_matching_result = 0;\n    } else {\n      pattern_matching_result = 1;\n    }\n  } else {\n    pattern_matching_result = 1;\n  }\n  switch (pattern_matching_result) {\n    case 0:\n      {\n        return false;\n      }\n    case 1:\n      {\n        if (matchValue[0]) {\n          var value = void (0,_MapUtil_js__WEBPACK_IMPORTED_MODULE_4__.getItemFromDict)(this$.hashMap, matchValue[1]).push(k);\n          return true;\n        } else {\n          this$.hashMap.set(matchValue[1], [k]);\n          return true;\n        }\n      }\n  }\n}\nfunction HashSet__Contains_2B595(this$, k) {\n  var matchValue = HashSet__TryFindIndex_2B595(this$, k);\n  var pattern_matching_result;\n  if (matchValue[0]) {\n    if (matchValue[2] > -1) {\n      pattern_matching_result = 0;\n    } else {\n      pattern_matching_result = 1;\n    }\n  } else {\n    pattern_matching_result = 1;\n  }\n  switch (pattern_matching_result) {\n    case 0:\n      {\n        return true;\n      }\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nfunction HashSet__Remove_2B595(this$, k) {\n  var matchValue = HashSet__TryFindIndex_2B595(this$, k);\n  var pattern_matching_result;\n  if (matchValue[0]) {\n    if (matchValue[2] > -1) {\n      pattern_matching_result = 0;\n    } else {\n      pattern_matching_result = 1;\n    }\n  } else {\n    pattern_matching_result = 1;\n  }\n  switch (pattern_matching_result) {\n    case 0:\n      {\n        (0,_MapUtil_js__WEBPACK_IMPORTED_MODULE_4__.getItemFromDict)(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n        return true;\n      }\n    case 1:\n      {\n        return false;\n      }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/MutableSet.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Numeric.js":
/*!************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Numeric.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"symbol\": () => (/* binding */ symbol),\n/* harmony export */   \"isNumeric\": () => (/* binding */ isNumeric),\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"toFixed\": () => (/* binding */ toFixed),\n/* harmony export */   \"toPrecision\": () => (/* binding */ toPrecision),\n/* harmony export */   \"toExponential\": () => (/* binding */ toExponential),\n/* harmony export */   \"toHex\": () => (/* binding */ toHex)\n/* harmony export */ });\nvar symbol = Symbol(\"numeric\");\nfunction isNumeric(x) {\n  return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nfunction compare(x, y) {\n  if (typeof x === \"number\") {\n    return x < y ? -1 : x > y ? 1 : 0;\n  } else {\n    return x.CompareTo(y);\n  }\n}\nfunction multiply(x, y) {\n  if (typeof x === \"number\") {\n    return x * y;\n  } else {\n    return x[symbol]().multiply(y);\n  }\n}\nfunction toFixed(x, dp) {\n  if (typeof x === \"number\") {\n    return x.toFixed(dp);\n  } else {\n    return x[symbol]().toFixed(dp);\n  }\n}\nfunction toPrecision(x, sd) {\n  if (typeof x === \"number\") {\n    return x.toPrecision(sd);\n  } else {\n    return x[symbol]().toPrecision(sd);\n  }\n}\nfunction toExponential(x, dp) {\n  if (typeof x === \"number\") {\n    return x.toExponential(dp);\n  } else {\n    return x[symbol]().toExponential(dp);\n  }\n}\nfunction toHex(x) {\n  if (typeof x === \"number\") {\n    return (Number(x) >>> 0).toString(16);\n  } else {\n    return x[symbol]().toHex();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL2ZhYmxlLWxpYnJhcnkuMy43LjIvTnVtZXJpYy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFPLElBQU1BLE1BQU0sR0FBR0MsTUFBTSxDQUFDLFNBQVMsQ0FBQztBQUNoQyxTQUFTQyxTQUFTLENBQUNDLENBQUMsRUFBRTtFQUN6QixPQUFPLE9BQU9BLENBQUMsS0FBSyxRQUFRLEtBQUtBLENBQUMsS0FBSyxJQUFJLElBQUlBLENBQUMsS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsQ0FBQyxDQUFDSCxNQUFNLENBQUMsQ0FBQztBQUNyRjtBQUNPLFNBQVNJLE9BQU8sQ0FBQ0QsQ0FBQyxFQUFFRSxDQUFDLEVBQUU7RUFDMUIsSUFBSSxPQUFPRixDQUFDLEtBQUssUUFBUSxFQUFFO0lBQ3ZCLE9BQU9BLENBQUMsR0FBR0UsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFJRixDQUFDLEdBQUdFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBRTtFQUN2QyxDQUFDLE1BQ0k7SUFDRCxPQUFPRixDQUFDLENBQUNHLFNBQVMsQ0FBQ0QsQ0FBQyxDQUFDO0VBQ3pCO0FBQ0o7QUFDTyxTQUFTRSxRQUFRLENBQUNKLENBQUMsRUFBRUUsQ0FBQyxFQUFFO0VBQzNCLElBQUksT0FBT0YsQ0FBQyxLQUFLLFFBQVEsRUFBRTtJQUN2QixPQUFPQSxDQUFDLEdBQUdFLENBQUM7RUFDaEIsQ0FBQyxNQUNJO0lBQ0QsT0FBT0YsQ0FBQyxDQUFDSCxNQUFNLENBQUMsRUFBRSxDQUFDTyxRQUFRLENBQUNGLENBQUMsQ0FBQztFQUNsQztBQUNKO0FBQ08sU0FBU0csT0FBTyxDQUFDTCxDQUFDLEVBQUVNLEVBQUUsRUFBRTtFQUMzQixJQUFJLE9BQU9OLENBQUMsS0FBSyxRQUFRLEVBQUU7SUFDdkIsT0FBT0EsQ0FBQyxDQUFDSyxPQUFPLENBQUNDLEVBQUUsQ0FBQztFQUN4QixDQUFDLE1BQ0k7SUFDRCxPQUFPTixDQUFDLENBQUNILE1BQU0sQ0FBQyxFQUFFLENBQUNRLE9BQU8sQ0FBQ0MsRUFBRSxDQUFDO0VBQ2xDO0FBQ0o7QUFDTyxTQUFTQyxXQUFXLENBQUNQLENBQUMsRUFBRVEsRUFBRSxFQUFFO0VBQy9CLElBQUksT0FBT1IsQ0FBQyxLQUFLLFFBQVEsRUFBRTtJQUN2QixPQUFPQSxDQUFDLENBQUNPLFdBQVcsQ0FBQ0MsRUFBRSxDQUFDO0VBQzVCLENBQUMsTUFDSTtJQUNELE9BQU9SLENBQUMsQ0FBQ0gsTUFBTSxDQUFDLEVBQUUsQ0FBQ1UsV0FBVyxDQUFDQyxFQUFFLENBQUM7RUFDdEM7QUFDSjtBQUNPLFNBQVNDLGFBQWEsQ0FBQ1QsQ0FBQyxFQUFFTSxFQUFFLEVBQUU7RUFDakMsSUFBSSxPQUFPTixDQUFDLEtBQUssUUFBUSxFQUFFO0lBQ3ZCLE9BQU9BLENBQUMsQ0FBQ1MsYUFBYSxDQUFDSCxFQUFFLENBQUM7RUFDOUIsQ0FBQyxNQUNJO0lBQ0QsT0FBT04sQ0FBQyxDQUFDSCxNQUFNLENBQUMsRUFBRSxDQUFDWSxhQUFhLENBQUNILEVBQUUsQ0FBQztFQUN4QztBQUNKO0FBQ08sU0FBU0ksS0FBSyxDQUFDVixDQUFDLEVBQUU7RUFDckIsSUFBSSxPQUFPQSxDQUFDLEtBQUssUUFBUSxFQUFFO0lBQ3ZCLE9BQU8sQ0FBQ1csTUFBTSxDQUFDWCxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUVZLFFBQVEsQ0FBQyxFQUFFLENBQUM7RUFDekMsQ0FBQyxNQUNJO0lBQ0QsT0FBT1osQ0FBQyxDQUFDSCxNQUFNLENBQUMsRUFBRSxDQUFDYSxLQUFLLEVBQUU7RUFDOUI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9DbGllbnQvLmZhYmxlL2ZhYmxlX21vZHVsZXMvZmFibGUtbGlicmFyeS4zLjcuMi9OdW1lcmljLmpzPzAxOGEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHN5bWJvbCA9IFN5bWJvbChcIm51bWVyaWNcIik7XG5leHBvcnQgZnVuY3Rpb24gaXNOdW1lcmljKHgpIHtcbiAgICByZXR1cm4gdHlwZW9mIHggPT09IFwibnVtYmVyXCIgfHwgKHggPT09IG51bGwgfHwgeCA9PT0gdm9pZCAwID8gdm9pZCAwIDogeFtzeW1ib2xdKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlKHgsIHkpIHtcbiAgICBpZiAodHlwZW9mIHggPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgcmV0dXJuIHggPCB5ID8gLTEgOiAoeCA+IHkgPyAxIDogMCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4geC5Db21wYXJlVG8oeSk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIG11bHRpcGx5KHgsIHkpIHtcbiAgICBpZiAodHlwZW9mIHggPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgcmV0dXJuIHggKiB5O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHhbc3ltYm9sXSgpLm11bHRpcGx5KHkpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiB0b0ZpeGVkKHgsIGRwKSB7XG4gICAgaWYgKHR5cGVvZiB4ID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHJldHVybiB4LnRvRml4ZWQoZHApO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHhbc3ltYm9sXSgpLnRvRml4ZWQoZHApO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1ByZWNpc2lvbih4LCBzZCkge1xuICAgIGlmICh0eXBlb2YgeCA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICByZXR1cm4geC50b1ByZWNpc2lvbihzZCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4geFtzeW1ib2xdKCkudG9QcmVjaXNpb24oc2QpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiB0b0V4cG9uZW50aWFsKHgsIGRwKSB7XG4gICAgaWYgKHR5cGVvZiB4ID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHJldHVybiB4LnRvRXhwb25lbnRpYWwoZHApO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHhbc3ltYm9sXSgpLnRvRXhwb25lbnRpYWwoZHApO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiB0b0hleCh4KSB7XG4gICAgaWYgKHR5cGVvZiB4ID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHJldHVybiAoTnVtYmVyKHgpID4+PiAwKS50b1N0cmluZygxNik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4geFtzeW1ib2xdKCkudG9IZXgoKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsic3ltYm9sIiwiU3ltYm9sIiwiaXNOdW1lcmljIiwieCIsImNvbXBhcmUiLCJ5IiwiQ29tcGFyZVRvIiwibXVsdGlwbHkiLCJ0b0ZpeGVkIiwiZHAiLCJ0b1ByZWNpc2lvbiIsInNkIiwidG9FeHBvbmVudGlhbCIsInRvSGV4IiwiTnVtYmVyIiwidG9TdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Numeric.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js":
/*!***********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Some\": () => (/* binding */ Some),\n/* harmony export */   \"some\": () => (/* binding */ some),\n/* harmony export */   \"value\": () => (/* binding */ value),\n/* harmony export */   \"ofNullable\": () => (/* binding */ ofNullable),\n/* harmony export */   \"toNullable\": () => (/* binding */ toNullable),\n/* harmony export */   \"flatten\": () => (/* binding */ flatten),\n/* harmony export */   \"toArray\": () => (/* binding */ toArray),\n/* harmony export */   \"defaultArg\": () => (/* binding */ defaultArg),\n/* harmony export */   \"defaultArgWith\": () => (/* binding */ defaultArgWith),\n/* harmony export */   \"filter\": () => (/* binding */ filter),\n/* harmony export */   \"map\": () => (/* binding */ map),\n/* harmony export */   \"map2\": () => (/* binding */ map2),\n/* harmony export */   \"map3\": () => (/* binding */ map3),\n/* harmony export */   \"bind\": () => (/* binding */ bind),\n/* harmony export */   \"tryOp\": () => (/* binding */ tryOp)\n/* harmony export */ });\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n// Using a class here for better compatibility with TS files importing Some\nvar Some = /*#__PURE__*/function () {\n  function Some(value) {\n    _classCallCheck(this, Some);\n    this.value = value;\n  }\n  _createClass(Some, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return String(this.value);\n    }\n  }, {\n    key: \"GetHashCode\",\n    value: function GetHashCode() {\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.structuralHash)(this.value);\n    }\n  }, {\n    key: \"Equals\",\n    value: function Equals(other) {\n      if (other == null) {\n        return false;\n      } else {\n        return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.equals)(this.value, other instanceof Some ? other.value : other);\n      }\n    }\n  }, {\n    key: \"CompareTo\",\n    value: function CompareTo(other) {\n      if (other == null) {\n        return 1;\n      } else {\n        return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.compare)(this.value, other instanceof Some ? other.value : other);\n      }\n    }\n  }]);\n  return Some;\n}();\nfunction some(x) {\n  return x == null || x instanceof Some ? new Some(x) : x;\n}\nfunction value(x) {\n  if (x == null) {\n    throw new Error(\"Option has no value\");\n  } else {\n    return x instanceof Some ? x.value : x;\n  }\n}\nfunction ofNullable(x) {\n  // This will fail with unit probably, an alternative would be:\n  // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n  return x == null ? undefined : x;\n}\nfunction toNullable(x) {\n  return x == null ? null : value(x);\n}\nfunction flatten(x) {\n  return x == null ? undefined : value(x);\n}\nfunction toArray(opt) {\n  return opt == null ? [] : [value(opt)];\n}\nfunction defaultArg(opt, defaultValue) {\n  return opt != null ? value(opt) : defaultValue;\n}\nfunction defaultArgWith(opt, defThunk) {\n  return opt != null ? value(opt) : defThunk();\n}\nfunction filter(predicate, opt) {\n  return opt != null ? predicate(value(opt)) ? opt : undefined : opt;\n}\nfunction map(mapping, opt) {\n  return opt != null ? some(mapping(value(opt))) : undefined;\n}\nfunction map2(mapping, opt1, opt2) {\n  return opt1 != null && opt2 != null ? mapping(value(opt1), value(opt2)) : undefined;\n}\nfunction map3(mapping, opt1, opt2, opt3) {\n  return opt1 != null && opt2 != null && opt3 != null ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nfunction bind(binder, opt) {\n  return opt != null ? binder(value(opt)) : undefined;\n}\nfunction tryOp(op, arg) {\n  try {\n    return some(op(arg));\n  } catch (_a) {\n    return undefined;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ2xpZW50Ly5mYWJsZS9mYWJsZV9tb2R1bGVzL2ZhYmxlLWxpYnJhcnkuMy43LjIvT3B0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNEQ7QUFDNUQ7QUFDTyxJQUFNRyxJQUFJO0VBQ2IsY0FBWUMsS0FBSyxFQUFFO0lBQUE7SUFDZixJQUFJLENBQUNBLEtBQUssR0FBR0EsS0FBSztFQUN0QjtFQUFDO0lBQUE7SUFBQSxPQUNELGtCQUFTO01BQ0wsT0FBTyxJQUFJLENBQUNBLEtBQUs7SUFDckI7SUFDQTtFQUFBO0lBQUE7SUFBQSxPQUNBLG9CQUFXO01BQ1AsT0FBT0MsTUFBTSxDQUFDLElBQUksQ0FBQ0QsS0FBSyxDQUFDO0lBQzdCO0VBQUM7SUFBQTtJQUFBLE9BQ0QsdUJBQWM7TUFDVixPQUFPRix3REFBYyxDQUFDLElBQUksQ0FBQ0UsS0FBSyxDQUFDO0lBQ3JDO0VBQUM7SUFBQTtJQUFBLE9BQ0QsZ0JBQU9FLEtBQUssRUFBRTtNQUNWLElBQUlBLEtBQUssSUFBSSxJQUFJLEVBQUU7UUFDZixPQUFPLEtBQUs7TUFDaEIsQ0FBQyxNQUNJO1FBQ0QsT0FBT0wsZ0RBQU0sQ0FBQyxJQUFJLENBQUNHLEtBQUssRUFBRUUsS0FBSyxZQUFZSCxJQUFJLEdBQUdHLEtBQUssQ0FBQ0YsS0FBSyxHQUFHRSxLQUFLLENBQUM7TUFDMUU7SUFDSjtFQUFDO0lBQUE7SUFBQSxPQUNELG1CQUFVQSxLQUFLLEVBQUU7TUFDYixJQUFJQSxLQUFLLElBQUksSUFBSSxFQUFFO1FBQ2YsT0FBTyxDQUFDO01BQ1osQ0FBQyxNQUNJO1FBQ0QsT0FBT04saURBQU8sQ0FBQyxJQUFJLENBQUNJLEtBQUssRUFBRUUsS0FBSyxZQUFZSCxJQUFJLEdBQUdHLEtBQUssQ0FBQ0YsS0FBSyxHQUFHRSxLQUFLLENBQUM7TUFDM0U7SUFDSjtFQUFDO0VBQUE7QUFBQTtBQUVFLFNBQVNDLElBQUksQ0FBQ0MsQ0FBQyxFQUFFO0VBQ3BCLE9BQU9BLENBQUMsSUFBSSxJQUFJLElBQUlBLENBQUMsWUFBWUwsSUFBSSxHQUFHLElBQUlBLElBQUksQ0FBQ0ssQ0FBQyxDQUFDLEdBQUdBLENBQUM7QUFDM0Q7QUFDTyxTQUFTSixLQUFLLENBQUNJLENBQUMsRUFBRTtFQUNyQixJQUFJQSxDQUFDLElBQUksSUFBSSxFQUFFO0lBQ1gsTUFBTSxJQUFJQyxLQUFLLENBQUMscUJBQXFCLENBQUM7RUFDMUMsQ0FBQyxNQUNJO0lBQ0QsT0FBT0QsQ0FBQyxZQUFZTCxJQUFJLEdBQUdLLENBQUMsQ0FBQ0osS0FBSyxHQUFHSSxDQUFDO0VBQzFDO0FBQ0o7QUFDTyxTQUFTRSxVQUFVLENBQUNGLENBQUMsRUFBRTtFQUMxQjtFQUNBO0VBQ0EsT0FBT0EsQ0FBQyxJQUFJLElBQUksR0FBR0csU0FBUyxHQUFHSCxDQUFDO0FBQ3BDO0FBQ08sU0FBU0ksVUFBVSxDQUFDSixDQUFDLEVBQUU7RUFDMUIsT0FBT0EsQ0FBQyxJQUFJLElBQUksR0FBRyxJQUFJLEdBQUdKLEtBQUssQ0FBQ0ksQ0FBQyxDQUFDO0FBQ3RDO0FBQ08sU0FBU0ssT0FBTyxDQUFDTCxDQUFDLEVBQUU7RUFDdkIsT0FBT0EsQ0FBQyxJQUFJLElBQUksR0FBR0csU0FBUyxHQUFHUCxLQUFLLENBQUNJLENBQUMsQ0FBQztBQUMzQztBQUNPLFNBQVNNLE9BQU8sQ0FBQ0MsR0FBRyxFQUFFO0VBQ3pCLE9BQVFBLEdBQUcsSUFBSSxJQUFJLEdBQUksRUFBRSxHQUFHLENBQUNYLEtBQUssQ0FBQ1csR0FBRyxDQUFDLENBQUM7QUFDNUM7QUFDTyxTQUFTQyxVQUFVLENBQUNELEdBQUcsRUFBRUUsWUFBWSxFQUFFO0VBQzFDLE9BQVFGLEdBQUcsSUFBSSxJQUFJLEdBQUlYLEtBQUssQ0FBQ1csR0FBRyxDQUFDLEdBQUdFLFlBQVk7QUFDcEQ7QUFDTyxTQUFTQyxjQUFjLENBQUNILEdBQUcsRUFBRUksUUFBUSxFQUFFO0VBQzFDLE9BQVFKLEdBQUcsSUFBSSxJQUFJLEdBQUlYLEtBQUssQ0FBQ1csR0FBRyxDQUFDLEdBQUdJLFFBQVEsRUFBRTtBQUNsRDtBQUNPLFNBQVNDLE1BQU0sQ0FBQ0MsU0FBUyxFQUFFTixHQUFHLEVBQUU7RUFDbkMsT0FBUUEsR0FBRyxJQUFJLElBQUksR0FBS00sU0FBUyxDQUFDakIsS0FBSyxDQUFDVyxHQUFHLENBQUMsQ0FBQyxHQUFHQSxHQUFHLEdBQUdKLFNBQVMsR0FBSUksR0FBRztBQUMxRTtBQUNPLFNBQVNPLEdBQUcsQ0FBQ0MsT0FBTyxFQUFFUixHQUFHLEVBQUU7RUFDOUIsT0FBUUEsR0FBRyxJQUFJLElBQUksR0FBSVIsSUFBSSxDQUFDZ0IsT0FBTyxDQUFDbkIsS0FBSyxDQUFDVyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUdKLFNBQVM7QUFDaEU7QUFDTyxTQUFTYSxJQUFJLENBQUNELE9BQU8sRUFBRUUsSUFBSSxFQUFFQyxJQUFJLEVBQUU7RUFDdEMsT0FBUUQsSUFBSSxJQUFJLElBQUksSUFBSUMsSUFBSSxJQUFJLElBQUksR0FBSUgsT0FBTyxDQUFDbkIsS0FBSyxDQUFDcUIsSUFBSSxDQUFDLEVBQUVyQixLQUFLLENBQUNzQixJQUFJLENBQUMsQ0FBQyxHQUFHZixTQUFTO0FBQ3pGO0FBQ08sU0FBU2dCLElBQUksQ0FBQ0osT0FBTyxFQUFFRSxJQUFJLEVBQUVDLElBQUksRUFBRUUsSUFBSSxFQUFFO0VBQzVDLE9BQVFILElBQUksSUFBSSxJQUFJLElBQUlDLElBQUksSUFBSSxJQUFJLElBQUlFLElBQUksSUFBSSxJQUFJLEdBQUlMLE9BQU8sQ0FBQ25CLEtBQUssQ0FBQ3FCLElBQUksQ0FBQyxFQUFFckIsS0FBSyxDQUFDc0IsSUFBSSxDQUFDLEVBQUV0QixLQUFLLENBQUN3QixJQUFJLENBQUMsQ0FBQyxHQUFHakIsU0FBUztBQUN0SDtBQUNPLFNBQVNrQixJQUFJLENBQUNDLE1BQU0sRUFBRWYsR0FBRyxFQUFFO0VBQzlCLE9BQU9BLEdBQUcsSUFBSSxJQUFJLEdBQUdlLE1BQU0sQ0FBQzFCLEtBQUssQ0FBQ1csR0FBRyxDQUFDLENBQUMsR0FBR0osU0FBUztBQUN2RDtBQUNPLFNBQVNvQixLQUFLLENBQUNDLEVBQUUsRUFBRUMsR0FBRyxFQUFFO0VBQzNCLElBQUk7SUFDQSxPQUFPMUIsSUFBSSxDQUFDeUIsRUFBRSxDQUFDQyxHQUFHLENBQUMsQ0FBQztFQUN4QixDQUFDLENBQ0QsT0FBT0MsRUFBRSxFQUFFO0lBQ1AsT0FBT3ZCLFNBQVM7RUFDcEI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9DbGllbnQvLmZhYmxlL2ZhYmxlX21vZHVsZXMvZmFibGUtbGlicmFyeS4zLjcuMi9PcHRpb24uanM/ZTJlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb21wYXJlLCBlcXVhbHMsIHN0cnVjdHVyYWxIYXNoIH0gZnJvbSBcIi4vVXRpbC5qc1wiO1xuLy8gVXNpbmcgYSBjbGFzcyBoZXJlIGZvciBiZXR0ZXIgY29tcGF0aWJpbGl0eSB3aXRoIFRTIGZpbGVzIGltcG9ydGluZyBTb21lXG5leHBvcnQgY2xhc3MgU29tZSB7XG4gICAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgIH1cbiAgICAvLyBEb24ndCBhZGQgXCJTb21lXCIgZm9yIGNvbnNpc3RlbmN5IHdpdGggZXJhc2VkIG9wdGlvbnNcbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIFN0cmluZyh0aGlzLnZhbHVlKTtcbiAgICB9XG4gICAgR2V0SGFzaENvZGUoKSB7XG4gICAgICAgIHJldHVybiBzdHJ1Y3R1cmFsSGFzaCh0aGlzLnZhbHVlKTtcbiAgICB9XG4gICAgRXF1YWxzKG90aGVyKSB7XG4gICAgICAgIGlmIChvdGhlciA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZXF1YWxzKHRoaXMudmFsdWUsIG90aGVyIGluc3RhbmNlb2YgU29tZSA/IG90aGVyLnZhbHVlIDogb3RoZXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIENvbXBhcmVUbyhvdGhlcikge1xuICAgICAgICBpZiAob3RoZXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gY29tcGFyZSh0aGlzLnZhbHVlLCBvdGhlciBpbnN0YW5jZW9mIFNvbWUgPyBvdGhlci52YWx1ZSA6IG90aGVyKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBzb21lKHgpIHtcbiAgICByZXR1cm4geCA9PSBudWxsIHx8IHggaW5zdGFuY2VvZiBTb21lID8gbmV3IFNvbWUoeCkgOiB4O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHZhbHVlKHgpIHtcbiAgICBpZiAoeCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk9wdGlvbiBoYXMgbm8gdmFsdWVcIik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4geCBpbnN0YW5jZW9mIFNvbWUgPyB4LnZhbHVlIDogeDtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gb2ZOdWxsYWJsZSh4KSB7XG4gICAgLy8gVGhpcyB3aWxsIGZhaWwgd2l0aCB1bml0IHByb2JhYmx5LCBhbiBhbHRlcm5hdGl2ZSB3b3VsZCBiZTpcbiAgICAvLyByZXR1cm4geCA9PT0gbnVsbCA/IHVuZGVmaW5lZCA6ICh4ID09PSB1bmRlZmluZWQgPyBuZXcgU29tZSh4KSA6IHgpO1xuICAgIHJldHVybiB4ID09IG51bGwgPyB1bmRlZmluZWQgOiB4O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRvTnVsbGFibGUoeCkge1xuICAgIHJldHVybiB4ID09IG51bGwgPyBudWxsIDogdmFsdWUoeCk7XG59XG5leHBvcnQgZnVuY3Rpb24gZmxhdHRlbih4KSB7XG4gICAgcmV0dXJuIHggPT0gbnVsbCA/IHVuZGVmaW5lZCA6IHZhbHVlKHgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRvQXJyYXkob3B0KSB7XG4gICAgcmV0dXJuIChvcHQgPT0gbnVsbCkgPyBbXSA6IFt2YWx1ZShvcHQpXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0QXJnKG9wdCwgZGVmYXVsdFZhbHVlKSB7XG4gICAgcmV0dXJuIChvcHQgIT0gbnVsbCkgPyB2YWx1ZShvcHQpIDogZGVmYXVsdFZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRBcmdXaXRoKG9wdCwgZGVmVGh1bmspIHtcbiAgICByZXR1cm4gKG9wdCAhPSBudWxsKSA/IHZhbHVlKG9wdCkgOiBkZWZUaHVuaygpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlcihwcmVkaWNhdGUsIG9wdCkge1xuICAgIHJldHVybiAob3B0ICE9IG51bGwpID8gKHByZWRpY2F0ZSh2YWx1ZShvcHQpKSA/IG9wdCA6IHVuZGVmaW5lZCkgOiBvcHQ7XG59XG5leHBvcnQgZnVuY3Rpb24gbWFwKG1hcHBpbmcsIG9wdCkge1xuICAgIHJldHVybiAob3B0ICE9IG51bGwpID8gc29tZShtYXBwaW5nKHZhbHVlKG9wdCkpKSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYXAyKG1hcHBpbmcsIG9wdDEsIG9wdDIpIHtcbiAgICByZXR1cm4gKG9wdDEgIT0gbnVsbCAmJiBvcHQyICE9IG51bGwpID8gbWFwcGluZyh2YWx1ZShvcHQxKSwgdmFsdWUob3B0MikpIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1hcDMobWFwcGluZywgb3B0MSwgb3B0Miwgb3B0Mykge1xuICAgIHJldHVybiAob3B0MSAhPSBudWxsICYmIG9wdDIgIT0gbnVsbCAmJiBvcHQzICE9IG51bGwpID8gbWFwcGluZyh2YWx1ZShvcHQxKSwgdmFsdWUob3B0MiksIHZhbHVlKG9wdDMpKSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBiaW5kKGJpbmRlciwgb3B0KSB7XG4gICAgcmV0dXJuIG9wdCAhPSBudWxsID8gYmluZGVyKHZhbHVlKG9wdCkpIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRyeU9wKG9wLCBhcmcpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gc29tZShvcChhcmcpKTtcbiAgICB9XG4gICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbImNvbXBhcmUiLCJlcXVhbHMiLCJzdHJ1Y3R1cmFsSGFzaCIsIlNvbWUiLCJ2YWx1ZSIsIlN0cmluZyIsIm90aGVyIiwic29tZSIsIngiLCJFcnJvciIsIm9mTnVsbGFibGUiLCJ1bmRlZmluZWQiLCJ0b051bGxhYmxlIiwiZmxhdHRlbiIsInRvQXJyYXkiLCJvcHQiLCJkZWZhdWx0QXJnIiwiZGVmYXVsdFZhbHVlIiwiZGVmYXVsdEFyZ1dpdGgiLCJkZWZUaHVuayIsImZpbHRlciIsInByZWRpY2F0ZSIsIm1hcCIsIm1hcHBpbmciLCJtYXAyIiwib3B0MSIsIm9wdDIiLCJtYXAzIiwib3B0MyIsImJpbmQiLCJiaW5kZXIiLCJ0cnlPcCIsIm9wIiwiYXJnIiwiX2EiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js":
/*!***************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CaseInfo\": () => (/* binding */ CaseInfo),\n/* harmony export */   \"MethodInfo\": () => (/* binding */ MethodInfo),\n/* harmony export */   \"TypeInfo\": () => (/* binding */ TypeInfo),\n/* harmony export */   \"GenericParameter\": () => (/* binding */ GenericParameter),\n/* harmony export */   \"getGenerics\": () => (/* binding */ getGenerics),\n/* harmony export */   \"getHashCode\": () => (/* binding */ getHashCode),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"class_type\": () => (/* binding */ class_type),\n/* harmony export */   \"record_type\": () => (/* binding */ record_type),\n/* harmony export */   \"anonRecord_type\": () => (/* binding */ anonRecord_type),\n/* harmony export */   \"union_type\": () => (/* binding */ union_type),\n/* harmony export */   \"tuple_type\": () => (/* binding */ tuple_type),\n/* harmony export */   \"delegate_type\": () => (/* binding */ delegate_type),\n/* harmony export */   \"lambda_type\": () => (/* binding */ lambda_type),\n/* harmony export */   \"option_type\": () => (/* binding */ option_type),\n/* harmony export */   \"list_type\": () => (/* binding */ list_type),\n/* harmony export */   \"array_type\": () => (/* binding */ array_type),\n/* harmony export */   \"enum_type\": () => (/* binding */ enum_type),\n/* harmony export */   \"measure_type\": () => (/* binding */ measure_type),\n/* harmony export */   \"generic_type\": () => (/* binding */ generic_type),\n/* harmony export */   \"obj_type\": () => (/* binding */ obj_type),\n/* harmony export */   \"unit_type\": () => (/* binding */ unit_type),\n/* harmony export */   \"char_type\": () => (/* binding */ char_type),\n/* harmony export */   \"string_type\": () => (/* binding */ string_type),\n/* harmony export */   \"bool_type\": () => (/* binding */ bool_type),\n/* harmony export */   \"int8_type\": () => (/* binding */ int8_type),\n/* harmony export */   \"uint8_type\": () => (/* binding */ uint8_type),\n/* harmony export */   \"int16_type\": () => (/* binding */ int16_type),\n/* harmony export */   \"uint16_type\": () => (/* binding */ uint16_type),\n/* harmony export */   \"int32_type\": () => (/* binding */ int32_type),\n/* harmony export */   \"uint32_type\": () => (/* binding */ uint32_type),\n/* harmony export */   \"float32_type\": () => (/* binding */ float32_type),\n/* harmony export */   \"float64_type\": () => (/* binding */ float64_type),\n/* harmony export */   \"decimal_type\": () => (/* binding */ decimal_type),\n/* harmony export */   \"name\": () => (/* binding */ name),\n/* harmony export */   \"fullName\": () => (/* binding */ fullName),\n/* harmony export */   \"namespace\": () => (/* binding */ namespace),\n/* harmony export */   \"isArray\": () => (/* binding */ isArray),\n/* harmony export */   \"getElementType\": () => (/* binding */ getElementType),\n/* harmony export */   \"isGenericType\": () => (/* binding */ isGenericType),\n/* harmony export */   \"isGenericParameter\": () => (/* binding */ isGenericParameter),\n/* harmony export */   \"isEnum\": () => (/* binding */ isEnum),\n/* harmony export */   \"isSubclassOf\": () => (/* binding */ isSubclassOf),\n/* harmony export */   \"isInstanceOfType\": () => (/* binding */ isInstanceOfType),\n/* harmony export */   \"getGenericTypeDefinition\": () => (/* binding */ getGenericTypeDefinition),\n/* harmony export */   \"getEnumUnderlyingType\": () => (/* binding */ getEnumUnderlyingType),\n/* harmony export */   \"getEnumValues\": () => (/* binding */ getEnumValues),\n/* harmony export */   \"getEnumNames\": () => (/* binding */ getEnumNames),\n/* harmony export */   \"parseEnum\": () => (/* binding */ parseEnum),\n/* harmony export */   \"tryParseEnum\": () => (/* binding */ tryParseEnum),\n/* harmony export */   \"getEnumName\": () => (/* binding */ getEnumName),\n/* harmony export */   \"isEnumDefined\": () => (/* binding */ isEnumDefined),\n/* harmony export */   \"getUnionCases\": () => (/* binding */ getUnionCases),\n/* harmony export */   \"getRecordElements\": () => (/* binding */ getRecordElements),\n/* harmony export */   \"getTupleElements\": () => (/* binding */ getTupleElements),\n/* harmony export */   \"getFunctionElements\": () => (/* binding */ getFunctionElements),\n/* harmony export */   \"isUnion\": () => (/* binding */ isUnion),\n/* harmony export */   \"isRecord\": () => (/* binding */ isRecord),\n/* harmony export */   \"isTuple\": () => (/* binding */ isTuple),\n/* harmony export */   \"isFunction\": () => (/* binding */ isFunction),\n/* harmony export */   \"getUnionFields\": () => (/* binding */ getUnionFields),\n/* harmony export */   \"getUnionCaseFields\": () => (/* binding */ getUnionCaseFields),\n/* harmony export */   \"getRecordFields\": () => (/* binding */ getRecordFields),\n/* harmony export */   \"getRecordField\": () => (/* binding */ getRecordField),\n/* harmony export */   \"getTupleFields\": () => (/* binding */ getTupleFields),\n/* harmony export */   \"getTupleField\": () => (/* binding */ getTupleField),\n/* harmony export */   \"makeUnion\": () => (/* binding */ makeUnion),\n/* harmony export */   \"makeRecord\": () => (/* binding */ makeRecord),\n/* harmony export */   \"makeTuple\": () => (/* binding */ makeTuple),\n/* harmony export */   \"makeGenericType\": () => (/* binding */ makeGenericType),\n/* harmony export */   \"createInstance\": () => (/* binding */ createInstance),\n/* harmony export */   \"getValue\": () => (/* binding */ getValue),\n/* harmony export */   \"getCaseTag\": () => (/* binding */ getCaseTag),\n/* harmony export */   \"getCaseName\": () => (/* binding */ getCaseName),\n/* harmony export */   \"getCaseFields\": () => (/* binding */ getCaseFields)\n/* harmony export */ });\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _Decimal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Decimal.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Decimal.js\");\n/* harmony import */ var _Long_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Long.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Long.js\");\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\nvar CaseInfo = /*#__PURE__*/_createClass(function CaseInfo(declaringType, tag, name, fields) {\n  _classCallCheck(this, CaseInfo);\n  this.declaringType = declaringType;\n  this.tag = tag;\n  this.name = name;\n  this.fields = fields;\n});\nvar MethodInfo = /*#__PURE__*/_createClass(function MethodInfo(name, parameters, returnType) {\n  _classCallCheck(this, MethodInfo);\n  this.name = name;\n  this.parameters = parameters;\n  this.returnType = returnType;\n});\nvar TypeInfo = /*#__PURE__*/function () {\n  function TypeInfo(fullname, generics, construct, parent, fields, cases, enumCases) {\n    _classCallCheck(this, TypeInfo);\n    this.fullname = fullname;\n    this.generics = generics;\n    this.construct = construct;\n    this.parent = parent;\n    this.fields = fields;\n    this.cases = cases;\n    this.enumCases = enumCases;\n  }\n  _createClass(TypeInfo, [{\n    key: \"toString\",\n    value: function toString() {\n      return fullName(this);\n    }\n  }, {\n    key: \"GetHashCode\",\n    value: function GetHashCode() {\n      return getHashCode(this);\n    }\n  }, {\n    key: \"Equals\",\n    value: function Equals(other) {\n      return equals(this, other);\n    }\n  }]);\n  return TypeInfo;\n}();\nvar GenericParameter = /*#__PURE__*/function (_TypeInfo) {\n  _inherits(GenericParameter, _TypeInfo);\n  var _super = _createSuper(GenericParameter);\n  function GenericParameter(name) {\n    _classCallCheck(this, GenericParameter);\n    return _super.call(this, name);\n  }\n  return _createClass(GenericParameter);\n}(TypeInfo);\nfunction getGenerics(t) {\n  return t.generics != null ? t.generics : [];\n}\nfunction getHashCode(t) {\n  var fullnameHash = (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.stringHash)(t.fullname);\n  var genHashes = getGenerics(t).map(getHashCode);\n  return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.combineHashCodes)([fullnameHash].concat(_toConsumableArray(genHashes)));\n}\nfunction equals(t1, t2) {\n  if (t1.fullname === \"\") {\n    // Anonymous records\n    return t2.fullname === \"\" && (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.equalArraysWith)(getRecordElements(t1), getRecordElements(t2), function (_ref, _ref2) {\n      var _ref3 = _slicedToArray(_ref, 2),\n        k1 = _ref3[0],\n        v1 = _ref3[1];\n      var _ref4 = _slicedToArray(_ref2, 2),\n        k2 = _ref4[0],\n        v2 = _ref4[1];\n      return k1 === k2 && equals(v1, v2);\n    });\n  } else {\n    return t1.fullname === t2.fullname && (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.equalArraysWith)(getGenerics(t1), getGenerics(t2), equals);\n  }\n}\nfunction class_type(fullname, generics, construct, parent) {\n  return new TypeInfo(fullname, generics, construct, parent);\n}\nfunction record_type(fullname, generics, construct, fields) {\n  return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nfunction anonRecord_type() {\n  for (var _len = arguments.length, fields = new Array(_len), _key = 0; _key < _len; _key++) {\n    fields[_key] = arguments[_key];\n  }\n  return new TypeInfo(\"\", undefined, undefined, undefined, function () {\n    return fields;\n  });\n}\nfunction union_type(fullname, generics, construct, cases) {\n  var t = new TypeInfo(fullname, generics, construct, undefined, undefined, function () {\n    var caseNames = construct.prototype.cases();\n    return cases().map(function (fields, i) {\n      return new CaseInfo(t, i, caseNames[i], fields);\n    });\n  });\n  return t;\n}\nfunction tuple_type() {\n  for (var _len2 = arguments.length, generics = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    generics[_key2] = arguments[_key2];\n  }\n  return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nfunction delegate_type() {\n  for (var _len3 = arguments.length, generics = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    generics[_key3] = arguments[_key3];\n  }\n  return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nfunction lambda_type(argType, returnType) {\n  return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nfunction option_type(generic) {\n  return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nfunction list_type(generic) {\n  return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nfunction array_type(generic) {\n  return new TypeInfo(\"[]\", [generic]);\n}\nfunction enum_type(fullname, underlyingType, enumCases) {\n  return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nfunction measure_type(fullname) {\n  return new TypeInfo(fullname);\n}\nfunction generic_type(name) {\n  return new GenericParameter(name);\n}\nvar obj_type = new TypeInfo(\"System.Object\");\nvar unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nvar char_type = new TypeInfo(\"System.Char\");\nvar string_type = new TypeInfo(\"System.String\");\nvar bool_type = new TypeInfo(\"System.Boolean\");\nvar int8_type = new TypeInfo(\"System.SByte\");\nvar uint8_type = new TypeInfo(\"System.Byte\");\nvar int16_type = new TypeInfo(\"System.Int16\");\nvar uint16_type = new TypeInfo(\"System.UInt16\");\nvar int32_type = new TypeInfo(\"System.Int32\");\nvar uint32_type = new TypeInfo(\"System.UInt32\");\nvar float32_type = new TypeInfo(\"System.Single\");\nvar float64_type = new TypeInfo(\"System.Double\");\nvar decimal_type = new TypeInfo(\"System.Decimal\");\nfunction name(info) {\n  if (Array.isArray(info)) {\n    return info[0];\n  } else if (info instanceof TypeInfo) {\n    var elemType = getElementType(info);\n    if (elemType != null) {\n      return name(elemType) + \"[]\";\n    } else {\n      var i = info.fullname.lastIndexOf(\".\");\n      return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n  } else {\n    return info.name;\n  }\n}\nfunction fullName(t) {\n  var elemType = getElementType(t);\n  if (elemType != null) {\n    return fullName(elemType) + \"[]\";\n  } else if (t.generics == null || t.generics.length === 0) {\n    return t.fullname;\n  } else {\n    return t.fullname + \"[\" + t.generics.map(function (x) {\n      return fullName(x);\n    }).join(\",\") + \"]\";\n  }\n}\nfunction namespace(t) {\n  var elemType = getElementType(t);\n  if (elemType != null) {\n    return namespace(elemType);\n  } else {\n    var i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n  }\n}\nfunction isArray(t) {\n  return getElementType(t) != null;\n}\nfunction getElementType(t) {\n  var _a;\n  return t.fullname === \"[]\" && ((_a = t.generics) === null || _a === void 0 ? void 0 : _a.length) === 1 ? t.generics[0] : undefined;\n}\nfunction isGenericType(t) {\n  return t.generics != null && t.generics.length > 0;\n}\nfunction isGenericParameter(t) {\n  return t instanceof GenericParameter;\n}\nfunction isEnum(t) {\n  return t.enumCases != null && t.enumCases.length > 0;\n}\nfunction isSubclassOf(t1, t2) {\n  return t2.fullname === obj_type.fullname || t1.parent != null && (t1.parent.Equals(t2) || isSubclassOf(t1.parent, t2));\n}\nfunction isErasedToNumber(t) {\n  return isEnum(t) || [int8_type.fullname, uint8_type.fullname, int16_type.fullname, uint16_type.fullname, int32_type.fullname, uint32_type.fullname, float32_type.fullname, float64_type.fullname].includes(t.fullname);\n}\nfunction isInstanceOfType(t, o) {\n  if (t.fullname === obj_type.fullname) return true;\n  switch (_typeof(o)) {\n    case \"boolean\":\n      return t.fullname === bool_type.fullname;\n    case \"string\":\n      return t.fullname === string_type.fullname;\n    case \"function\":\n      return isFunction(t);\n    case \"number\":\n      return isErasedToNumber(t);\n    default:\n      return t.construct != null && o instanceof t.construct;\n  }\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nfunction getGenericTypeDefinition(t) {\n  return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(function () {\n    return obj_type;\n  }));\n}\nfunction getEnumUnderlyingType(t) {\n  var _a;\n  return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nfunction getEnumValues(t) {\n  if (isEnum(t) && t.enumCases != null) {\n    return t.enumCases.map(function (kv) {\n      return kv[1];\n    });\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not an enum type\"));\n  }\n}\nfunction getEnumNames(t) {\n  if (isEnum(t) && t.enumCases != null) {\n    return t.enumCases.map(function (kv) {\n      return kv[0];\n    });\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not an enum type\"));\n  }\n}\nfunction getEnumCase(t, v) {\n  if (t.enumCases != null) {\n    if (typeof v === \"string\") {\n      var _iterator = _createForOfIteratorHelper(t.enumCases),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var kv = _step.value;\n          if (kv[0] === v) {\n            return kv;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      throw new Error(\"'\".concat(v, \"' was not found in \").concat(t.fullname));\n    } else {\n      var _iterator2 = _createForOfIteratorHelper(t.enumCases),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _kv = _step2.value;\n          if (_kv[1] === v) {\n            return _kv;\n          }\n        }\n        // .NET returns the number even if it doesn't match any of the cases\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return [\"\", v];\n    }\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not an enum type\"));\n  }\n}\nfunction parseEnum(t, str) {\n  // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n  var value = parseInt(str, 10);\n  return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nfunction tryParseEnum(t, str, defValue) {\n  try {\n    defValue.contents = parseEnum(t, str);\n    return true;\n  } catch (_a) {\n    return false;\n  }\n}\nfunction getEnumName(t, v) {\n  return getEnumCase(t, v)[0];\n}\nfunction isEnumDefined(t, v) {\n  try {\n    var kv = getEnumCase(t, v);\n    return kv[0] != null && kv[0] !== \"\";\n  } catch (_a) {\n    // supress error\n  }\n  return false;\n}\n// FSharpType\nfunction getUnionCases(t) {\n  if (t.cases != null) {\n    return t.cases();\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not an F# union type\"));\n  }\n}\nfunction getRecordElements(t) {\n  if (t.fields != null) {\n    return t.fields();\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not an F# record type\"));\n  }\n}\nfunction getTupleElements(t) {\n  if (isTuple(t) && t.generics != null) {\n    return t.generics;\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not a tuple type\"));\n  }\n}\nfunction getFunctionElements(t) {\n  if (isFunction(t) && t.generics != null) {\n    var gen = t.generics;\n    return [gen[0], gen[1]];\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not an F# function type\"));\n  }\n}\nfunction isUnion(t) {\n  return t instanceof TypeInfo ? t.cases != null : t instanceof _Types_js__WEBPACK_IMPORTED_MODULE_1__.Union;\n}\nfunction isRecord(t) {\n  return t instanceof TypeInfo ? t.fields != null : t instanceof _Types_js__WEBPACK_IMPORTED_MODULE_1__.Record;\n}\nfunction isTuple(t) {\n  return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nfunction isFunction(t) {\n  return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nfunction getUnionFields(v, t) {\n  var cases = getUnionCases(t);\n  var case_ = cases[v.tag];\n  if (case_ == null) {\n    throw new Error(\"Cannot find case \".concat(v.name, \" in union type\"));\n  }\n  return [case_, v.fields];\n}\nfunction getUnionCaseFields(uci) {\n  return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nfunction getRecordFields(v) {\n  return Object.keys(v).map(function (k) {\n    return v[k];\n  });\n}\nfunction getRecordField(v, field) {\n  return v[field[0]];\n}\nfunction getTupleFields(v) {\n  return v;\n}\nfunction getTupleField(v, i) {\n  return v[i];\n}\nfunction makeUnion(uci, values) {\n  var expectedLength = (uci.fields || []).length;\n  if (values.length !== expectedLength) {\n    throw new Error(\"Expected an array of length \".concat(expectedLength, \" but got \").concat(values.length));\n  }\n  return uci.declaringType.construct != null ? _construct(uci.declaringType.construct, [uci.tag].concat(_toConsumableArray(values))) : {};\n}\nfunction makeRecord(t, values) {\n  var fields = getRecordElements(t);\n  if (fields.length !== values.length) {\n    throw new Error(\"Expected an array of length \".concat(fields.length, \" but got \").concat(values.length));\n  }\n  return t.construct != null ? _construct(t.construct, _toConsumableArray(values)) : fields.reduce(function (obj, _ref5, i) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n      key = _ref6[0],\n      _t = _ref6[1];\n    obj[key] = values[i];\n    return obj;\n  }, {});\n}\nfunction makeTuple(values, _t) {\n  return values;\n}\nfunction makeGenericType(t, generics) {\n  return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nfunction createInstance(t, consArgs) {\n  // TODO: Check if consArgs length is same as t.construct?\n  // (Arg types can still be different)\n  if (typeof t.construct === \"function\") {\n    return _construct(t.construct, _toConsumableArray(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n  } else if (isErasedToNumber(t)) {\n    return 0;\n  } else {\n    switch (t.fullname) {\n      case obj_type.fullname:\n        return {};\n      case bool_type.fullname:\n        return false;\n      case \"System.Int64\":\n      case \"System.UInt64\":\n        // typeof<int64> and typeof<uint64> get transformed to class_type(\"System.Int64\")\n        // and class_type(\"System.UInt64\") respectively. Test for the name of the primitive type.\n        return (0,_Long_js__WEBPACK_IMPORTED_MODULE_2__.fromInt)(0);\n      case decimal_type.fullname:\n        return new _Decimal_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](0);\n      case char_type.fullname:\n        // Even though char is a value type, it's erased to string, and Unchecked.defaultof<char> is null\n        return null;\n      default:\n        throw new Error(\"Cannot access constructor of \".concat(t.fullname));\n    }\n  }\n}\nfunction getValue(propertyInfo, v) {\n  return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n  if (!(x instanceof _Types_js__WEBPACK_IMPORTED_MODULE_1__.Union)) {\n    throw new Error(\"Value is not an F# union type\");\n  }\n}\nfunction getCaseTag(x) {\n  assertUnion(x);\n  return x.tag;\n}\nfunction getCaseName(x) {\n  assertUnion(x);\n  return x.cases()[x.tag];\n}\nfunction getCaseFields(x) {\n  assertUnion(x);\n  return x.fields;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/RegExp.js":
/*!***********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/RegExp.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"escape\": () => (/* binding */ escape),\n/* harmony export */   \"unescape\": () => (/* binding */ unescape),\n/* harmony export */   \"isMatch\": () => (/* binding */ isMatch),\n/* harmony export */   \"match\": () => (/* binding */ match),\n/* harmony export */   \"matches\": () => (/* binding */ matches),\n/* harmony export */   \"options\": () => (/* binding */ options),\n/* harmony export */   \"replace\": () => (/* binding */ replace),\n/* harmony export */   \"split\": () => (/* binding */ split)\n/* harmony export */ });\nfunction create(pattern) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Supported RegexOptions\n  // * IgnoreCase:  0x0001\n  // * Multiline:   0x0002\n  // * Singleline:  0x0010\n  // * ECMAScript:  0x0100 (ignored)\n  if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n    throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n  }\n  var flags = \"g\";\n  flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n  flags += options & 2 ? \"m\" : \"\";\n  flags += options & 16 ? \"s\" : \"\";\n  return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escape(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nfunction unescape(str) {\n  return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nfunction isMatch(reg, input) {\n  var startAt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  reg.lastIndex = startAt;\n  return reg.test(input);\n}\nfunction match(reg, input) {\n  var startAt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  reg.lastIndex = startAt;\n  return reg.exec(input);\n}\nfunction matches(reg, input) {\n  var startAt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  reg.lastIndex = startAt;\n  if (!reg.global) {\n    throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n  }\n\n  var m = reg.exec(input);\n  var matches = [];\n  while (m !== null) {\n    matches.push(m);\n    m = reg.exec(input);\n  }\n  return matches;\n}\nfunction options(reg) {\n  var options = 256; // ECMAScript\n  options |= reg.ignoreCase ? 1 : 0;\n  options |= reg.multiline ? 2 : 0;\n  return options;\n}\nfunction replace(reg, input, replacement, limit) {\n  var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  function replacer() {\n    var res = arguments[0];\n    if (limit) {\n      limit--;\n      var _match = [];\n      var len = arguments.length;\n      // arguments: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_a_parameter\n      // * match: matched substring\n      // * p1, p2, ...: nth capture group string\n      // * offset: offset of matched substring\n      // * string: whole string examined\n      // * groups: named capturing groups\n      //           ONLY if regex contains a named capture group AND browser supports named groups\n      // -> last element can be groups OR input string\n      // -> check if last element is string\n      var withGroups = typeof arguments[len - 1] !== \"string\";\n      var pLast = withGroups ? len - 3 : len - 2;\n      for (var i = 0; i < pLast; i++) {\n        _match.push(arguments[i]);\n      }\n      _match.index = arguments[pLast++];\n      _match.input = arguments[pLast++];\n      if (withGroups) {\n        _match.groups = arguments[pLast];\n      }\n      res = replacement(_match);\n    }\n    return res;\n  }\n  if (typeof reg === \"string\") {\n    var tmp = reg;\n    reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n    input = tmp;\n    limit = undefined;\n  }\n  if (typeof replacement === \"function\") {\n    limit = limit == null ? -1 : limit;\n    return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n  } else {\n    replacement = replacement\n    // $0 doesn't work with JS regex, see #1155\n    .replace(/\\$0/g, function (_s) {\n      return \"$&\";\n    })\n    // named groups in replacement are `${name}` in .Net, but `$<name>` in JS (in regex: groups are `(?<name>...)` in both)\n    .replace(/\\${([^}]+)}/g, \"\\$<$1>\");\n    if (limit != null) {\n      var m;\n      var sub1 = input.substring(offset);\n      var _matches = matches(reg, sub1);\n      var sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n      return input.substring(0, offset) + sub2.replace(reg, replacement) + input.substring(offset + sub2.length);\n    } else {\n      return input.replace(reg, replacement);\n    }\n  }\n}\nfunction split(reg, input, limit) {\n  var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  if (typeof reg === \"string\") {\n    var tmp = reg;\n    reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n    input = tmp;\n    limit = undefined;\n  }\n  input = input.substring(offset);\n  return input.split(reg, limit);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/RegExp.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Seq.js":
/*!********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Seq.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SR_enumerationAlreadyFinished\": () => (/* binding */ SR_enumerationAlreadyFinished),\n/* harmony export */   \"SR_enumerationNotStarted\": () => (/* binding */ SR_enumerationNotStarted),\n/* harmony export */   \"SR_inputSequenceEmpty\": () => (/* binding */ SR_inputSequenceEmpty),\n/* harmony export */   \"SR_inputSequenceTooLong\": () => (/* binding */ SR_inputSequenceTooLong),\n/* harmony export */   \"SR_keyNotFoundAlt\": () => (/* binding */ SR_keyNotFoundAlt),\n/* harmony export */   \"SR_notEnoughElements\": () => (/* binding */ SR_notEnoughElements),\n/* harmony export */   \"SR_resetNotSupported\": () => (/* binding */ SR_resetNotSupported),\n/* harmony export */   \"Enumerator_noReset\": () => (/* binding */ Enumerator_noReset),\n/* harmony export */   \"Enumerator_notStarted\": () => (/* binding */ Enumerator_notStarted),\n/* harmony export */   \"Enumerator_alreadyFinished\": () => (/* binding */ Enumerator_alreadyFinished),\n/* harmony export */   \"Enumerator_Seq\": () => (/* binding */ Enumerator_Seq),\n/* harmony export */   \"Enumerator_Seq$reflection\": () => (/* binding */ Enumerator_Seq$reflection),\n/* harmony export */   \"Enumerator_Seq_$ctor_673A07F2\": () => (/* binding */ Enumerator_Seq_$ctor_673A07F2),\n/* harmony export */   \"Enumerator_FromFunctions$1\": () => (/* binding */ Enumerator_FromFunctions$1),\n/* harmony export */   \"Enumerator_FromFunctions$1$reflection\": () => (/* binding */ Enumerator_FromFunctions$1$reflection),\n/* harmony export */   \"Enumerator_FromFunctions$1_$ctor_58C54629\": () => (/* binding */ Enumerator_FromFunctions$1_$ctor_58C54629),\n/* harmony export */   \"Enumerator_cast\": () => (/* binding */ Enumerator_cast),\n/* harmony export */   \"Enumerator_concat\": () => (/* binding */ Enumerator_concat),\n/* harmony export */   \"Enumerator_enumerateThenFinally\": () => (/* binding */ Enumerator_enumerateThenFinally),\n/* harmony export */   \"Enumerator_generateWhileSome\": () => (/* binding */ Enumerator_generateWhileSome),\n/* harmony export */   \"Enumerator_unfold\": () => (/* binding */ Enumerator_unfold),\n/* harmony export */   \"indexNotFound\": () => (/* binding */ indexNotFound),\n/* harmony export */   \"checkNonNull\": () => (/* binding */ checkNonNull),\n/* harmony export */   \"mkSeq\": () => (/* binding */ mkSeq),\n/* harmony export */   \"ofSeq\": () => (/* binding */ ofSeq),\n/* harmony export */   \"delay\": () => (/* binding */ delay),\n/* harmony export */   \"concat\": () => (/* binding */ concat),\n/* harmony export */   \"unfold\": () => (/* binding */ unfold),\n/* harmony export */   \"empty\": () => (/* binding */ empty),\n/* harmony export */   \"singleton\": () => (/* binding */ singleton),\n/* harmony export */   \"ofArray\": () => (/* binding */ ofArray),\n/* harmony export */   \"toArray\": () => (/* binding */ toArray),\n/* harmony export */   \"ofList\": () => (/* binding */ ofList),\n/* harmony export */   \"toList\": () => (/* binding */ toList),\n/* harmony export */   \"generate\": () => (/* binding */ generate),\n/* harmony export */   \"generateIndexed\": () => (/* binding */ generateIndexed),\n/* harmony export */   \"append\": () => (/* binding */ append),\n/* harmony export */   \"cast\": () => (/* binding */ cast),\n/* harmony export */   \"choose\": () => (/* binding */ choose),\n/* harmony export */   \"compareWith\": () => (/* binding */ compareWith),\n/* harmony export */   \"contains\": () => (/* binding */ contains),\n/* harmony export */   \"enumerateFromFunctions\": () => (/* binding */ enumerateFromFunctions),\n/* harmony export */   \"enumerateThenFinally\": () => (/* binding */ enumerateThenFinally),\n/* harmony export */   \"enumerateUsing\": () => (/* binding */ enumerateUsing),\n/* harmony export */   \"enumerateWhile\": () => (/* binding */ enumerateWhile),\n/* harmony export */   \"filter\": () => (/* binding */ filter),\n/* harmony export */   \"exists\": () => (/* binding */ exists),\n/* harmony export */   \"exists2\": () => (/* binding */ exists2),\n/* harmony export */   \"exactlyOne\": () => (/* binding */ exactlyOne),\n/* harmony export */   \"tryExactlyOne\": () => (/* binding */ tryExactlyOne),\n/* harmony export */   \"tryFind\": () => (/* binding */ tryFind),\n/* harmony export */   \"find\": () => (/* binding */ find),\n/* harmony export */   \"tryFindBack\": () => (/* binding */ tryFindBack),\n/* harmony export */   \"findBack\": () => (/* binding */ findBack),\n/* harmony export */   \"tryFindIndex\": () => (/* binding */ tryFindIndex),\n/* harmony export */   \"findIndex\": () => (/* binding */ findIndex),\n/* harmony export */   \"tryFindIndexBack\": () => (/* binding */ tryFindIndexBack),\n/* harmony export */   \"findIndexBack\": () => (/* binding */ findIndexBack),\n/* harmony export */   \"fold\": () => (/* binding */ fold),\n/* harmony export */   \"foldBack\": () => (/* binding */ foldBack),\n/* harmony export */   \"fold2\": () => (/* binding */ fold2),\n/* harmony export */   \"foldBack2\": () => (/* binding */ foldBack2),\n/* harmony export */   \"forAll\": () => (/* binding */ forAll),\n/* harmony export */   \"forAll2\": () => (/* binding */ forAll2),\n/* harmony export */   \"tryHead\": () => (/* binding */ tryHead),\n/* harmony export */   \"head\": () => (/* binding */ head),\n/* harmony export */   \"initialize\": () => (/* binding */ initialize),\n/* harmony export */   \"initializeInfinite\": () => (/* binding */ initializeInfinite),\n/* harmony export */   \"isEmpty\": () => (/* binding */ isEmpty),\n/* harmony export */   \"tryItem\": () => (/* binding */ tryItem),\n/* harmony export */   \"item\": () => (/* binding */ item),\n/* harmony export */   \"iterate\": () => (/* binding */ iterate),\n/* harmony export */   \"iterate2\": () => (/* binding */ iterate2),\n/* harmony export */   \"iterateIndexed\": () => (/* binding */ iterateIndexed),\n/* harmony export */   \"iterateIndexed2\": () => (/* binding */ iterateIndexed2),\n/* harmony export */   \"tryLast\": () => (/* binding */ tryLast),\n/* harmony export */   \"last\": () => (/* binding */ last),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"map\": () => (/* binding */ map),\n/* harmony export */   \"mapIndexed\": () => (/* binding */ mapIndexed),\n/* harmony export */   \"indexed\": () => (/* binding */ indexed),\n/* harmony export */   \"map2\": () => (/* binding */ map2),\n/* harmony export */   \"mapIndexed2\": () => (/* binding */ mapIndexed2),\n/* harmony export */   \"map3\": () => (/* binding */ map3),\n/* harmony export */   \"readOnly\": () => (/* binding */ readOnly),\n/* harmony export */   \"CachedSeq$1\": () => (/* binding */ CachedSeq$1),\n/* harmony export */   \"CachedSeq$1$reflection\": () => (/* binding */ CachedSeq$1$reflection),\n/* harmony export */   \"CachedSeq$1_$ctor_Z7A8347D4\": () => (/* binding */ CachedSeq$1_$ctor_Z7A8347D4),\n/* harmony export */   \"CachedSeq$1__Clear\": () => (/* binding */ CachedSeq$1__Clear),\n/* harmony export */   \"cache\": () => (/* binding */ cache),\n/* harmony export */   \"allPairs\": () => (/* binding */ allPairs),\n/* harmony export */   \"mapFold\": () => (/* binding */ mapFold),\n/* harmony export */   \"mapFoldBack\": () => (/* binding */ mapFoldBack),\n/* harmony export */   \"tryPick\": () => (/* binding */ tryPick),\n/* harmony export */   \"pick\": () => (/* binding */ pick),\n/* harmony export */   \"reduce\": () => (/* binding */ reduce),\n/* harmony export */   \"reduceBack\": () => (/* binding */ reduceBack),\n/* harmony export */   \"replicate\": () => (/* binding */ replicate),\n/* harmony export */   \"reverse\": () => (/* binding */ reverse),\n/* harmony export */   \"scan\": () => (/* binding */ scan),\n/* harmony export */   \"scanBack\": () => (/* binding */ scanBack),\n/* harmony export */   \"skip\": () => (/* binding */ skip),\n/* harmony export */   \"skipWhile\": () => (/* binding */ skipWhile),\n/* harmony export */   \"tail\": () => (/* binding */ tail),\n/* harmony export */   \"take\": () => (/* binding */ take),\n/* harmony export */   \"takeWhile\": () => (/* binding */ takeWhile),\n/* harmony export */   \"truncate\": () => (/* binding */ truncate),\n/* harmony export */   \"zip\": () => (/* binding */ zip),\n/* harmony export */   \"zip3\": () => (/* binding */ zip3),\n/* harmony export */   \"collect\": () => (/* binding */ collect),\n/* harmony export */   \"where\": () => (/* binding */ where),\n/* harmony export */   \"pairwise\": () => (/* binding */ pairwise),\n/* harmony export */   \"splitInto\": () => (/* binding */ splitInto),\n/* harmony export */   \"windowed\": () => (/* binding */ windowed),\n/* harmony export */   \"transpose\": () => (/* binding */ transpose),\n/* harmony export */   \"sortWith\": () => (/* binding */ sortWith),\n/* harmony export */   \"sort\": () => (/* binding */ sort),\n/* harmony export */   \"sortBy\": () => (/* binding */ sortBy),\n/* harmony export */   \"sortDescending\": () => (/* binding */ sortDescending),\n/* harmony export */   \"sortByDescending\": () => (/* binding */ sortByDescending),\n/* harmony export */   \"sum\": () => (/* binding */ sum),\n/* harmony export */   \"sumBy\": () => (/* binding */ sumBy),\n/* harmony export */   \"maxBy\": () => (/* binding */ maxBy),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"minBy\": () => (/* binding */ minBy),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"average\": () => (/* binding */ average),\n/* harmony export */   \"averageBy\": () => (/* binding */ averageBy),\n/* harmony export */   \"permute\": () => (/* binding */ permute),\n/* harmony export */   \"chunkBySize\": () => (/* binding */ chunkBySize),\n/* harmony export */   \"insertAt\": () => (/* binding */ insertAt),\n/* harmony export */   \"insertManyAt\": () => (/* binding */ insertManyAt),\n/* harmony export */   \"removeAt\": () => (/* binding */ removeAt),\n/* harmony export */   \"removeManyAt\": () => (/* binding */ removeManyAt),\n/* harmony export */   \"updateAt\": () => (/* binding */ updateAt)\n/* harmony export */ });\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _Reflection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _Option_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Option.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\");\n/* harmony import */ var _FSharp_Core_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./FSharp.Core.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/FSharp.Core.js\");\n/* harmony import */ var _Array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Array.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js\");\n/* harmony import */ var _List_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./List.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/List.js\");\n/* harmony import */ var _Global_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Global.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Global.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n\n\n\nvar SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\nvar SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\nvar SR_inputSequenceEmpty = \"The input sequence was empty.\";\nvar SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\nvar SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\nvar SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\nvar SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\nfunction Enumerator_noReset() {\n  throw new Error(SR_resetNotSupported);\n}\nfunction Enumerator_notStarted() {\n  throw new Error(SR_enumerationNotStarted);\n}\nfunction Enumerator_alreadyFinished() {\n  throw new Error(SR_enumerationAlreadyFinished);\n}\nvar Enumerator_Seq = /*#__PURE__*/function (_Symbol$iterator) {\n  function Enumerator_Seq(f) {\n    _classCallCheck(this, Enumerator_Seq);\n    this.f = f;\n  }\n  _createClass(Enumerator_Seq, [{\n    key: \"toString\",\n    value: function toString() {\n      var xs = this;\n      var maxCount = 4;\n      var i = 0;\n      var str = \"seq [\";\n      var e = (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.getEnumerator)(xs);\n      try {\n        while (i < maxCount && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n          if (i > 0) {\n            str = str + \"; \";\n          }\n          str = str + (0,_Types_js__WEBPACK_IMPORTED_MODULE_1__.toString)(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n          i = i + 1 | 0;\n        }\n        if (i === maxCount) {\n          str = str + \"; ...\";\n        }\n        return str + \"]\";\n      } finally {\n        (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n      }\n    }\n  }, {\n    key: \"GetEnumerator\",\n    value: function GetEnumerator() {\n      var x = this;\n      return x.f();\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.toIterator)(this.GetEnumerator());\n    }\n  }, {\n    key: \"System.Collections.IEnumerable.GetEnumerator\",\n    value: function SystemCollectionsIEnumerableGetEnumerator() {\n      var x = this;\n      return x.f();\n    }\n  }]);\n  return Enumerator_Seq;\n}(Symbol.iterator);\nfunction Enumerator_Seq$reflection(gen0) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_2__.class_type)(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\n}\nfunction Enumerator_Seq_$ctor_673A07F2(f) {\n  return new Enumerator_Seq(f);\n}\nvar Enumerator_FromFunctions$1 = /*#__PURE__*/function () {\n  function Enumerator_FromFunctions$1(current, next, dispose) {\n    _classCallCheck(this, Enumerator_FromFunctions$1);\n    this.current = current;\n    this.next = next;\n    this.dispose = dispose;\n  }\n  _createClass(Enumerator_FromFunctions$1, [{\n    key: \"System.Collections.Generic.IEnumerator`1.get_Current\",\n    value: function SystemCollectionsGenericIEnumerator1Get_Current() {\n      var __ = this;\n      return __.current();\n    }\n  }, {\n    key: \"System.Collections.IEnumerator.get_Current\",\n    value: function SystemCollectionsIEnumeratorGet_Current() {\n      var __ = this;\n      return __.current();\n    }\n  }, {\n    key: \"System.Collections.IEnumerator.MoveNext\",\n    value: function SystemCollectionsIEnumeratorMoveNext() {\n      var __ = this;\n      return __.next();\n    }\n  }, {\n    key: \"System.Collections.IEnumerator.Reset\",\n    value: function SystemCollectionsIEnumeratorReset() {\n      Enumerator_noReset();\n    }\n  }, {\n    key: \"Dispose\",\n    value: function Dispose() {\n      var __ = this;\n      __.dispose();\n    }\n  }]);\n  return Enumerator_FromFunctions$1;\n}();\nfunction Enumerator_FromFunctions$1$reflection(gen0) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_2__.class_type)(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\n}\nfunction Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\n  return new Enumerator_FromFunctions$1(current, next, dispose);\n}\nfunction Enumerator_cast(e) {\n  return Enumerator_FromFunctions$1_$ctor_58C54629(function () {\n    return e[\"System.Collections.IEnumerator.get_Current\"]();\n  }, function () {\n    return e[\"System.Collections.IEnumerator.MoveNext\"]();\n  }, function () {\n    if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.isDisposable)(e)) {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n    }\n  });\n}\nfunction Enumerator_concat(sources) {\n  var outerOpt = void 0;\n  var innerOpt = void 0;\n  var started = false;\n  var finished = false;\n  var curr = void 0;\n  var finish = function finish() {\n    finished = true;\n    if (innerOpt != null) {\n      var inner = innerOpt;\n      try {\n        (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(inner);\n      } finally {\n        innerOpt = void 0;\n      }\n    }\n    if (outerOpt != null) {\n      var outer = outerOpt;\n      try {\n        (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(outer);\n      } finally {\n        outerOpt = void 0;\n      }\n    }\n  };\n  return Enumerator_FromFunctions$1_$ctor_58C54629(function () {\n    if (!started) {\n      Enumerator_notStarted();\n    } else if (finished) {\n      Enumerator_alreadyFinished();\n    }\n    if (curr != null) {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(curr);\n    } else {\n      return Enumerator_alreadyFinished();\n    }\n  }, function () {\n    var copyOfStruct;\n    if (!started) {\n      started = true;\n    }\n    if (finished) {\n      return false;\n    } else {\n      var res = void 0;\n      while (res == null) {\n        var matchValue = [outerOpt, innerOpt];\n        if (matchValue[0] != null) {\n          if (matchValue[1] != null) {\n            var inner_1 = matchValue[1];\n            if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n              curr = (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n              res = true;\n            } else {\n              try {\n                (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(inner_1);\n              } finally {\n                innerOpt = void 0;\n              }\n            }\n          } else {\n            var outer_1 = matchValue[0];\n            if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n              var ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n              innerOpt = (copyOfStruct = ie, (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.getEnumerator)(copyOfStruct));\n            } else {\n              finish();\n              res = false;\n            }\n          }\n        } else {\n          outerOpt = (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.getEnumerator)(sources);\n        }\n      }\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(res);\n    }\n  }, function () {\n    if (!finished) {\n      finish();\n    }\n  });\n}\nfunction Enumerator_enumerateThenFinally(f, e) {\n  return Enumerator_FromFunctions$1_$ctor_58C54629(function () {\n    return e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n  }, function () {\n    return e[\"System.Collections.IEnumerator.MoveNext\"]();\n  }, function () {\n    try {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n    } finally {\n      f();\n    }\n  });\n}\nfunction Enumerator_generateWhileSome(openf, compute, closef) {\n  var started = false;\n  var curr = void 0;\n  var state = (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(openf());\n  var dispose = function dispose() {\n    if (state != null) {\n      var x_1 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(state);\n      try {\n        closef(x_1);\n      } finally {\n        state = void 0;\n      }\n    }\n  };\n  var finish = function finish() {\n    try {\n      dispose();\n    } finally {\n      curr = void 0;\n    }\n  };\n  return Enumerator_FromFunctions$1_$ctor_58C54629(function () {\n    if (!started) {\n      Enumerator_notStarted();\n    }\n    if (curr != null) {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(curr);\n    } else {\n      return Enumerator_alreadyFinished();\n    }\n  }, function () {\n    if (!started) {\n      started = true;\n    }\n    if (state != null) {\n      var s = (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(state);\n      var matchValue_1;\n      try {\n        matchValue_1 = compute(s);\n      } catch (matchValue) {\n        finish();\n        throw matchValue;\n      }\n      if (matchValue_1 != null) {\n        curr = matchValue_1;\n        return true;\n      } else {\n        finish();\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }, dispose);\n}\nfunction Enumerator_unfold(f, state) {\n  var curr = void 0;\n  var acc = state;\n  return Enumerator_FromFunctions$1_$ctor_58C54629(function () {\n    if (curr != null) {\n      var x = curr[0];\n      var st = curr[1];\n      return x;\n    } else {\n      return Enumerator_notStarted();\n    }\n  }, function () {\n    curr = f(acc);\n    if (curr != null) {\n      var x_1 = curr[0];\n      var st_1 = curr[1];\n      acc = st_1;\n      return true;\n    } else {\n      return false;\n    }\n  }, function () {});\n}\nfunction indexNotFound() {\n  throw new Error(SR_keyNotFoundAlt);\n}\nfunction checkNonNull(argName, arg) {\n  if (arg == null) {\n    (0,_FSharp_Core_js__WEBPACK_IMPORTED_MODULE_4__.Operators_NullArg)(argName);\n  }\n}\nfunction mkSeq(f) {\n  return Enumerator_Seq_$ctor_673A07F2(f);\n}\nfunction ofSeq(xs) {\n  checkNonNull(\"source\", xs);\n  return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.getEnumerator)(xs);\n}\nfunction delay(generator) {\n  return mkSeq(function () {\n    return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.getEnumerator)(generator());\n  });\n}\nfunction concat(sources) {\n  return mkSeq(function () {\n    return Enumerator_concat(sources);\n  });\n}\nfunction unfold(generator, state) {\n  return mkSeq(function () {\n    return Enumerator_unfold(generator, state);\n  });\n}\nfunction empty() {\n  return delay(function () {\n    return new Array(0);\n  });\n}\nfunction singleton(x) {\n  return delay(function () {\n    return (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.singleton)(x);\n  });\n}\nfunction ofArray(arr) {\n  return arr;\n}\nfunction toArray(xs) {\n  if (xs instanceof _List_js__WEBPACK_IMPORTED_MODULE_6__.FSharpList) {\n    return (0,_List_js__WEBPACK_IMPORTED_MODULE_6__.toArray)(xs);\n  } else {\n    return Array.from(xs);\n  }\n}\nfunction ofList(xs) {\n  return xs;\n}\nfunction toList(xs) {\n  if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.isArrayLike)(xs)) {\n    return (0,_List_js__WEBPACK_IMPORTED_MODULE_6__.ofArray)(xs);\n  } else if (xs instanceof _List_js__WEBPACK_IMPORTED_MODULE_6__.FSharpList) {\n    return xs;\n  } else {\n    return (0,_List_js__WEBPACK_IMPORTED_MODULE_6__.ofSeq)(xs);\n  }\n}\nfunction generate(create, compute, dispose) {\n  return mkSeq(function () {\n    return Enumerator_generateWhileSome(create, compute, dispose);\n  });\n}\nfunction generateIndexed(create, compute, dispose) {\n  return mkSeq(function () {\n    var i = -1;\n    return Enumerator_generateWhileSome(create, function (x) {\n      i = i + 1 | 0;\n      return compute(i, x);\n    }, dispose);\n  });\n}\nfunction append(xs, ys) {\n  return concat([xs, ys]);\n}\nfunction cast(xs) {\n  return mkSeq(function () {\n    checkNonNull(\"source\", xs);\n    return Enumerator_cast((0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.getEnumerator)(xs));\n  });\n}\nfunction choose(chooser, xs) {\n  return generate(function () {\n    return ofSeq(xs);\n  }, function (e) {\n    var curr = void 0;\n    while (curr == null && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n    }\n    return curr;\n  }, function (e_1) {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e_1);\n  });\n}\nfunction compareWith(comparer, xs, ys) {\n  var e1 = ofSeq(xs);\n  try {\n    var e2 = ofSeq(ys);\n    try {\n      var c = 0;\n      var b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n      var b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n      while (c === 0 && b1 && b2) {\n        c = comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0;\n        if (c === 0) {\n          b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n          b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n        }\n      }\n      return (c !== 0 ? c : b1 ? 1 : b2 ? -1 : 0) | 0;\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e2);\n    }\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e1);\n  }\n}\nfunction contains(value, xs, comparer) {\n  var e = ofSeq(xs);\n  try {\n    var found = false;\n    while (!found && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n    }\n    return found;\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n  }\n}\nfunction enumerateFromFunctions(create, moveNext, current) {\n  return generate(create, function (x) {\n    return moveNext(x) ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(current(x)) : void 0;\n  }, function (x_1) {\n    var matchValue = x_1;\n    if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.isDisposable)(matchValue)) {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(matchValue);\n    }\n  });\n}\nfunction enumerateThenFinally(source, compensation) {\n  var compensation_1 = compensation;\n  return mkSeq(function () {\n    try {\n      return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\n    } catch (matchValue) {\n      compensation_1();\n      throw matchValue;\n    }\n  });\n}\nfunction enumerateUsing(resource, source) {\n  var compensation = function compensation() {\n    if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.equals)(resource, null)) {} else {\n      var copyOfStruct = resource;\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(copyOfStruct);\n    }\n  };\n  return mkSeq(function () {\n    try {\n      return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\n    } catch (matchValue_1) {\n      compensation();\n      throw matchValue_1;\n    }\n  });\n}\nfunction enumerateWhile(guard, xs) {\n  return concat(unfold(function (i) {\n    return guard() ? [xs, i + 1] : void 0;\n  }, 0));\n}\nfunction filter(f, xs) {\n  return choose(function (x) {\n    if (f(x)) {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(x);\n    } else {\n      return void 0;\n    }\n  }, xs);\n}\nfunction exists(predicate, xs) {\n  var e = ofSeq(xs);\n  try {\n    var found = false;\n    while (!found && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n    }\n    return found;\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n  }\n}\nfunction exists2(predicate, xs, ys) {\n  var e1 = ofSeq(xs);\n  try {\n    var e2 = ofSeq(ys);\n    try {\n      var found = false;\n      while (!found && e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\n        found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n      }\n      return found;\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e2);\n    }\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e1);\n  }\n}\nfunction exactlyOne(xs) {\n  var e = ofSeq(xs);\n  try {\n    if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      var v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n      if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n        throw new Error(SR_inputSequenceTooLong + \"\\\\nParameter name: \" + \"source\");\n      } else {\n        return v;\n      }\n    } else {\n      throw new Error(SR_inputSequenceEmpty + \"\\\\nParameter name: \" + \"source\");\n    }\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n  }\n}\nfunction tryExactlyOne(xs) {\n  var e = ofSeq(xs);\n  try {\n    if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      var v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n      return e[\"System.Collections.IEnumerator.MoveNext\"]() ? void 0 : (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(v);\n    } else {\n      return void 0;\n    }\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n  }\n}\nfunction tryFind(predicate, xs) {\n  var e = ofSeq(xs);\n  try {\n    var res = void 0;\n    while (res == null && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      var c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n      if (predicate(c)) {\n        res = (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(c);\n      }\n    }\n    return res;\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n  }\n}\nfunction find(predicate, xs) {\n  var matchValue = tryFind(predicate, xs);\n  if (matchValue == null) {\n    return indexNotFound();\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(matchValue);\n  }\n}\nfunction tryFindBack(predicate, xs) {\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.tryFindBack)(predicate, toArray(xs));\n}\nfunction findBack(predicate, xs) {\n  var matchValue = tryFindBack(predicate, xs);\n  if (matchValue == null) {\n    return indexNotFound();\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(matchValue);\n  }\n}\nfunction tryFindIndex(predicate, xs) {\n  var e = ofSeq(xs);\n  try {\n    var loop = function loop(i_mut) {\n      loop: while (true) {\n        var i = i_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n          if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\n            return i;\n          } else {\n            i_mut = i + 1;\n            continue loop;\n          }\n        } else {\n          return void 0;\n        }\n        break;\n      }\n    };\n    return loop(0);\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n  }\n}\nfunction findIndex(predicate, xs) {\n  var matchValue = tryFindIndex(predicate, xs);\n  if (matchValue == null) {\n    return indexNotFound() | 0;\n  } else {\n    return matchValue | 0;\n  }\n}\nfunction tryFindIndexBack(predicate, xs) {\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.tryFindIndexBack)(predicate, toArray(xs));\n}\nfunction findIndexBack(predicate, xs) {\n  var matchValue = tryFindIndexBack(predicate, xs);\n  if (matchValue == null) {\n    return indexNotFound() | 0;\n  } else {\n    return matchValue | 0;\n  }\n}\nfunction fold(folder, state, xs) {\n  var e = ofSeq(xs);\n  try {\n    var acc = state;\n    while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n    }\n    return acc;\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n  }\n}\nfunction foldBack(folder, xs, state) {\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.foldBack)(folder, toArray(xs), state);\n}\nfunction fold2(folder, state, xs, ys) {\n  var e1 = ofSeq(xs);\n  try {\n    var e2 = ofSeq(ys);\n    try {\n      var acc = state;\n      while (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\n        acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n      }\n      return acc;\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e2);\n    }\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e1);\n  }\n}\nfunction foldBack2(folder, xs, ys, state) {\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.foldBack2)(folder, toArray(xs), toArray(ys), state);\n}\nfunction forAll(predicate, xs) {\n  return !exists(function (x) {\n    return !predicate(x);\n  }, xs);\n}\nfunction forAll2(predicate, xs, ys) {\n  return !exists2(function (x, y) {\n    return !predicate(x, y);\n  }, xs, ys);\n}\nfunction tryHead(xs) {\n  if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.isArrayLike)(xs)) {\n    return (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.tryHead)(xs);\n  } else if (xs instanceof _List_js__WEBPACK_IMPORTED_MODULE_6__.FSharpList) {\n    return (0,_List_js__WEBPACK_IMPORTED_MODULE_6__.tryHead)(xs);\n  } else {\n    var e = ofSeq(xs);\n    try {\n      return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : void 0;\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n    }\n  }\n}\nfunction head(xs) {\n  var matchValue = tryHead(xs);\n  if (matchValue == null) {\n    throw new Error(SR_inputSequenceEmpty + \"\\\\nParameter name: \" + \"source\");\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(matchValue);\n  }\n}\nfunction initialize(count, f) {\n  return unfold(function (i) {\n    return i < count ? [f(i), i + 1] : void 0;\n  }, 0);\n}\nfunction initializeInfinite(f) {\n  return initialize(2147483647, f);\n}\nfunction isEmpty(xs) {\n  if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.isArrayLike)(xs)) {\n    return xs.length === 0;\n  } else if (xs instanceof _List_js__WEBPACK_IMPORTED_MODULE_6__.FSharpList) {\n    return (0,_List_js__WEBPACK_IMPORTED_MODULE_6__.isEmpty)(xs);\n  } else {\n    var e = ofSeq(xs);\n    try {\n      return !e[\"System.Collections.IEnumerator.MoveNext\"]();\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n    }\n  }\n}\nfunction tryItem(index, xs) {\n  if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.isArrayLike)(xs)) {\n    return (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.tryItem)(index, xs);\n  } else if (xs instanceof _List_js__WEBPACK_IMPORTED_MODULE_6__.FSharpList) {\n    return (0,_List_js__WEBPACK_IMPORTED_MODULE_6__.tryItem)(index, xs);\n  } else {\n    var e = ofSeq(xs);\n    try {\n      var loop = function loop(index_1_mut) {\n        loop: while (true) {\n          var index_1 = index_1_mut;\n          if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return void 0;\n          } else if (index_1 === 0) {\n            return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n          } else {\n            index_1_mut = index_1 - 1;\n            continue loop;\n          }\n          break;\n        }\n      };\n      return loop(index);\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n    }\n  }\n}\nfunction item(index, xs) {\n  var matchValue = tryItem(index, xs);\n  if (matchValue == null) {\n    throw new Error(SR_notEnoughElements + \"\\\\nParameter name: \" + \"index\");\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(matchValue);\n  }\n}\nfunction iterate(action, xs) {\n  fold(function (unitVar0, x) {\n    action(x);\n  }, void 0, xs);\n}\nfunction iterate2(action, xs, ys) {\n  fold2(function (unitVar0, x, y) {\n    action(x, y);\n  }, void 0, xs, ys);\n}\nfunction iterateIndexed(action, xs) {\n  fold(function (i, x) {\n    action(i, x);\n    return i + 1 | 0;\n  }, 0, xs);\n}\nfunction iterateIndexed2(action, xs, ys) {\n  fold2(function (i, x, y) {\n    action(i, x, y);\n    return i + 1 | 0;\n  }, 0, xs, ys);\n}\nfunction tryLast(xs) {\n  var e = ofSeq(xs);\n  try {\n    var loop = function loop(acc_mut) {\n      loop: while (true) {\n        var acc = acc_mut;\n        if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n          return acc;\n        } else {\n          acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n          continue loop;\n        }\n        break;\n      }\n    };\n    return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : void 0;\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n  }\n}\nfunction last(xs) {\n  var matchValue = tryLast(xs);\n  if (matchValue == null) {\n    throw new Error(SR_notEnoughElements + \"\\\\nParameter name: \" + \"source\");\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(matchValue);\n  }\n}\nfunction length(xs) {\n  if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.isArrayLike)(xs)) {\n    return xs.length | 0;\n  } else if (xs instanceof _List_js__WEBPACK_IMPORTED_MODULE_6__.FSharpList) {\n    return (0,_List_js__WEBPACK_IMPORTED_MODULE_6__.length)(xs) | 0;\n  } else {\n    var e = ofSeq(xs);\n    try {\n      var count = 0;\n      while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n        count = count + 1 | 0;\n      }\n      return count | 0;\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n    }\n  }\n}\nfunction map(mapping, xs) {\n  return generate(function () {\n    return ofSeq(xs);\n  }, function (e) {\n    return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : void 0;\n  }, function (e_1) {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e_1);\n  });\n}\nfunction mapIndexed(mapping, xs) {\n  return generateIndexed(function () {\n    return ofSeq(xs);\n  }, function (i, e) {\n    return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : void 0;\n  }, function (e_1) {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e_1);\n  });\n}\nfunction indexed(xs) {\n  return mapIndexed(function (i, x) {\n    return [i, x];\n  }, xs);\n}\nfunction map2(mapping, xs, ys) {\n  return generate(function () {\n    return [ofSeq(xs), ofSeq(ys)];\n  }, function (tupledArg) {\n    var e1 = tupledArg[0];\n    var e2 = tupledArg[1];\n    return e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]() ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : void 0;\n  }, function (tupledArg_1) {\n    try {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(tupledArg_1[0]);\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(tupledArg_1[1]);\n    }\n  });\n}\nfunction mapIndexed2(mapping, xs, ys) {\n  return generateIndexed(function () {\n    return [ofSeq(xs), ofSeq(ys)];\n  }, function (i, tupledArg) {\n    var e1 = tupledArg[0];\n    var e2 = tupledArg[1];\n    return e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]() ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : void 0;\n  }, function (tupledArg_1) {\n    try {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(tupledArg_1[0]);\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(tupledArg_1[1]);\n    }\n  });\n}\nfunction map3(mapping, xs, ys, zs) {\n  return generate(function () {\n    return [ofSeq(xs), ofSeq(ys), ofSeq(zs)];\n  }, function (tupledArg) {\n    var e1 = tupledArg[0];\n    var e2 = tupledArg[1];\n    var e3 = tupledArg[2];\n    return e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]() && e3[\"System.Collections.IEnumerator.MoveNext\"]() ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : void 0;\n  }, function (tupledArg_1) {\n    try {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(tupledArg_1[0]);\n    } finally {\n      try {\n        (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(tupledArg_1[1]);\n      } finally {\n        (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(tupledArg_1[2]);\n      }\n    }\n  });\n}\nfunction readOnly(xs) {\n  checkNonNull(\"source\", xs);\n  return map(function (x) {\n    return x;\n  }, xs);\n}\nvar CachedSeq$1 = /*#__PURE__*/function (_Symbol$iterator2) {\n  function CachedSeq$1(cleanup, res) {\n    _classCallCheck(this, CachedSeq$1);\n    this.cleanup = cleanup;\n    this.res = res;\n  }\n  _createClass(CachedSeq$1, [{\n    key: \"Dispose\",\n    value: function Dispose() {\n      var _ = this;\n      _.cleanup();\n    }\n  }, {\n    key: \"GetEnumerator\",\n    value: function GetEnumerator() {\n      var _ = this;\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.getEnumerator)(_.res);\n    }\n  }, {\n    key: _Symbol$iterator2,\n    value: function value() {\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.toIterator)(this.GetEnumerator());\n    }\n  }, {\n    key: \"System.Collections.IEnumerable.GetEnumerator\",\n    value: function SystemCollectionsIEnumerableGetEnumerator() {\n      var _ = this;\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.getEnumerator)(_.res);\n    }\n  }]);\n  return CachedSeq$1;\n}(Symbol.iterator);\nfunction CachedSeq$1$reflection(gen0) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_2__.class_type)(\"SeqModule.CachedSeq`1\", [gen0], CachedSeq$1);\n}\nfunction CachedSeq$1_$ctor_Z7A8347D4(cleanup, res) {\n  return new CachedSeq$1(cleanup, res);\n}\nfunction CachedSeq$1__Clear(_) {\n  _.cleanup();\n}\nfunction cache(source) {\n  checkNonNull(\"source\", source);\n  var prefix = [];\n  var enumeratorR = void 0;\n  return CachedSeq$1_$ctor_Z7A8347D4(function () {\n    (0,_FSharp_Core_js__WEBPACK_IMPORTED_MODULE_4__.Operators_Lock)(prefix, function () {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.clear)(prefix);\n      var pattern_matching_result, e;\n      if (enumeratorR != null) {\n        if ((0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(enumeratorR) != null) {\n          pattern_matching_result = 0;\n          e = (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(enumeratorR);\n        } else {\n          pattern_matching_result = 1;\n        }\n      } else {\n        pattern_matching_result = 1;\n      }\n      switch (pattern_matching_result) {\n        case 0:\n          {\n            (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n            break;\n          }\n      }\n      enumeratorR = void 0;\n    });\n  }, unfold(function (i_1) {\n    return (0,_FSharp_Core_js__WEBPACK_IMPORTED_MODULE_4__.Operators_Lock)(prefix, function () {\n      if (i_1 < prefix.length) {\n        return [prefix[i_1], i_1 + 1];\n      } else {\n        if (i_1 >= prefix.length) {\n          var optEnumerator_2;\n          if (enumeratorR != null) {\n            optEnumerator_2 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(enumeratorR);\n          } else {\n            var optEnumerator = (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.getEnumerator)(source);\n            enumeratorR = (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(optEnumerator);\n            optEnumerator_2 = optEnumerator;\n          }\n          if (optEnumerator_2 == null) {} else {\n            var enumerator = optEnumerator_2;\n            if (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n              void prefix.push(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            } else {\n              (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(enumerator);\n              enumeratorR = (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(void 0);\n            }\n          }\n        }\n        return i_1 < prefix.length ? [prefix[i_1], i_1 + 1] : void 0;\n      }\n    });\n  }, 0));\n}\nfunction allPairs(xs, ys) {\n  var ysCache = cache(ys);\n  return delay(function () {\n    return concat(map(function (x) {\n      return map(function (y) {\n        return [x, y];\n      }, ysCache);\n    }, xs));\n  });\n}\nfunction mapFold(mapping, state, xs) {\n  var patternInput = (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.mapFold)(mapping, state, toArray(xs));\n  return [readOnly(patternInput[0]), patternInput[1]];\n}\nfunction mapFoldBack(mapping, xs, state) {\n  var patternInput = (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.mapFoldBack)(mapping, toArray(xs), state);\n  return [readOnly(patternInput[0]), patternInput[1]];\n}\nfunction tryPick(chooser, xs) {\n  var e = ofSeq(xs);\n  try {\n    var res = void 0;\n    while (res == null && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n    }\n    return res;\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n  }\n}\nfunction pick(chooser, xs) {\n  var matchValue = tryPick(chooser, xs);\n  if (matchValue == null) {\n    return indexNotFound();\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(matchValue);\n  }\n}\nfunction reduce(folder, xs) {\n  var e = ofSeq(xs);\n  try {\n    var loop = function loop(acc_mut) {\n      loop: while (true) {\n        var acc = acc_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n          acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n          continue loop;\n        } else {\n          return acc;\n        }\n        break;\n      }\n    };\n    if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n    } else {\n      throw new Error(SR_inputSequenceEmpty);\n    }\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n  }\n}\nfunction reduceBack(folder, xs) {\n  var arr = toArray(xs);\n  if (arr.length > 0) {\n    return arr.reduceRight(folder);\n  } else {\n    throw new Error(SR_inputSequenceEmpty);\n  }\n}\nfunction replicate(n, x) {\n  return initialize(n, function (_arg1) {\n    return x;\n  });\n}\nfunction reverse(xs) {\n  return delay(function () {\n    return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.reverse)(toArray(xs)));\n  });\n}\nfunction scan(folder, state, xs) {\n  return delay(function () {\n    var acc = state;\n    return concat([singleton(state), map(function (x) {\n      acc = folder(acc, x);\n      return acc;\n    }, xs)]);\n  });\n}\nfunction scanBack(folder, xs, state) {\n  return delay(function () {\n    return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.scanBack)(folder, toArray(xs), state));\n  });\n}\nfunction skip(count, source) {\n  return mkSeq(function () {\n    var e = ofSeq(source);\n    try {\n      for (var _ = 1; _ <= count; _++) {\n        if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n          throw new Error(SR_notEnoughElements + \"\\\\nParameter name: \" + \"source\");\n        }\n      }\n      return Enumerator_enumerateThenFinally(function () {}, e);\n    } catch (matchValue) {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e);\n      throw matchValue;\n    }\n  });\n}\nfunction skipWhile(predicate, xs) {\n  return delay(function () {\n    var skipped = true;\n    return filter(function (x) {\n      if (skipped) {\n        skipped = predicate(x);\n      }\n      return !skipped;\n    }, xs);\n  });\n}\nfunction tail(xs) {\n  return skip(1, xs);\n}\nfunction take(count, xs) {\n  return generateIndexed(function () {\n    return ofSeq(xs);\n  }, function (i, e) {\n    if (i < count) {\n      if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n        return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n      } else {\n        throw new Error(SR_notEnoughElements + \"\\\\nParameter name: \" + \"source\");\n      }\n    } else {\n      return void 0;\n    }\n  }, function (e_1) {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e_1);\n  });\n}\nfunction takeWhile(predicate, xs) {\n  return generate(function () {\n    return ofSeq(xs);\n  }, function (e) {\n    return e[\"System.Collections.IEnumerator.MoveNext\"]() && predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : void 0;\n  }, function (e_1) {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e_1);\n  });\n}\nfunction truncate(count, xs) {\n  return generateIndexed(function () {\n    return ofSeq(xs);\n  }, function (i, e) {\n    return i < count && e[\"System.Collections.IEnumerator.MoveNext\"]() ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : void 0;\n  }, function (e_1) {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e_1);\n  });\n}\nfunction zip(xs, ys) {\n  return map2(function (x, y) {\n    return [x, y];\n  }, xs, ys);\n}\nfunction zip3(xs, ys, zs) {\n  return map3(function (x, y, z) {\n    return [x, y, z];\n  }, xs, ys, zs);\n}\nfunction collect(mapping, xs) {\n  return delay(function () {\n    return concat(map(mapping, xs));\n  });\n}\nfunction where(predicate, xs) {\n  return filter(predicate, xs);\n}\nfunction pairwise(xs) {\n  return delay(function () {\n    return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.pairwise)(toArray(xs)));\n  });\n}\nfunction splitInto(chunks, xs) {\n  return delay(function () {\n    return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.map)(ofArray, (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.splitInto)(chunks, toArray(xs))));\n  });\n}\nfunction windowed(windowSize, xs) {\n  return delay(function () {\n    return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.map)(ofArray, (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.windowed)(windowSize, toArray(xs))));\n  });\n}\nfunction transpose(xss) {\n  return delay(function () {\n    return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.map)(ofArray, (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.transpose)((0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.map)(toArray, toArray(xss)))));\n  });\n}\nfunction sortWith(comparer, xs) {\n  return delay(function () {\n    var arr = toArray(xs);\n    arr.sort(comparer);\n    return ofArray(arr);\n  });\n}\nfunction sort(xs, comparer) {\n  return sortWith(function (x, y) {\n    return comparer.Compare(x, y);\n  }, xs);\n}\nfunction sortBy(projection, xs, comparer) {\n  return sortWith(function (x, y) {\n    return comparer.Compare(projection(x), projection(y));\n  }, xs);\n}\nfunction sortDescending(xs, comparer) {\n  return sortWith(function (x, y) {\n    return comparer.Compare(x, y) * -1;\n  }, xs);\n}\nfunction sortByDescending(projection, xs, comparer) {\n  return sortWith(function (x, y) {\n    return comparer.Compare(projection(x), projection(y)) * -1;\n  }, xs);\n}\nfunction sum(xs, adder) {\n  return fold(function (acc, x) {\n    return adder.Add(acc, x);\n  }, adder.GetZero(), xs);\n}\nfunction sumBy(f, xs, adder) {\n  return fold(function (acc, x) {\n    return adder.Add(acc, f(x));\n  }, adder.GetZero(), xs);\n}\nfunction maxBy(projection, xs, comparer) {\n  return reduce(function (x, y) {\n    return comparer.Compare(projection(y), projection(x)) > 0 ? y : x;\n  }, xs);\n}\nfunction max(xs, comparer) {\n  return reduce(function (x, y) {\n    return comparer.Compare(y, x) > 0 ? y : x;\n  }, xs);\n}\nfunction minBy(projection, xs, comparer) {\n  return reduce(function (x, y) {\n    return comparer.Compare(projection(y), projection(x)) > 0 ? x : y;\n  }, xs);\n}\nfunction min(xs, comparer) {\n  return reduce(function (x, y) {\n    return comparer.Compare(y, x) > 0 ? x : y;\n  }, xs);\n}\nfunction average(xs, averager) {\n  var count = 0;\n  var total = fold(function (acc, x) {\n    count = count + 1 | 0;\n    return averager.Add(acc, x);\n  }, averager.GetZero(), xs);\n  if (count === 0) {\n    throw new Error(SR_inputSequenceEmpty + \"\\\\nParameter name: \" + \"source\");\n  } else {\n    return averager.DivideByInt(total, count);\n  }\n}\nfunction averageBy(f, xs, averager) {\n  var count = 0;\n  var total = fold(function (acc, x) {\n    count = count + 1 | 0;\n    return averager.Add(acc, f(x));\n  }, averager.GetZero(), xs);\n  if (count === 0) {\n    throw new Error(SR_inputSequenceEmpty + \"\\\\nParameter name: \" + \"source\");\n  } else {\n    return averager.DivideByInt(total, count);\n  }\n}\nfunction permute(f, xs) {\n  return delay(function () {\n    return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.permute)(f, toArray(xs)));\n  });\n}\nfunction chunkBySize(chunkSize, xs) {\n  return delay(function () {\n    return ofArray((0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.map)(ofArray, (0,_Array_js__WEBPACK_IMPORTED_MODULE_5__.chunkBySize)(chunkSize, toArray(xs))));\n  });\n}\nfunction insertAt(index, y, xs) {\n  var isDone = false;\n  if (index < 0) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_7__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }\n  return generateIndexed(function () {\n    return ofSeq(xs);\n  }, function (i, e) {\n    if ((isDone ? true : i < index) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n    } else if (i === index) {\n      isDone = true;\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(y);\n    } else {\n      if (!isDone) {\n        throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_7__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n      }\n      return void 0;\n    }\n  }, function (e_1) {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e_1);\n  });\n}\nfunction insertManyAt(index, ys, xs) {\n  var status = -1;\n  if (index < 0) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_7__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }\n  return generateIndexed(function () {\n    return [ofSeq(xs), ofSeq(ys)];\n  }, function (i, tupledArg) {\n    var e1 = tupledArg[0];\n    var e2 = tupledArg[1];\n    if (i === index) {\n      status = 0;\n    }\n    var inserted;\n    if (status === 0) {\n      if (e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\n        inserted = (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n      } else {\n        status = 1;\n        inserted = void 0;\n      }\n    } else {\n      inserted = void 0;\n    }\n    if (inserted == null) {\n      if (e1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n        return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n      } else {\n        if (status < 1) {\n          throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_7__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n        }\n        return void 0;\n      }\n    } else {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)((0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.value)(inserted));\n    }\n  }, function (tupledArg_1) {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(tupledArg_1[0]);\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(tupledArg_1[1]);\n  });\n}\nfunction removeAt(index, xs) {\n  var isDone = false;\n  if (index < 0) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_7__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }\n  return generateIndexed(function () {\n    return ofSeq(xs);\n  }, function (i, e) {\n    if ((isDone ? true : i < index) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n    } else if (i === index && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      isDone = true;\n      return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : void 0;\n    } else {\n      if (!isDone) {\n        throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_7__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n      }\n      return void 0;\n    }\n  }, function (e_1) {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e_1);\n  });\n}\nfunction removeManyAt(index, count, xs) {\n  if (index < 0) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_7__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }\n  return generateIndexed(function () {\n    return ofSeq(xs);\n  }, function (i, e) {\n    if (i < index) {\n      if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n        return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n      } else {\n        throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_7__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n      }\n    } else {\n      if (i === index) {\n        for (var _ = 1; _ <= count; _++) {\n          if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_7__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"count\");\n          }\n        }\n      }\n      return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : void 0;\n    }\n  }, function (e_1) {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e_1);\n  });\n}\nfunction updateAt(index, y, xs) {\n  var isDone = false;\n  if (index < 0) {\n    throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_7__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n  }\n  return generateIndexed(function () {\n    return ofSeq(xs);\n  }, function (i, e) {\n    if ((isDone ? true : i < index) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n    } else if (i === index && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      isDone = true;\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_3__.some)(y);\n    } else {\n      if (!isDone) {\n        throw new Error(_Global_js__WEBPACK_IMPORTED_MODULE_7__.SR_indexOutOfBounds + \"\\\\nParameter name: \" + \"index\");\n      }\n      return void 0;\n    }\n  }, function (e_1) {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.disposeSafe)(e_1);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Seq.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Set.js":
/*!********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Set.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SetTreeLeaf$1\": () => (/* binding */ SetTreeLeaf$1),\n/* harmony export */   \"SetTreeLeaf$1$reflection\": () => (/* binding */ SetTreeLeaf$1$reflection),\n/* harmony export */   \"SetTreeLeaf$1_$ctor_2B595\": () => (/* binding */ SetTreeLeaf$1_$ctor_2B595),\n/* harmony export */   \"SetTreeLeaf$1__get_Key\": () => (/* binding */ SetTreeLeaf$1__get_Key),\n/* harmony export */   \"SetTreeNode$1\": () => (/* binding */ SetTreeNode$1),\n/* harmony export */   \"SetTreeNode$1$reflection\": () => (/* binding */ SetTreeNode$1$reflection),\n/* harmony export */   \"SetTreeNode$1_$ctor_Z6E7BE5F7\": () => (/* binding */ SetTreeNode$1_$ctor_Z6E7BE5F7),\n/* harmony export */   \"SetTreeNode$1__get_Left\": () => (/* binding */ SetTreeNode$1__get_Left),\n/* harmony export */   \"SetTreeNode$1__get_Right\": () => (/* binding */ SetTreeNode$1__get_Right),\n/* harmony export */   \"SetTreeNode$1__get_Height\": () => (/* binding */ SetTreeNode$1__get_Height),\n/* harmony export */   \"SetTreeModule_empty\": () => (/* binding */ SetTreeModule_empty),\n/* harmony export */   \"SetTreeModule_countAux\": () => (/* binding */ SetTreeModule_countAux),\n/* harmony export */   \"SetTreeModule_count\": () => (/* binding */ SetTreeModule_count),\n/* harmony export */   \"SetTreeModule_mk\": () => (/* binding */ SetTreeModule_mk),\n/* harmony export */   \"SetTreeModule_rebalance\": () => (/* binding */ SetTreeModule_rebalance),\n/* harmony export */   \"SetTreeModule_add\": () => (/* binding */ SetTreeModule_add),\n/* harmony export */   \"SetTreeModule_balance\": () => (/* binding */ SetTreeModule_balance),\n/* harmony export */   \"SetTreeModule_split\": () => (/* binding */ SetTreeModule_split),\n/* harmony export */   \"SetTreeModule_spliceOutSuccessor\": () => (/* binding */ SetTreeModule_spliceOutSuccessor),\n/* harmony export */   \"SetTreeModule_remove\": () => (/* binding */ SetTreeModule_remove),\n/* harmony export */   \"SetTreeModule_mem\": () => (/* binding */ SetTreeModule_mem),\n/* harmony export */   \"SetTreeModule_iter\": () => (/* binding */ SetTreeModule_iter),\n/* harmony export */   \"SetTreeModule_foldBackOpt\": () => (/* binding */ SetTreeModule_foldBackOpt),\n/* harmony export */   \"SetTreeModule_foldBack\": () => (/* binding */ SetTreeModule_foldBack),\n/* harmony export */   \"SetTreeModule_foldOpt\": () => (/* binding */ SetTreeModule_foldOpt),\n/* harmony export */   \"SetTreeModule_fold\": () => (/* binding */ SetTreeModule_fold),\n/* harmony export */   \"SetTreeModule_forall\": () => (/* binding */ SetTreeModule_forall),\n/* harmony export */   \"SetTreeModule_exists\": () => (/* binding */ SetTreeModule_exists),\n/* harmony export */   \"SetTreeModule_subset\": () => (/* binding */ SetTreeModule_subset),\n/* harmony export */   \"SetTreeModule_properSubset\": () => (/* binding */ SetTreeModule_properSubset),\n/* harmony export */   \"SetTreeModule_filterAux\": () => (/* binding */ SetTreeModule_filterAux),\n/* harmony export */   \"SetTreeModule_filter\": () => (/* binding */ SetTreeModule_filter),\n/* harmony export */   \"SetTreeModule_diffAux\": () => (/* binding */ SetTreeModule_diffAux),\n/* harmony export */   \"SetTreeModule_diff\": () => (/* binding */ SetTreeModule_diff),\n/* harmony export */   \"SetTreeModule_union\": () => (/* binding */ SetTreeModule_union),\n/* harmony export */   \"SetTreeModule_intersectionAux\": () => (/* binding */ SetTreeModule_intersectionAux),\n/* harmony export */   \"SetTreeModule_intersection\": () => (/* binding */ SetTreeModule_intersection),\n/* harmony export */   \"SetTreeModule_partition1\": () => (/* binding */ SetTreeModule_partition1),\n/* harmony export */   \"SetTreeModule_partitionAux\": () => (/* binding */ SetTreeModule_partitionAux),\n/* harmony export */   \"SetTreeModule_partition\": () => (/* binding */ SetTreeModule_partition),\n/* harmony export */   \"SetTreeModule_minimumElementAux\": () => (/* binding */ SetTreeModule_minimumElementAux),\n/* harmony export */   \"SetTreeModule_minimumElementOpt\": () => (/* binding */ SetTreeModule_minimumElementOpt),\n/* harmony export */   \"SetTreeModule_maximumElementAux\": () => (/* binding */ SetTreeModule_maximumElementAux),\n/* harmony export */   \"SetTreeModule_maximumElementOpt\": () => (/* binding */ SetTreeModule_maximumElementOpt),\n/* harmony export */   \"SetTreeModule_minimumElement\": () => (/* binding */ SetTreeModule_minimumElement),\n/* harmony export */   \"SetTreeModule_maximumElement\": () => (/* binding */ SetTreeModule_maximumElement),\n/* harmony export */   \"SetTreeModule_SetIterator$1\": () => (/* binding */ SetTreeModule_SetIterator$1),\n/* harmony export */   \"SetTreeModule_SetIterator$1$reflection\": () => (/* binding */ SetTreeModule_SetIterator$1$reflection),\n/* harmony export */   \"SetTreeModule_collapseLHS\": () => (/* binding */ SetTreeModule_collapseLHS),\n/* harmony export */   \"SetTreeModule_mkIterator\": () => (/* binding */ SetTreeModule_mkIterator),\n/* harmony export */   \"SetTreeModule_notStarted\": () => (/* binding */ SetTreeModule_notStarted),\n/* harmony export */   \"SetTreeModule_alreadyFinished\": () => (/* binding */ SetTreeModule_alreadyFinished),\n/* harmony export */   \"SetTreeModule_current\": () => (/* binding */ SetTreeModule_current),\n/* harmony export */   \"SetTreeModule_moveNext\": () => (/* binding */ SetTreeModule_moveNext),\n/* harmony export */   \"SetTreeModule_mkIEnumerator\": () => (/* binding */ SetTreeModule_mkIEnumerator),\n/* harmony export */   \"SetTreeModule_compareStacks\": () => (/* binding */ SetTreeModule_compareStacks),\n/* harmony export */   \"SetTreeModule_compare\": () => (/* binding */ SetTreeModule_compare),\n/* harmony export */   \"SetTreeModule_choose\": () => (/* binding */ SetTreeModule_choose),\n/* harmony export */   \"SetTreeModule_toList\": () => (/* binding */ SetTreeModule_toList),\n/* harmony export */   \"SetTreeModule_copyToArray\": () => (/* binding */ SetTreeModule_copyToArray),\n/* harmony export */   \"SetTreeModule_toArray\": () => (/* binding */ SetTreeModule_toArray),\n/* harmony export */   \"SetTreeModule_mkFromEnumerator\": () => (/* binding */ SetTreeModule_mkFromEnumerator),\n/* harmony export */   \"SetTreeModule_ofArray\": () => (/* binding */ SetTreeModule_ofArray),\n/* harmony export */   \"SetTreeModule_ofList\": () => (/* binding */ SetTreeModule_ofList),\n/* harmony export */   \"SetTreeModule_ofSeq\": () => (/* binding */ SetTreeModule_ofSeq),\n/* harmony export */   \"FSharpSet\": () => (/* binding */ FSharpSet),\n/* harmony export */   \"FSharpSet$reflection\": () => (/* binding */ FSharpSet$reflection),\n/* harmony export */   \"FSharpSet_$ctor\": () => (/* binding */ FSharpSet_$ctor),\n/* harmony export */   \"FSharpSet__get_Comparer\": () => (/* binding */ FSharpSet__get_Comparer),\n/* harmony export */   \"FSharpSet__get_Tree\": () => (/* binding */ FSharpSet__get_Tree),\n/* harmony export */   \"FSharpSet_Empty\": () => (/* binding */ FSharpSet_Empty),\n/* harmony export */   \"FSharpSet__Add\": () => (/* binding */ FSharpSet__Add),\n/* harmony export */   \"FSharpSet__Remove\": () => (/* binding */ FSharpSet__Remove),\n/* harmony export */   \"FSharpSet__get_Count\": () => (/* binding */ FSharpSet__get_Count),\n/* harmony export */   \"FSharpSet__Contains\": () => (/* binding */ FSharpSet__Contains),\n/* harmony export */   \"FSharpSet__Iterate\": () => (/* binding */ FSharpSet__Iterate),\n/* harmony export */   \"FSharpSet__Fold\": () => (/* binding */ FSharpSet__Fold),\n/* harmony export */   \"FSharpSet__get_IsEmpty\": () => (/* binding */ FSharpSet__get_IsEmpty),\n/* harmony export */   \"FSharpSet__Partition\": () => (/* binding */ FSharpSet__Partition),\n/* harmony export */   \"FSharpSet__Filter\": () => (/* binding */ FSharpSet__Filter),\n/* harmony export */   \"FSharpSet__Map\": () => (/* binding */ FSharpSet__Map),\n/* harmony export */   \"FSharpSet__Exists\": () => (/* binding */ FSharpSet__Exists),\n/* harmony export */   \"FSharpSet__ForAll\": () => (/* binding */ FSharpSet__ForAll),\n/* harmony export */   \"FSharpSet_op_Subtraction\": () => (/* binding */ FSharpSet_op_Subtraction),\n/* harmony export */   \"FSharpSet_op_Addition\": () => (/* binding */ FSharpSet_op_Addition),\n/* harmony export */   \"FSharpSet_Intersection\": () => (/* binding */ FSharpSet_Intersection),\n/* harmony export */   \"FSharpSet_IntersectionMany\": () => (/* binding */ FSharpSet_IntersectionMany),\n/* harmony export */   \"FSharpSet_Equality\": () => (/* binding */ FSharpSet_Equality),\n/* harmony export */   \"FSharpSet_Compare\": () => (/* binding */ FSharpSet_Compare),\n/* harmony export */   \"FSharpSet__get_Choose\": () => (/* binding */ FSharpSet__get_Choose),\n/* harmony export */   \"FSharpSet__get_MinimumElement\": () => (/* binding */ FSharpSet__get_MinimumElement),\n/* harmony export */   \"FSharpSet__get_MaximumElement\": () => (/* binding */ FSharpSet__get_MaximumElement),\n/* harmony export */   \"FSharpSet__IsSubsetOf\": () => (/* binding */ FSharpSet__IsSubsetOf),\n/* harmony export */   \"FSharpSet__IsSupersetOf\": () => (/* binding */ FSharpSet__IsSupersetOf),\n/* harmony export */   \"FSharpSet__IsProperSubsetOf\": () => (/* binding */ FSharpSet__IsProperSubsetOf),\n/* harmony export */   \"FSharpSet__IsProperSupersetOf\": () => (/* binding */ FSharpSet__IsProperSupersetOf),\n/* harmony export */   \"FSharpSet__ToList\": () => (/* binding */ FSharpSet__ToList),\n/* harmony export */   \"FSharpSet__ToArray\": () => (/* binding */ FSharpSet__ToArray),\n/* harmony export */   \"FSharpSet__ComputeHashCode\": () => (/* binding */ FSharpSet__ComputeHashCode),\n/* harmony export */   \"isEmpty\": () => (/* binding */ isEmpty),\n/* harmony export */   \"contains\": () => (/* binding */ contains),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"singleton\": () => (/* binding */ singleton),\n/* harmony export */   \"remove\": () => (/* binding */ remove),\n/* harmony export */   \"union\": () => (/* binding */ union),\n/* harmony export */   \"unionMany\": () => (/* binding */ unionMany),\n/* harmony export */   \"intersect\": () => (/* binding */ intersect),\n/* harmony export */   \"intersectMany\": () => (/* binding */ intersectMany),\n/* harmony export */   \"iterate\": () => (/* binding */ iterate),\n/* harmony export */   \"empty\": () => (/* binding */ empty),\n/* harmony export */   \"forAll\": () => (/* binding */ forAll),\n/* harmony export */   \"exists\": () => (/* binding */ exists),\n/* harmony export */   \"filter\": () => (/* binding */ filter),\n/* harmony export */   \"partition\": () => (/* binding */ partition),\n/* harmony export */   \"fold\": () => (/* binding */ fold),\n/* harmony export */   \"foldBack\": () => (/* binding */ foldBack),\n/* harmony export */   \"map\": () => (/* binding */ map),\n/* harmony export */   \"count\": () => (/* binding */ count),\n/* harmony export */   \"ofList\": () => (/* binding */ ofList),\n/* harmony export */   \"ofArray\": () => (/* binding */ ofArray),\n/* harmony export */   \"toList\": () => (/* binding */ toList),\n/* harmony export */   \"toArray\": () => (/* binding */ toArray),\n/* harmony export */   \"toSeq\": () => (/* binding */ toSeq),\n/* harmony export */   \"ofSeq\": () => (/* binding */ ofSeq),\n/* harmony export */   \"difference\": () => (/* binding */ difference),\n/* harmony export */   \"isSubset\": () => (/* binding */ isSubset),\n/* harmony export */   \"isSuperset\": () => (/* binding */ isSuperset),\n/* harmony export */   \"isProperSubset\": () => (/* binding */ isProperSubset),\n/* harmony export */   \"isProperSuperset\": () => (/* binding */ isProperSuperset),\n/* harmony export */   \"minElement\": () => (/* binding */ minElement),\n/* harmony export */   \"maxElement\": () => (/* binding */ maxElement),\n/* harmony export */   \"unionWith\": () => (/* binding */ unionWith),\n/* harmony export */   \"newMutableSetWith\": () => (/* binding */ newMutableSetWith),\n/* harmony export */   \"intersectWith\": () => (/* binding */ intersectWith),\n/* harmony export */   \"exceptWith\": () => (/* binding */ exceptWith),\n/* harmony export */   \"isSubsetOf\": () => (/* binding */ isSubsetOf),\n/* harmony export */   \"isSupersetOf\": () => (/* binding */ isSupersetOf),\n/* harmony export */   \"isProperSubsetOf\": () => (/* binding */ isProperSubsetOf),\n/* harmony export */   \"isProperSupersetOf\": () => (/* binding */ isProperSupersetOf)\n/* harmony export */ });\n/* harmony import */ var _Reflection_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _Option_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Option.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Option.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\n/* harmony import */ var _List_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./List.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/List.js\");\n/* harmony import */ var _Array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Array.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Array.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _String_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./String.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js\");\n/* harmony import */ var _Seq_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Seq.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Seq.js\");\n/* harmony import */ var _MutableSet_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./MutableSet.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/MutableSet.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\n\nvar SetTreeLeaf$1 = /*#__PURE__*/_createClass(function SetTreeLeaf$1(k) {\n  _classCallCheck(this, SetTreeLeaf$1);\n  this.k = k;\n});\nfunction SetTreeLeaf$1$reflection(gen0) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_0__.class_type)(\"Set.SetTreeLeaf`1\", [gen0], SetTreeLeaf$1);\n}\nfunction SetTreeLeaf$1_$ctor_2B595(k) {\n  return new SetTreeLeaf$1(k);\n}\nfunction SetTreeLeaf$1__get_Key(_) {\n  return _.k;\n}\nvar SetTreeNode$1 = /*#__PURE__*/function (_SetTreeLeaf$) {\n  _inherits(SetTreeNode$1, _SetTreeLeaf$);\n  var _super = _createSuper(SetTreeNode$1);\n  function SetTreeNode$1(v, left, right, h) {\n    var _this;\n    _classCallCheck(this, SetTreeNode$1);\n    _this = _super.call(this, v);\n    _this.left = left;\n    _this.right = right;\n    _this.h = h | 0;\n    return _this;\n  }\n  return _createClass(SetTreeNode$1);\n}(SetTreeLeaf$1);\nfunction SetTreeNode$1$reflection(gen0) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_0__.class_type)(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTreeLeaf$1$reflection(gen0));\n}\nfunction SetTreeNode$1_$ctor_Z6E7BE5F7(v, left, right, h) {\n  return new SetTreeNode$1(v, left, right, h);\n}\nfunction SetTreeNode$1__get_Left(_) {\n  return _.left;\n}\nfunction SetTreeNode$1__get_Right(_) {\n  return _.right;\n}\nfunction SetTreeNode$1__get_Height(_) {\n  return _.h;\n}\nfunction SetTreeModule_empty() {\n  return void 0;\n}\nfunction SetTreeModule_countAux(t_mut, acc_mut) {\n  SetTreeModule_countAux: while (true) {\n    var t = t_mut,\n      acc = acc_mut;\n    if (t != null) {\n      var t2 = t;\n      if (t2 instanceof SetTreeNode$1) {\n        t_mut = SetTreeNode$1__get_Left(t2);\n        acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t2), acc + 1);\n        continue SetTreeModule_countAux;\n      } else {\n        return acc + 1 | 0;\n      }\n    } else {\n      return acc | 0;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_count(s) {\n  return SetTreeModule_countAux(s, 0);\n}\nfunction SetTreeModule_mk(l, k, r) {\n  var hl;\n  var t = l;\n  if (t != null) {\n    var t2 = t;\n    hl = t2 instanceof SetTreeNode$1 ? SetTreeNode$1__get_Height(t2) : 1;\n  } else {\n    hl = 0;\n  }\n  var hr;\n  var t_1 = r;\n  if (t_1 != null) {\n    var t2_1 = t_1;\n    hr = t2_1 instanceof SetTreeNode$1 ? SetTreeNode$1__get_Height(t2_1) : 1;\n  } else {\n    hr = 0;\n  }\n  var m = (hl < hr ? hr : hl) | 0;\n  if (m === 0) {\n    return SetTreeLeaf$1_$ctor_2B595(k);\n  } else {\n    return SetTreeNode$1_$ctor_Z6E7BE5F7(k, l, r, m + 1);\n  }\n}\nfunction SetTreeModule_rebalance(t1, v, t2) {\n  var t_2, t2_3, t_3, t2_4;\n  var t1h;\n  var t = t1;\n  if (t != null) {\n    var t2_1 = t;\n    t1h = t2_1 instanceof SetTreeNode$1 ? SetTreeNode$1__get_Height(t2_1) : 1;\n  } else {\n    t1h = 0;\n  }\n  var t2h;\n  var t_1 = t2;\n  if (t_1 != null) {\n    var t2_2 = t_1;\n    t2h = t2_2 instanceof SetTreeNode$1 ? SetTreeNode$1__get_Height(t2_2) : 1;\n  } else {\n    t2h = 0;\n  }\n  if (t2h > t1h + 2) {\n    var matchValue = (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(t2);\n    if (matchValue instanceof SetTreeNode$1) {\n      if ((t_2 = SetTreeNode$1__get_Left(matchValue), t_2 != null ? (t2_3 = t_2, t2_3 instanceof SetTreeNode$1 ? SetTreeNode$1__get_Height(t2_3) : 1) : 0) > t1h + 1) {\n        var matchValue_1 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(SetTreeNode$1__get_Left(matchValue));\n        if (matchValue_1 instanceof SetTreeNode$1) {\n          return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue_1)), SetTreeLeaf$1__get_Key(matchValue_1), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_1), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue)));\n        } else {\n          throw new Error(\"internal error: Set.rebalance\");\n        }\n      } else {\n        return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue)), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue));\n      }\n    } else {\n      throw new Error(\"internal error: Set.rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    var matchValue_2 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(t1);\n    if (matchValue_2 instanceof SetTreeNode$1) {\n      if ((t_3 = SetTreeNode$1__get_Right(matchValue_2), t_3 != null ? (t2_4 = t_3, t2_4 instanceof SetTreeNode$1 ? SetTreeNode$1__get_Height(t2_4) : 1) : 0) > t2h + 1) {\n        var matchValue_3 = (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(SetTreeNode$1__get_Right(matchValue_2));\n        if (matchValue_3 instanceof SetTreeNode$1) {\n          return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeNode$1__get_Left(matchValue_3)), SetTreeLeaf$1__get_Key(matchValue_3), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_3), v, t2));\n        } else {\n          throw new Error(\"internal error: Set.rebalance\");\n        }\n      } else {\n        return SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_2), v, t2));\n      }\n    } else {\n      throw new Error(\"internal error: Set.rebalance\");\n    }\n  } else {\n    return SetTreeModule_mk(t1, v, t2);\n  }\n}\nfunction SetTreeModule_add(comparer, k, t) {\n  if (t != null) {\n    var t2 = t;\n    var c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n    if (t2 instanceof SetTreeNode$1) {\n      if (c < 0) {\n        return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n      } else if (c === 0) {\n        return t;\n      } else {\n        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t2)));\n      }\n    } else {\n      var c_1 = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n      if (c_1 < 0) {\n        return SetTreeNode$1_$ctor_Z6E7BE5F7(k, SetTreeModule_empty(), t, 2);\n      } else if (c_1 === 0) {\n        return t;\n      } else {\n        return SetTreeNode$1_$ctor_Z6E7BE5F7(k, t, SetTreeModule_empty(), 2);\n      }\n    }\n  } else {\n    return SetTreeLeaf$1_$ctor_2B595(k);\n  }\n}\nfunction SetTreeModule_balance(comparer, t1, k, t2) {\n  if (t1 != null) {\n    var t1$0027 = t1;\n    if (t2 != null) {\n      var t2$0027 = t2;\n      if (t1$0027 instanceof SetTreeNode$1) {\n        if (t2$0027 instanceof SetTreeNode$1) {\n          if (SetTreeNode$1__get_Height(t1$0027) + 2 < SetTreeNode$1__get_Height(t2$0027)) {\n            return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2$0027)), SetTreeLeaf$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027));\n          } else if (SetTreeNode$1__get_Height(t2$0027) + 2 < SetTreeNode$1__get_Height(t1$0027)) {\n            return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1$0027), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1$0027), k, t2));\n          } else {\n            return SetTreeModule_mk(t1, k, t2);\n          }\n        } else {\n          return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1));\n        }\n      } else {\n        return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2));\n      }\n    } else {\n      return SetTreeModule_add(comparer, k, t1);\n    }\n  } else {\n    return SetTreeModule_add(comparer, k, t2);\n  }\n}\nfunction SetTreeModule_split(comparer, pivot, t) {\n  if (t != null) {\n    var t2 = t;\n    if (t2 instanceof SetTreeNode$1) {\n      var c = comparer.Compare(pivot, SetTreeLeaf$1__get_Key(t2)) | 0;\n      if (c < 0) {\n        var patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t2));\n        return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n      } else if (c === 0) {\n        return [SetTreeNode$1__get_Left(t2), true, SetTreeNode$1__get_Right(t2)];\n      } else {\n        var patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t2));\n        return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\n      }\n    } else {\n      var c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(t2), pivot) | 0;\n      if (c_1 < 0) {\n        return [t, false, SetTreeModule_empty()];\n      } else if (c_1 === 0) {\n        return [SetTreeModule_empty(), true, SetTreeModule_empty()];\n      } else {\n        return [SetTreeModule_empty(), false, t];\n      }\n    }\n  } else {\n    return [SetTreeModule_empty(), false, SetTreeModule_empty()];\n  }\n}\nfunction SetTreeModule_spliceOutSuccessor(t) {\n  if (t != null) {\n    var t2 = t;\n    if (t2 instanceof SetTreeNode$1) {\n      if (SetTreeNode$1__get_Left(t2) == null) {\n        return [SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2)];\n      } else {\n        var patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t2));\n        return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n      }\n    } else {\n      return [SetTreeLeaf$1__get_Key(t2), SetTreeModule_empty()];\n    }\n  } else {\n    throw new Error(\"internal error: Set.spliceOutSuccessor\");\n  }\n}\nfunction SetTreeModule_remove(comparer, k, t) {\n  if (t != null) {\n    var t2 = t;\n    var c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n    if (t2 instanceof SetTreeNode$1) {\n      if (c < 0) {\n        return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n      } else if (c === 0) {\n        if (SetTreeNode$1__get_Left(t2) == null) {\n          return SetTreeNode$1__get_Right(t2);\n        } else if (SetTreeNode$1__get_Right(t2) == null) {\n          return SetTreeNode$1__get_Left(t2);\n        } else {\n          var patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t2));\n          return SetTreeModule_mk(SetTreeNode$1__get_Left(t2), patternInput[0], patternInput[1]);\n        }\n      } else {\n        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t2)));\n      }\n    } else if (c === 0) {\n      return SetTreeModule_empty();\n    } else {\n      return t;\n    }\n  } else {\n    return t;\n  }\n}\nfunction SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\n  SetTreeModule_mem: while (true) {\n    var comparer = comparer_mut,\n      k = k_mut,\n      t = t_mut;\n    if (t != null) {\n      var t2 = t;\n      var c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n      if (t2 instanceof SetTreeNode$1) {\n        if (c < 0) {\n          comparer_mut = comparer;\n          k_mut = k;\n          t_mut = SetTreeNode$1__get_Left(t2);\n          continue SetTreeModule_mem;\n        } else if (c === 0) {\n          return true;\n        } else {\n          comparer_mut = comparer;\n          k_mut = k;\n          t_mut = SetTreeNode$1__get_Right(t2);\n          continue SetTreeModule_mem;\n        }\n      } else {\n        return c === 0;\n      }\n    } else {\n      return false;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_iter(f_mut, t_mut) {\n  SetTreeModule_iter: while (true) {\n    var f = f_mut,\n      t = t_mut;\n    if (t != null) {\n      var t2 = t;\n      if (t2 instanceof SetTreeNode$1) {\n        SetTreeModule_iter(f, SetTreeNode$1__get_Left(t2));\n        f(SetTreeLeaf$1__get_Key(t2));\n        f_mut = f;\n        t_mut = SetTreeNode$1__get_Right(t2);\n        continue SetTreeModule_iter;\n      } else {\n        f(SetTreeLeaf$1__get_Key(t2));\n      }\n    }\n    break;\n  }\n}\nfunction SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\n  SetTreeModule_foldBackOpt: while (true) {\n    var f = f_mut,\n      t = t_mut,\n      x = x_mut;\n    if (t != null) {\n      var t2 = t;\n      if (t2 instanceof SetTreeNode$1) {\n        f_mut = f;\n        t_mut = SetTreeNode$1__get_Left(t2);\n        x_mut = f(SetTreeLeaf$1__get_Key(t2), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t2), x));\n        continue SetTreeModule_foldBackOpt;\n      } else {\n        return f(SetTreeLeaf$1__get_Key(t2), x);\n      }\n    } else {\n      return x;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_foldBack(f, m, x) {\n  return SetTreeModule_foldBackOpt(f, m, x);\n}\nfunction SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\n  SetTreeModule_foldOpt: while (true) {\n    var f = f_mut,\n      x = x_mut,\n      t = t_mut;\n    if (t != null) {\n      var t2 = t;\n      if (t2 instanceof SetTreeNode$1) {\n        f_mut = f;\n        x_mut = f(SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2));\n        t_mut = SetTreeNode$1__get_Right(t2);\n        continue SetTreeModule_foldOpt;\n      } else {\n        return f(x, SetTreeLeaf$1__get_Key(t2));\n      }\n    } else {\n      return x;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_fold(f, x, m) {\n  return SetTreeModule_foldOpt(f, x, m);\n}\nfunction SetTreeModule_forall(f_mut, t_mut) {\n  SetTreeModule_forall: while (true) {\n    var f = f_mut,\n      t = t_mut;\n    if (t != null) {\n      var t2 = t;\n      if (t2 instanceof SetTreeNode$1) {\n        if (f(SetTreeLeaf$1__get_Key(t2)) && SetTreeModule_forall(f, SetTreeNode$1__get_Left(t2))) {\n          f_mut = f;\n          t_mut = SetTreeNode$1__get_Right(t2);\n          continue SetTreeModule_forall;\n        } else {\n          return false;\n        }\n      } else {\n        return f(SetTreeLeaf$1__get_Key(t2));\n      }\n    } else {\n      return true;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_exists(f_mut, t_mut) {\n  SetTreeModule_exists: while (true) {\n    var f = f_mut,\n      t = t_mut;\n    if (t != null) {\n      var t2 = t;\n      if (t2 instanceof SetTreeNode$1) {\n        if (f(SetTreeLeaf$1__get_Key(t2)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t2))) {\n          return true;\n        } else {\n          f_mut = f;\n          t_mut = SetTreeNode$1__get_Right(t2);\n          continue SetTreeModule_exists;\n        }\n      } else {\n        return f(SetTreeLeaf$1__get_Key(t2));\n      }\n    } else {\n      return false;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_subset(comparer, a, b) {\n  return SetTreeModule_forall(function (x) {\n    return SetTreeModule_mem(comparer, x, b);\n  }, a);\n}\nfunction SetTreeModule_properSubset(comparer, a, b) {\n  if (SetTreeModule_forall(function (x) {\n    return SetTreeModule_mem(comparer, x, b);\n  }, a)) {\n    return SetTreeModule_exists(function (x_1) {\n      return !SetTreeModule_mem(comparer, x_1, a);\n    }, b);\n  } else {\n    return false;\n  }\n}\nfunction SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\n  SetTreeModule_filterAux: while (true) {\n    var comparer = comparer_mut,\n      f = f_mut,\n      t = t_mut,\n      acc = acc_mut;\n    if (t != null) {\n      var t2 = t;\n      if (t2 instanceof SetTreeNode$1) {\n        var acc_1 = f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc) : acc;\n        comparer_mut = comparer;\n        f_mut = f;\n        t_mut = SetTreeNode$1__get_Left(t2);\n        acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t2), acc_1);\n        continue SetTreeModule_filterAux;\n      } else if (f(SetTreeLeaf$1__get_Key(t2))) {\n        return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n      } else {\n        return acc;\n      }\n    } else {\n      return acc;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_filter(comparer, f, s) {\n  return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\n}\nfunction SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\n  SetTreeModule_diffAux: while (true) {\n    var comparer = comparer_mut,\n      t = t_mut,\n      acc = acc_mut;\n    if (acc == null) {\n      return acc;\n    } else if (t != null) {\n      var t2 = t;\n      if (t2 instanceof SetTreeNode$1) {\n        comparer_mut = comparer;\n        t_mut = SetTreeNode$1__get_Left(t2);\n        acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t2), SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc));\n        continue SetTreeModule_diffAux;\n      } else {\n        return SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n      }\n    } else {\n      return acc;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_diff(comparer, a, b) {\n  return SetTreeModule_diffAux(comparer, b, a);\n}\nfunction SetTreeModule_union(comparer, t1, t2) {\n  if (t1 != null) {\n    var t1$0027 = t1;\n    if (t2 != null) {\n      var t2$0027 = t2;\n      if (t1$0027 instanceof SetTreeNode$1) {\n        if (t2$0027 instanceof SetTreeNode$1) {\n          if (SetTreeNode$1__get_Height(t1$0027) > SetTreeNode$1__get_Height(t2$0027)) {\n            var patternInput = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n            return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1$0027), patternInput[0]), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1$0027), patternInput[2]));\n          } else {\n            var patternInput_1 = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n            return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2$0027), patternInput_1[0]), SetTreeLeaf$1__get_Key(t2$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2$0027), patternInput_1[2]));\n          }\n        } else {\n          return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n        }\n      } else {\n        return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n      }\n    } else {\n      return t1;\n    }\n  } else {\n    return t2;\n  }\n}\nfunction SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\n  SetTreeModule_intersectionAux: while (true) {\n    var comparer = comparer_mut,\n      b = b_mut,\n      t = t_mut,\n      acc = acc_mut;\n    if (t != null) {\n      var t2 = t;\n      if (t2 instanceof SetTreeNode$1) {\n        var acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t2), acc);\n        var acc_2 = SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc_1) : acc_1;\n        comparer_mut = comparer;\n        b_mut = b;\n        t_mut = SetTreeNode$1__get_Left(t2);\n        acc_mut = acc_2;\n        continue SetTreeModule_intersectionAux;\n      } else if (SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b)) {\n        return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n      } else {\n        return acc;\n      }\n    } else {\n      return acc;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_intersection(comparer, a, b) {\n  return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\n}\nfunction SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\n  if (f(k)) {\n    return [SetTreeModule_add(comparer, k, acc1), acc2];\n  } else {\n    return [acc1, SetTreeModule_add(comparer, k, acc2)];\n  }\n}\nfunction SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\n  SetTreeModule_partitionAux: while (true) {\n    var comparer = comparer_mut,\n      f = f_mut,\n      t = t_mut,\n      acc_0 = acc_0_mut,\n      acc_1 = acc_1_mut;\n    var acc = [acc_0, acc_1];\n    if (t != null) {\n      var t2 = t;\n      if (t2 instanceof SetTreeNode$1) {\n        var acc_2 = SetTreeModule_partitionAux(comparer, f, SetTreeNode$1__get_Right(t2), acc[0], acc[1]);\n        var acc_3 = SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc_2[0], acc_2[1]);\n        comparer_mut = comparer;\n        f_mut = f;\n        t_mut = SetTreeNode$1__get_Left(t2);\n        acc_0_mut = acc_3[0];\n        acc_1_mut = acc_3[1];\n        continue SetTreeModule_partitionAux;\n      } else {\n        return SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc[0], acc[1]);\n      }\n    } else {\n      return acc;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_partition(comparer, f, s) {\n  return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\n}\nfunction SetTreeModule_minimumElementAux(t_mut, n_mut) {\n  SetTreeModule_minimumElementAux: while (true) {\n    var t = t_mut,\n      n = n_mut;\n    if (t != null) {\n      var t2 = t;\n      if (t2 instanceof SetTreeNode$1) {\n        t_mut = SetTreeNode$1__get_Left(t2);\n        n_mut = SetTreeLeaf$1__get_Key(t2);\n        continue SetTreeModule_minimumElementAux;\n      } else {\n        return SetTreeLeaf$1__get_Key(t2);\n      }\n    } else {\n      return n;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_minimumElementOpt(t) {\n  if (t != null) {\n    var t2 = t;\n    if (t2 instanceof SetTreeNode$1) {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.some)(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2)));\n    } else {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.some)(SetTreeLeaf$1__get_Key(t2));\n    }\n  } else {\n    return void 0;\n  }\n}\nfunction SetTreeModule_maximumElementAux(t_mut, n_mut) {\n  SetTreeModule_maximumElementAux: while (true) {\n    var t = t_mut,\n      n = n_mut;\n    if (t != null) {\n      var t2 = t;\n      if (t2 instanceof SetTreeNode$1) {\n        t_mut = SetTreeNode$1__get_Right(t2);\n        n_mut = SetTreeLeaf$1__get_Key(t2);\n        continue SetTreeModule_maximumElementAux;\n      } else {\n        return SetTreeLeaf$1__get_Key(t2);\n      }\n    } else {\n      return n;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_maximumElementOpt(t) {\n  if (t != null) {\n    var t2 = t;\n    if (t2 instanceof SetTreeNode$1) {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.some)(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t2), SetTreeLeaf$1__get_Key(t2)));\n    } else {\n      return (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.some)(SetTreeLeaf$1__get_Key(t2));\n    }\n  } else {\n    return void 0;\n  }\n}\nfunction SetTreeModule_minimumElement(s) {\n  var matchValue = SetTreeModule_minimumElementOpt(s);\n  if (matchValue == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(matchValue);\n  }\n}\nfunction SetTreeModule_maximumElement(s) {\n  var matchValue = SetTreeModule_maximumElementOpt(s);\n  if (matchValue == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    return (0,_Option_js__WEBPACK_IMPORTED_MODULE_1__.value)(matchValue);\n  }\n}\nvar SetTreeModule_SetIterator$1 = /*#__PURE__*/function (_Record) {\n  _inherits(SetTreeModule_SetIterator$1, _Record);\n  var _super2 = _createSuper(SetTreeModule_SetIterator$1);\n  function SetTreeModule_SetIterator$1(stack, started) {\n    var _this2;\n    _classCallCheck(this, SetTreeModule_SetIterator$1);\n    _this2 = _super2.call(this);\n    _this2.stack = stack;\n    _this2.started = started;\n    return _this2;\n  }\n  return _createClass(SetTreeModule_SetIterator$1);\n}(_Types_js__WEBPACK_IMPORTED_MODULE_2__.Record);\nfunction SetTreeModule_SetIterator$1$reflection(gen0) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_0__.record_type)(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, function () {\n    return [[\"stack\", (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_0__.list_type)((0,_Reflection_js__WEBPACK_IMPORTED_MODULE_0__.option_type)(SetTreeLeaf$1$reflection(gen0)))], [\"started\", _Reflection_js__WEBPACK_IMPORTED_MODULE_0__.bool_type]];\n  });\n}\nfunction SetTreeModule_collapseLHS(stack_mut) {\n  SetTreeModule_collapseLHS: while (true) {\n    var stack = stack_mut;\n    if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(stack)) {\n      var x = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(stack);\n      var rest = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(stack);\n      if (x != null) {\n        var x2 = x;\n        if (x2 instanceof SetTreeNode$1) {\n          stack_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeNode$1__get_Left(x2), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2)), SetTreeNode$1__get_Right(x2)], rest);\n          continue SetTreeModule_collapseLHS;\n        } else {\n          return stack;\n        }\n      } else {\n        stack_mut = rest;\n        continue SetTreeModule_collapseLHS;\n      }\n    } else {\n      return (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.empty)();\n    }\n    break;\n  }\n}\nfunction SetTreeModule_mkIterator(s) {\n  return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.singleton)(s)), false);\n}\nfunction SetTreeModule_notStarted() {\n  throw new Error(\"Enumeration not started\");\n}\nfunction SetTreeModule_alreadyFinished() {\n  throw new Error(\"Enumeration already started\");\n}\nfunction SetTreeModule_current(i) {\n  if (i.started) {\n    var matchValue = i.stack;\n    if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue)) {\n      return SetTreeModule_alreadyFinished();\n    } else if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue) != null) {\n      var t = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue);\n      return SetTreeLeaf$1__get_Key(t);\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n  } else {\n    return SetTreeModule_notStarted();\n  }\n}\nfunction SetTreeModule_moveNext(i) {\n  if (i.started) {\n    var matchValue = i.stack;\n    if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue)) {\n      if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue) != null) {\n        var t = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue);\n        if (t instanceof SetTreeNode$1) {\n          throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n        } else {\n          i.stack = SetTreeModule_collapseLHS((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue));\n          return !(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(i.stack);\n        }\n      } else {\n        throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n      }\n    } else {\n      return false;\n    }\n  } else {\n    i.started = true;\n    return !(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(i.stack);\n  }\n}\nfunction SetTreeModule_mkIEnumerator(s) {\n  var _ref;\n  var i = SetTreeModule_mkIterator(s);\n  return _ref = {}, _defineProperty(_ref, \"System.Collections.Generic.IEnumerator`1.get_Current\", function SystemCollectionsGenericIEnumerator1Get_Current() {\n    return SetTreeModule_current(i);\n  }), _defineProperty(_ref, \"System.Collections.IEnumerator.get_Current\", function SystemCollectionsIEnumeratorGet_Current() {\n    return SetTreeModule_current(i);\n  }), _defineProperty(_ref, \"System.Collections.IEnumerator.MoveNext\", function SystemCollectionsIEnumeratorMoveNext() {\n    return SetTreeModule_moveNext(i);\n  }), _defineProperty(_ref, \"System.Collections.IEnumerator.Reset\", function SystemCollectionsIEnumeratorReset() {\n    i = SetTreeModule_mkIterator(s);\n  }), _defineProperty(_ref, \"Dispose\", function Dispose() {}), _ref;\n}\nfunction SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\n  SetTreeModule_compareStacks: while (true) {\n    var comparer = comparer_mut,\n      l1 = l1_mut,\n      l2 = l2_mut;\n    var matchValue = [l1, l2];\n    if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue[0])) {\n      if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue[1])) {\n        if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue[1]) != null) {\n          if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue[0]) != null) {\n            var x1_3 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue[0]);\n            var x2_3 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue[1]);\n            if (x1_3 instanceof SetTreeNode$1) {\n              if (SetTreeNode$1__get_Left(x1_3) == null) {\n                if (x2_3 instanceof SetTreeNode$1) {\n                  if (SetTreeNode$1__get_Left(x2_3) == null) {\n                    var c = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                    if (c !== 0) {\n                      return c | 0;\n                    } else {\n                      comparer_mut = comparer;\n                      l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.cons)(SetTreeNode$1__get_Right(x1_3), (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue[0]));\n                      l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.cons)(SetTreeNode$1__get_Right(x2_3), (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue[1]));\n                      continue SetTreeModule_compareStacks;\n                    }\n                  } else {\n                    var matchValue_3 = [l1, l2];\n                    var pattern_matching_result = void 0,\n                      t1_6 = void 0,\n                      x1_4 = void 0,\n                      t2_6 = void 0,\n                      x2_4 = void 0;\n                    if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_3[0])) {\n                      if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_3[0]) != null) {\n                        pattern_matching_result = 0;\n                        t1_6 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_3[0]);\n                        x1_4 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_3[0]);\n                      } else if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_3[1])) {\n                        if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_3[1]) != null) {\n                          pattern_matching_result = 1;\n                          t2_6 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_3[1]);\n                          x2_4 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_3[1]);\n                        } else {\n                          pattern_matching_result = 2;\n                        }\n                      } else {\n                        pattern_matching_result = 2;\n                      }\n                    } else if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_3[1])) {\n                      if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_3[1]) != null) {\n                        pattern_matching_result = 1;\n                        t2_6 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_3[1]);\n                        x2_4 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_3[1]);\n                      } else {\n                        pattern_matching_result = 2;\n                      }\n                    } else {\n                      pattern_matching_result = 2;\n                    }\n                    switch (pattern_matching_result) {\n                      case 0:\n                        {\n                          if (x1_4 instanceof SetTreeNode$1) {\n                            comparer_mut = comparer;\n                            l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeNode$1__get_Left(x1_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0)], t1_6);\n                            l2_mut = l2;\n                            continue SetTreeModule_compareStacks;\n                          } else {\n                            comparer_mut = comparer;\n                            l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_4))], t1_6);\n                            l2_mut = l2;\n                            continue SetTreeModule_compareStacks;\n                          }\n                        }\n                      case 1:\n                        {\n                          if (x2_4 instanceof SetTreeNode$1) {\n                            comparer_mut = comparer;\n                            l1_mut = l1;\n                            l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeNode$1__get_Left(x2_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0)], t2_6);\n                            continue SetTreeModule_compareStacks;\n                          } else {\n                            comparer_mut = comparer;\n                            l1_mut = l1;\n                            l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_4))], t2_6);\n                            continue SetTreeModule_compareStacks;\n                          }\n                        }\n                      case 2:\n                        {\n                          throw new Error(\"unexpected state in SetTree.compareStacks\");\n                        }\n                    }\n                  }\n                } else {\n                  var c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                  if (c_1 !== 0) {\n                    return c_1 | 0;\n                  } else {\n                    comparer_mut = comparer;\n                    l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.cons)(SetTreeNode$1__get_Right(x1_3), (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue[0]));\n                    l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.cons)(SetTreeModule_empty(), (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue[1]));\n                    continue SetTreeModule_compareStacks;\n                  }\n                }\n              } else {\n                var matchValue_4 = [l1, l2];\n                var pattern_matching_result_1 = void 0,\n                  t1_7 = void 0,\n                  x1_5 = void 0,\n                  t2_7 = void 0,\n                  x2_5 = void 0;\n                if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_4[0])) {\n                  if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_4[0]) != null) {\n                    pattern_matching_result_1 = 0;\n                    t1_7 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_4[0]);\n                    x1_5 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_4[0]);\n                  } else if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_4[1])) {\n                    if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_4[1]) != null) {\n                      pattern_matching_result_1 = 1;\n                      t2_7 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_4[1]);\n                      x2_5 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_4[1]);\n                    } else {\n                      pattern_matching_result_1 = 2;\n                    }\n                  } else {\n                    pattern_matching_result_1 = 2;\n                  }\n                } else if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_4[1])) {\n                  if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_4[1]) != null) {\n                    pattern_matching_result_1 = 1;\n                    t2_7 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_4[1]);\n                    x2_5 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_4[1]);\n                  } else {\n                    pattern_matching_result_1 = 2;\n                  }\n                } else {\n                  pattern_matching_result_1 = 2;\n                }\n                switch (pattern_matching_result_1) {\n                  case 0:\n                    {\n                      if (x1_5 instanceof SetTreeNode$1) {\n                        comparer_mut = comparer;\n                        l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeNode$1__get_Left(x1_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_5), 0)], t1_7);\n                        l2_mut = l2;\n                        continue SetTreeModule_compareStacks;\n                      } else {\n                        comparer_mut = comparer;\n                        l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_5))], t1_7);\n                        l2_mut = l2;\n                        continue SetTreeModule_compareStacks;\n                      }\n                    }\n                  case 1:\n                    {\n                      if (x2_5 instanceof SetTreeNode$1) {\n                        comparer_mut = comparer;\n                        l1_mut = l1;\n                        l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeNode$1__get_Left(x2_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_5), 0)], t2_7);\n                        continue SetTreeModule_compareStacks;\n                      } else {\n                        comparer_mut = comparer;\n                        l1_mut = l1;\n                        l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_5))], t2_7);\n                        continue SetTreeModule_compareStacks;\n                      }\n                    }\n                  case 2:\n                    {\n                      throw new Error(\"unexpected state in SetTree.compareStacks\");\n                    }\n                }\n              }\n            } else if (x2_3 instanceof SetTreeNode$1) {\n              if (SetTreeNode$1__get_Left(x2_3) == null) {\n                var c_2 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                if (c_2 !== 0) {\n                  return c_2 | 0;\n                } else {\n                  comparer_mut = comparer;\n                  l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.cons)(SetTreeModule_empty(), (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue[0]));\n                  l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.cons)(SetTreeNode$1__get_Right(x2_3), (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue[1]));\n                  continue SetTreeModule_compareStacks;\n                }\n              } else {\n                var matchValue_5 = [l1, l2];\n                var pattern_matching_result_2 = void 0,\n                  t1_8 = void 0,\n                  x1_6 = void 0,\n                  t2_8 = void 0,\n                  x2_6 = void 0;\n                if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_5[0])) {\n                  if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_5[0]) != null) {\n                    pattern_matching_result_2 = 0;\n                    t1_8 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_5[0]);\n                    x1_6 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_5[0]);\n                  } else if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_5[1])) {\n                    if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_5[1]) != null) {\n                      pattern_matching_result_2 = 1;\n                      t2_8 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_5[1]);\n                      x2_6 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_5[1]);\n                    } else {\n                      pattern_matching_result_2 = 2;\n                    }\n                  } else {\n                    pattern_matching_result_2 = 2;\n                  }\n                } else if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_5[1])) {\n                  if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_5[1]) != null) {\n                    pattern_matching_result_2 = 1;\n                    t2_8 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_5[1]);\n                    x2_6 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_5[1]);\n                  } else {\n                    pattern_matching_result_2 = 2;\n                  }\n                } else {\n                  pattern_matching_result_2 = 2;\n                }\n                switch (pattern_matching_result_2) {\n                  case 0:\n                    {\n                      if (x1_6 instanceof SetTreeNode$1) {\n                        comparer_mut = comparer;\n                        l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeNode$1__get_Left(x1_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0)], t1_8);\n                        l2_mut = l2;\n                        continue SetTreeModule_compareStacks;\n                      } else {\n                        comparer_mut = comparer;\n                        l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_6))], t1_8);\n                        l2_mut = l2;\n                        continue SetTreeModule_compareStacks;\n                      }\n                    }\n                  case 1:\n                    {\n                      if (x2_6 instanceof SetTreeNode$1) {\n                        comparer_mut = comparer;\n                        l1_mut = l1;\n                        l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeNode$1__get_Left(x2_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0)], t2_8);\n                        continue SetTreeModule_compareStacks;\n                      } else {\n                        comparer_mut = comparer;\n                        l1_mut = l1;\n                        l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_6))], t2_8);\n                        continue SetTreeModule_compareStacks;\n                      }\n                    }\n                  case 2:\n                    {\n                      throw new Error(\"unexpected state in SetTree.compareStacks\");\n                    }\n                }\n              }\n            } else {\n              var c_3 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n              if (c_3 !== 0) {\n                return c_3 | 0;\n              } else {\n                comparer_mut = comparer;\n                l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue[0]);\n                l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue[1]);\n                continue SetTreeModule_compareStacks;\n              }\n            }\n          } else {\n            var x2 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue[1]);\n            var matchValue_1 = [l1, l2];\n            var pattern_matching_result_3 = void 0,\n              t1_2 = void 0,\n              x1 = void 0,\n              t2_2 = void 0,\n              x2_1 = void 0;\n            if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_1[0])) {\n              if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_1[0]) != null) {\n                pattern_matching_result_3 = 0;\n                t1_2 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_1[0]);\n                x1 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_1[0]);\n              } else if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_1[1])) {\n                if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_1[1]) != null) {\n                  pattern_matching_result_3 = 1;\n                  t2_2 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_1[1]);\n                  x2_1 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_1[1]);\n                } else {\n                  pattern_matching_result_3 = 2;\n                }\n              } else {\n                pattern_matching_result_3 = 2;\n              }\n            } else if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_1[1])) {\n              if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_1[1]) != null) {\n                pattern_matching_result_3 = 1;\n                t2_2 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_1[1]);\n                x2_1 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_1[1]);\n              } else {\n                pattern_matching_result_3 = 2;\n              }\n            } else {\n              pattern_matching_result_3 = 2;\n            }\n            switch (pattern_matching_result_3) {\n              case 0:\n                {\n                  if (x1 instanceof SetTreeNode$1) {\n                    comparer_mut = comparer;\n                    l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeNode$1__get_Left(x1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1), 0)], t1_2);\n                    l2_mut = l2;\n                    continue SetTreeModule_compareStacks;\n                  } else {\n                    comparer_mut = comparer;\n                    l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1))], t1_2);\n                    l2_mut = l2;\n                    continue SetTreeModule_compareStacks;\n                  }\n                }\n              case 1:\n                {\n                  if (x2_1 instanceof SetTreeNode$1) {\n                    comparer_mut = comparer;\n                    l1_mut = l1;\n                    l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeNode$1__get_Left(x2_1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_1), 0)], t2_2);\n                    continue SetTreeModule_compareStacks;\n                  } else {\n                    comparer_mut = comparer;\n                    l1_mut = l1;\n                    l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_1))], t2_2);\n                    continue SetTreeModule_compareStacks;\n                  }\n                }\n              case 2:\n                {\n                  throw new Error(\"unexpected state in SetTree.compareStacks\");\n                }\n            }\n          }\n        } else if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue[0]) != null) {\n          var x1_1 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue[0]);\n          var matchValue_2 = [l1, l2];\n          var pattern_matching_result_4 = void 0,\n            t1_4 = void 0,\n            x1_2 = void 0,\n            t2_4 = void 0,\n            x2_2 = void 0;\n          if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_2[0])) {\n            if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_2[0]) != null) {\n              pattern_matching_result_4 = 0;\n              t1_4 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_2[0]);\n              x1_2 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_2[0]);\n            } else if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_2[1])) {\n              if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_2[1]) != null) {\n                pattern_matching_result_4 = 1;\n                t2_4 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_2[1]);\n                x2_2 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_2[1]);\n              } else {\n                pattern_matching_result_4 = 2;\n              }\n            } else {\n              pattern_matching_result_4 = 2;\n            }\n          } else if (!(0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue_2[1])) {\n            if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_2[1]) != null) {\n              pattern_matching_result_4 = 1;\n              t2_4 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue_2[1]);\n              x2_2 = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.head)(matchValue_2[1]);\n            } else {\n              pattern_matching_result_4 = 2;\n            }\n          } else {\n            pattern_matching_result_4 = 2;\n          }\n          switch (pattern_matching_result_4) {\n            case 0:\n              {\n                if (x1_2 instanceof SetTreeNode$1) {\n                  comparer_mut = comparer;\n                  l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeNode$1__get_Left(x1_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0)], t1_4);\n                  l2_mut = l2;\n                  continue SetTreeModule_compareStacks;\n                } else {\n                  comparer_mut = comparer;\n                  l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_2))], t1_4);\n                  l2_mut = l2;\n                  continue SetTreeModule_compareStacks;\n                }\n              }\n            case 1:\n              {\n                if (x2_2 instanceof SetTreeNode$1) {\n                  comparer_mut = comparer;\n                  l1_mut = l1;\n                  l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeNode$1__get_Left(x2_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0)], t2_4);\n                  continue SetTreeModule_compareStacks;\n                } else {\n                  comparer_mut = comparer;\n                  l1_mut = l1;\n                  l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.ofArrayWithTail)([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_2))], t2_4);\n                  continue SetTreeModule_compareStacks;\n                }\n              }\n            case 2:\n              {\n                throw new Error(\"unexpected state in SetTree.compareStacks\");\n              }\n          }\n        } else {\n          comparer_mut = comparer;\n          l1_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue[0]);\n          l2_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.tail)(matchValue[1]);\n          continue SetTreeModule_compareStacks;\n        }\n      } else {\n        return 1;\n      }\n    } else if ((0,_List_js__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(matchValue[1])) {\n      return 0;\n    } else {\n      return -1;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_compare(comparer, t1, t2) {\n  if (t1 == null) {\n    if (t2 == null) {\n      return 0;\n    } else {\n      return -1;\n    }\n  } else if (t2 == null) {\n    return 1;\n  } else {\n    return SetTreeModule_compareStacks(comparer, (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.singleton)(t1), (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.singleton)(t2)) | 0;\n  }\n}\nfunction SetTreeModule_choose(s) {\n  return SetTreeModule_minimumElement(s);\n}\nfunction SetTreeModule_toList(t) {\n  var loop = function loop(t$0027_mut, acc_mut) {\n    loop: while (true) {\n      var t$0027 = t$0027_mut,\n        acc = acc_mut;\n      if (t$0027 != null) {\n        var t2 = t$0027;\n        if (t2 instanceof SetTreeNode$1) {\n          t$0027_mut = SetTreeNode$1__get_Left(t2);\n          acc_mut = (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.cons)(SetTreeLeaf$1__get_Key(t2), loop(SetTreeNode$1__get_Right(t2), acc));\n          continue loop;\n        } else {\n          return (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.cons)(SetTreeLeaf$1__get_Key(t2), acc);\n        }\n      } else {\n        return acc;\n      }\n      break;\n    }\n  };\n  return loop(t, (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.empty)());\n}\nfunction SetTreeModule_copyToArray(s, arr, i) {\n  var j = i;\n  SetTreeModule_iter(function (x) {\n    arr[j] = x;\n    j = j + 1 | 0;\n  }, s);\n}\nfunction SetTreeModule_toArray(s) {\n  var n = SetTreeModule_count(s) | 0;\n  var res = (0,_Array_js__WEBPACK_IMPORTED_MODULE_4__.fill)(new Array(n), 0, n, null);\n  SetTreeModule_copyToArray(s, res, 0);\n  return res;\n}\nfunction SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n  SetTreeModule_mkFromEnumerator: while (true) {\n    var comparer = comparer_mut,\n      acc = acc_mut,\n      e = e_mut;\n    if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      comparer_mut = comparer;\n      acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\n      e_mut = e;\n      continue SetTreeModule_mkFromEnumerator;\n    } else {\n      return acc;\n    }\n    break;\n  }\n}\nfunction SetTreeModule_ofArray(comparer, l) {\n  return (0,_Array_js__WEBPACK_IMPORTED_MODULE_4__.fold)(function (acc, k) {\n    return SetTreeModule_add(comparer, k, acc);\n  }, SetTreeModule_empty(), l);\n}\nfunction SetTreeModule_ofList(comparer, l) {\n  return (0,_List_js__WEBPACK_IMPORTED_MODULE_3__.fold)(function (acc, k) {\n    return SetTreeModule_add(comparer, k, acc);\n  }, SetTreeModule_empty(), l);\n}\nfunction SetTreeModule_ofSeq(comparer, c) {\n  if ((0,_Util_js__WEBPACK_IMPORTED_MODULE_5__.isArrayLike)(c)) {\n    return SetTreeModule_ofArray(comparer, c);\n  } else if (c instanceof _List_js__WEBPACK_IMPORTED_MODULE_3__.FSharpList) {\n    return SetTreeModule_ofList(comparer, c);\n  } else {\n    var ie = (0,_Util_js__WEBPACK_IMPORTED_MODULE_5__.getEnumerator)(c);\n    try {\n      return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\n    } finally {\n      (0,_Util_js__WEBPACK_IMPORTED_MODULE_5__.disposeSafe)(ie);\n    }\n  }\n}\nvar FSharpSet = /*#__PURE__*/function (_Symbol$toStringTag, _Symbol$iterator) {\n  function FSharpSet(comparer, tree) {\n    _classCallCheck(this, FSharpSet);\n    this.comparer = comparer;\n    this.tree = tree;\n  }\n  _createClass(FSharpSet, [{\n    key: \"GetHashCode\",\n    value: function GetHashCode() {\n      var this$ = this;\n      return FSharpSet__ComputeHashCode(this$) | 0;\n    }\n  }, {\n    key: \"Equals\",\n    value: function Equals(that) {\n      var this$ = this;\n      return that instanceof FSharpSet && SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var this$ = this;\n      return \"set [\" + (0,_String_js__WEBPACK_IMPORTED_MODULE_6__.join)(\"; \", (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.map)(function (x) {\n        var copyOfStruct = x;\n        return (0,_Types_js__WEBPACK_IMPORTED_MODULE_2__.toString)(copyOfStruct);\n      }, this$)) + \"]\";\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return \"FSharpSet\";\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_key) {\n      var this$ = this;\n      return Array.from(this$);\n    }\n  }, {\n    key: \"CompareTo\",\n    value: function CompareTo(that) {\n      var s = this;\n      return SetTreeModule_compare(FSharpSet__get_Comparer(s), FSharpSet__get_Tree(s), FSharpSet__get_Tree(that)) | 0;\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.Add2B595\",\n    value: function SystemCollectionsGenericICollection1Add2B595(x) {\n      throw new Error(\"ReadOnlyCollection\");\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.Clear\",\n    value: function SystemCollectionsGenericICollection1Clear() {\n      throw new Error(\"ReadOnlyCollection\");\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.Remove2B595\",\n    value: function SystemCollectionsGenericICollection1Remove2B595(x) {\n      throw new Error(\"ReadOnlyCollection\");\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.Contains2B595\",\n    value: function SystemCollectionsGenericICollection1Contains2B595(x) {\n      var s = this;\n      return SetTreeModule_mem(FSharpSet__get_Comparer(s), x, FSharpSet__get_Tree(s));\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\",\n    value: function SystemCollectionsGenericICollection1CopyToZ2E171D71(arr, i) {\n      var s = this;\n      SetTreeModule_copyToArray(FSharpSet__get_Tree(s), arr, i);\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.get_IsReadOnly\",\n    value: function SystemCollectionsGenericICollection1Get_IsReadOnly() {\n      return true;\n    }\n  }, {\n    key: \"System.Collections.Generic.ICollection`1.get_Count\",\n    value: function SystemCollectionsGenericICollection1Get_Count() {\n      var s = this;\n      return FSharpSet__get_Count(s) | 0;\n    }\n  }, {\n    key: \"System.Collections.Generic.IReadOnlyCollection`1.get_Count\",\n    value: function SystemCollectionsGenericIReadOnlyCollection1Get_Count() {\n      var s = this;\n      return FSharpSet__get_Count(s) | 0;\n    }\n  }, {\n    key: \"GetEnumerator\",\n    value: function GetEnumerator() {\n      var s = this;\n      return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_5__.toIterator)(this.GetEnumerator());\n    }\n  }, {\n    key: \"System.Collections.IEnumerable.GetEnumerator\",\n    value: function SystemCollectionsIEnumerableGetEnumerator() {\n      var s = this;\n      return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      var s = this;\n      return FSharpSet__get_Count(s) | 0;\n    }\n  }, {\n    key: \"add\",\n    value: function add(k) {\n      var s = this;\n      throw new Error(\"Set cannot be mutated\");\n      return s;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      throw new Error(\"Set cannot be mutated\");\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(k) {\n      throw new Error(\"Set cannot be mutated\");\n      return false;\n    }\n  }, {\n    key: \"has\",\n    value: function has(k) {\n      var s = this;\n      return FSharpSet__Contains(s, k);\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      var s = this;\n      return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.map)(function (x) {\n        return x;\n      }, s);\n    }\n  }, {\n    key: \"values\",\n    value: function values() {\n      var s = this;\n      return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.map)(function (x) {\n        return x;\n      }, s);\n    }\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      var s = this;\n      return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.map)(function (v) {\n        return [v, v];\n      }, s);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(f, thisArg) {\n      var s = this;\n      (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.iterate)(function (x) {\n        f(x, x, s);\n      }, s);\n    }\n  }]);\n  return FSharpSet;\n}(Symbol.toStringTag, Symbol.iterator);\nfunction FSharpSet$reflection(gen0) {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_0__.class_type)(\"Set.FSharpSet\", [gen0], FSharpSet);\n}\nfunction FSharpSet_$ctor(comparer, tree) {\n  return new FSharpSet(comparer, tree);\n}\nfunction FSharpSet__get_Comparer(set$) {\n  return set$.comparer;\n}\nfunction FSharpSet__get_Tree(set$) {\n  return set$.tree;\n}\nfunction FSharpSet_Empty(comparer) {\n  return FSharpSet_$ctor(comparer, SetTreeModule_empty());\n}\nfunction FSharpSet__Add(s, value) {\n  return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\nfunction FSharpSet__Remove(s, value) {\n  return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\nfunction FSharpSet__get_Count(s) {\n  return SetTreeModule_count(FSharpSet__get_Tree(s));\n}\nfunction FSharpSet__Contains(s, value) {\n  return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\n}\nfunction FSharpSet__Iterate(s, x) {\n  SetTreeModule_iter(x, FSharpSet__get_Tree(s));\n}\nfunction FSharpSet__Fold(s, f, z) {\n  var f_1 = f;\n  return SetTreeModule_fold(function (x, z_1) {\n    return f_1(z_1, x);\n  }, z, FSharpSet__get_Tree(s));\n}\nfunction FSharpSet__get_IsEmpty(s) {\n  return FSharpSet__get_Tree(s) == null;\n}\nfunction FSharpSet__Partition(s, f) {\n  if (FSharpSet__get_Tree(s) == null) {\n    return [s, s];\n  } else {\n    var patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\n    return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\n  }\n}\nfunction FSharpSet__Filter(s, f) {\n  if (FSharpSet__get_Tree(s) == null) {\n    return s;\n  } else {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\n  }\n}\nfunction FSharpSet__Map(s, f, comparer) {\n  return FSharpSet_$ctor(comparer, SetTreeModule_fold(function (acc, k) {\n    return SetTreeModule_add(comparer, f(k), acc);\n  }, SetTreeModule_empty(), FSharpSet__get_Tree(s)));\n}\nfunction FSharpSet__Exists(s, f) {\n  return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\n}\nfunction FSharpSet__ForAll(s, f) {\n  return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\n}\nfunction FSharpSet_op_Subtraction(set1, set2) {\n  if (FSharpSet__get_Tree(set1) == null) {\n    return set1;\n  } else if (FSharpSet__get_Tree(set2) == null) {\n    return set1;\n  } else {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n  }\n}\nfunction FSharpSet_op_Addition(set1, set2) {\n  if (FSharpSet__get_Tree(set2) == null) {\n    return set1;\n  } else if (FSharpSet__get_Tree(set1) == null) {\n    return set2;\n  } else {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n  }\n}\nfunction FSharpSet_Intersection(a, b) {\n  if (FSharpSet__get_Tree(b) == null) {\n    return b;\n  } else if (FSharpSet__get_Tree(a) == null) {\n    return a;\n  } else {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\n  }\n}\nfunction FSharpSet_IntersectionMany(sets) {\n  return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.reduce)(FSharpSet_Intersection, sets);\n}\nfunction FSharpSet_Equality(a, b) {\n  return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\n}\nfunction FSharpSet_Compare(a, b) {\n  return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\n}\nfunction FSharpSet__get_Choose(x) {\n  return SetTreeModule_choose(FSharpSet__get_Tree(x));\n}\nfunction FSharpSet__get_MinimumElement(x) {\n  return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\n}\nfunction FSharpSet__get_MaximumElement(x) {\n  return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\n}\nfunction FSharpSet__IsSubsetOf(x, otherSet) {\n  return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\nfunction FSharpSet__IsSupersetOf(x, otherSet) {\n  return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\nfunction FSharpSet__IsProperSubsetOf(x, otherSet) {\n  return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\nfunction FSharpSet__IsProperSupersetOf(x, otherSet) {\n  return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\nfunction FSharpSet__ToList(x) {\n  return SetTreeModule_toList(FSharpSet__get_Tree(x));\n}\nfunction FSharpSet__ToArray(x) {\n  return SetTreeModule_toArray(FSharpSet__get_Tree(x));\n}\nfunction FSharpSet__ComputeHashCode(this$) {\n  var y;\n  var res = 0;\n  var enumerator = (0,_Util_js__WEBPACK_IMPORTED_MODULE_5__.getEnumerator)(this$);\n  try {\n    while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n      var x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n      res = (y = (0,_Util_js__WEBPACK_IMPORTED_MODULE_5__.structuralHash)(x_1) | 0, (res << 1) + y + 631) | 0;\n    }\n  } finally {\n    (0,_Util_js__WEBPACK_IMPORTED_MODULE_5__.disposeSafe)(enumerator);\n  }\n  return Math.abs(res) | 0;\n}\nfunction isEmpty(set$) {\n  return FSharpSet__get_IsEmpty(set$);\n}\nfunction contains(element, set$) {\n  return FSharpSet__Contains(set$, element);\n}\nfunction add(value, set$) {\n  return FSharpSet__Add(set$, value);\n}\nfunction singleton(value, comparer) {\n  return FSharpSet__Add(FSharpSet_Empty(comparer), value);\n}\nfunction remove(value, set$) {\n  return FSharpSet__Remove(set$, value);\n}\nfunction union(set1, set2) {\n  return FSharpSet_op_Addition(set1, set2);\n}\nfunction unionMany(sets, comparer) {\n  return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.fold)(FSharpSet_op_Addition, FSharpSet_Empty(comparer), sets);\n}\nfunction intersect(set1, set2) {\n  return FSharpSet_Intersection(set1, set2);\n}\nfunction intersectMany(sets) {\n  return FSharpSet_IntersectionMany(sets);\n}\nfunction iterate(action, set$) {\n  FSharpSet__Iterate(set$, action);\n}\nfunction empty(comparer) {\n  return FSharpSet_Empty(comparer);\n}\nfunction forAll(predicate, set$) {\n  return FSharpSet__ForAll(set$, predicate);\n}\nfunction exists(predicate, set$) {\n  return FSharpSet__Exists(set$, predicate);\n}\nfunction filter(predicate, set$) {\n  return FSharpSet__Filter(set$, predicate);\n}\nfunction partition(predicate, set$) {\n  return FSharpSet__Partition(set$, predicate);\n}\nfunction fold(folder, state, set$) {\n  return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\n}\nfunction foldBack(folder, set$, state) {\n  return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\n}\nfunction map(mapping, set$, comparer) {\n  return FSharpSet__Map(set$, mapping, comparer);\n}\nfunction count(set$) {\n  return FSharpSet__get_Count(set$);\n}\nfunction ofList(elements, comparer) {\n  return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\nfunction ofArray(array, comparer) {\n  return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\n}\nfunction toList(set$) {\n  return FSharpSet__ToList(set$);\n}\nfunction toArray(set$) {\n  return FSharpSet__ToArray(set$);\n}\nfunction toSeq(set$) {\n  return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.map)(function (x) {\n    return x;\n  }, set$);\n}\nfunction ofSeq(elements, comparer) {\n  return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\nfunction difference(set1, set2) {\n  return FSharpSet_op_Subtraction(set1, set2);\n}\nfunction isSubset(set1, set2) {\n  return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\nfunction isSuperset(set1, set2) {\n  return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\nfunction isProperSubset(set1, set2) {\n  return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\nfunction isProperSuperset(set1, set2) {\n  return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\nfunction minElement(set$) {\n  return FSharpSet__get_MinimumElement(set$);\n}\nfunction maxElement(set$) {\n  return FSharpSet__get_MaximumElement(set$);\n}\nfunction unionWith(s1, s2) {\n  return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.fold)(function (acc, x) {\n    return acc.add(x);\n  }, s1, s2);\n}\nfunction newMutableSetWith(s1, s2) {\n  if (s1 instanceof _MutableSet_js__WEBPACK_IMPORTED_MODULE_8__.HashSet) {\n    return (0,_MutableSet_js__WEBPACK_IMPORTED_MODULE_8__.HashSet_$ctor_Z6150332D)(s2, (0,_MutableSet_js__WEBPACK_IMPORTED_MODULE_8__.HashSet__get_Comparer)(s1));\n  } else {\n    return new Set(s2);\n  }\n}\nfunction intersectWith(s1, s2) {\n  var s2_1 = newMutableSetWith(s1, s2);\n  (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.iterate)(function (x) {\n    if (!s2_1.has(x)) {\n      s1[\"delete\"](x);\n    }\n  }, s1.values());\n}\nfunction exceptWith(s1, s2) {\n  (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.iterate)(function (x) {\n    s1[\"delete\"](x);\n  }, s2);\n}\nfunction isSubsetOf(s1, s2) {\n  var s2_1 = newMutableSetWith(s1, s2);\n  return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.forAll)(function (arg00) {\n    return s2_1.has(arg00);\n  }, s1.values());\n}\nfunction isSupersetOf(s1, s2) {\n  return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.forAll)(function (arg00) {\n    return s1.has(arg00);\n  }, s2);\n}\nfunction isProperSubsetOf(s1, s2) {\n  var s2_1 = newMutableSetWith(s1, s2);\n  if (s2_1.size > s1.size) {\n    return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.forAll)(function (arg00) {\n      return s2_1.has(arg00);\n    }, s1.values());\n  } else {\n    return false;\n  }\n}\nfunction isProperSupersetOf(s1, s2) {\n  var s2_1 = (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.cache)(s2);\n  if ((0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.exists)(function (arg) {\n    return !s1.has(arg);\n  }, s2_1)) {\n    return (0,_Seq_js__WEBPACK_IMPORTED_MODULE_7__.forAll)(function (arg00_1) {\n      return s1.has(arg00_1);\n    }, s2_1);\n  } else {\n    return false;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Set.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js":
/*!***********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"compareOrdinal\": () => (/* binding */ compareOrdinal),\n/* harmony export */   \"compareTo\": () => (/* binding */ compareTo),\n/* harmony export */   \"startsWith\": () => (/* binding */ startsWith),\n/* harmony export */   \"indexOfAny\": () => (/* binding */ indexOfAny),\n/* harmony export */   \"printf\": () => (/* binding */ printf),\n/* harmony export */   \"interpolate\": () => (/* binding */ interpolate),\n/* harmony export */   \"toConsole\": () => (/* binding */ toConsole),\n/* harmony export */   \"toConsoleError\": () => (/* binding */ toConsoleError),\n/* harmony export */   \"toText\": () => (/* binding */ toText),\n/* harmony export */   \"toFail\": () => (/* binding */ toFail),\n/* harmony export */   \"fsFormat\": () => (/* binding */ fsFormat),\n/* harmony export */   \"format\": () => (/* binding */ format),\n/* harmony export */   \"endsWith\": () => (/* binding */ endsWith),\n/* harmony export */   \"initialize\": () => (/* binding */ initialize),\n/* harmony export */   \"insert\": () => (/* binding */ insert),\n/* harmony export */   \"isNullOrEmpty\": () => (/* binding */ isNullOrEmpty),\n/* harmony export */   \"isNullOrWhiteSpace\": () => (/* binding */ isNullOrWhiteSpace),\n/* harmony export */   \"concat\": () => (/* binding */ concat),\n/* harmony export */   \"join\": () => (/* binding */ join),\n/* harmony export */   \"joinWithIndices\": () => (/* binding */ joinWithIndices),\n/* harmony export */   \"toBase64String\": () => (/* binding */ toBase64String),\n/* harmony export */   \"fromBase64String\": () => (/* binding */ fromBase64String),\n/* harmony export */   \"padLeft\": () => (/* binding */ padLeft),\n/* harmony export */   \"padRight\": () => (/* binding */ padRight),\n/* harmony export */   \"remove\": () => (/* binding */ remove),\n/* harmony export */   \"replace\": () => (/* binding */ replace),\n/* harmony export */   \"replicate\": () => (/* binding */ replicate),\n/* harmony export */   \"getCharAtIndex\": () => (/* binding */ getCharAtIndex),\n/* harmony export */   \"split\": () => (/* binding */ split),\n/* harmony export */   \"trim\": () => (/* binding */ trim),\n/* harmony export */   \"trimStart\": () => (/* binding */ trimStart),\n/* harmony export */   \"trimEnd\": () => (/* binding */ trimEnd),\n/* harmony export */   \"filter\": () => (/* binding */ filter),\n/* harmony export */   \"substring\": () => (/* binding */ substring),\n/* harmony export */   \"fmt\": () => (/* binding */ fmt),\n/* harmony export */   \"fmtWith\": () => (/* binding */ fmtWith),\n/* harmony export */   \"getFormat\": () => (/* binding */ getFormat)\n/* harmony export */ });\n/* harmony import */ var _Date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Date.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Date.js\");\n/* harmony import */ var _Numeric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Numeric.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Numeric.js\");\n/* harmony import */ var _RegExp_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RegExp.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/RegExp.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\nvar fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nvar interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nvar formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n  return (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.compare)(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n  function isIgnoreCase(i) {\n    return i === true || i === 1 /* CurrentCultureIgnoreCase */ || i === 3 /* InvariantCultureIgnoreCase */ || i === 5 /* OrdinalIgnoreCase */;\n  }\n\n  function isOrdinal(i) {\n    return i === 4 /* Ordinal */ || i === 5 /* OrdinalIgnoreCase */;\n  }\n\n  if (x == null) {\n    return y == null ? 0 : -1;\n  }\n  if (y == null) {\n    return 1;\n  } // everything is bigger than null\n  if (isOrdinal(ic)) {\n    if (isIgnoreCase(ic)) {\n      x = x.toLowerCase();\n      y = y.toLowerCase();\n    }\n    return x === y ? 0 : x < y ? -1 : 1;\n  } else {\n    if (isIgnoreCase(ic)) {\n      x = x.toLocaleLowerCase();\n      y = y.toLocaleLowerCase();\n    }\n    return x.localeCompare(y);\n  }\n}\nfunction compare() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  switch (args.length) {\n    case 2:\n      return cmp(args[0], args[1], false);\n    case 3:\n      return cmp(args[0], args[1], args[2]);\n    case 4:\n      return cmp(args[0], args[1], args[2] === true);\n    case 5:\n      return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n    case 6:\n      return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n    case 7:\n      return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n    default:\n      throw new Error(\"String.compare: Unsupported number of parameters\");\n  }\n}\nfunction compareOrdinal(x, y) {\n  return cmp(x, y, 4 /* Ordinal */);\n}\n\nfunction compareTo(x, y) {\n  return cmp(x, y, 0 /* CurrentCulture */);\n}\n\nfunction startsWith(str, pattern, ic) {\n  if (str.length >= pattern.length) {\n    return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n  }\n  return false;\n}\nfunction indexOfAny(str, anyOf) {\n  if (str == null || str === \"\") {\n    return -1;\n  }\n  var startIndex = (arguments.length <= 2 ? 0 : arguments.length - 2) > 0 ? arguments.length <= 2 ? undefined : arguments[2] : 0;\n  if (startIndex < 0) {\n    throw new Error(\"Start index cannot be negative\");\n  }\n  var length = (arguments.length <= 2 ? 0 : arguments.length - 2) > 1 ? arguments.length <= 3 ? undefined : arguments[3] : str.length - startIndex;\n  if (length < 0) {\n    throw new Error(\"Length cannot be negative\");\n  }\n  if (length > str.length - startIndex) {\n    throw new Error(\"Invalid startIndex and length\");\n  }\n  str = str.substr(startIndex, length);\n  var _iterator = _createForOfIteratorHelper(anyOf),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var c = _step.value;\n      var index = str.indexOf(c);\n      if (index > -1) {\n        return index + startIndex;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return -1;\n}\nfunction printf(input) {\n  return {\n    input: input,\n    cont: fsFormat(input)\n  };\n}\nfunction interpolate(str, values) {\n  var valIdx = 0;\n  var strIdx = 0;\n  var result = \"\";\n  interpolateRegExp.lastIndex = 0;\n  var match = interpolateRegExp.exec(str);\n  while (match) {\n    // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n    // Note: we don't use negative lookbehind because some browsers don't support it yet\n    var matchIndex = match.index + (match[1] || \"\").length;\n    result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n    var _match = match,\n      _match2 = _slicedToArray(_match, 6),\n      flags = _match2[2],\n      padLength = _match2[3],\n      precision = _match2[4],\n      _format = _match2[5];\n    result += formatReplacement(values[valIdx++], flags, padLength, precision, _format);\n    strIdx = interpolateRegExp.lastIndex;\n    // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n    interpolateRegExp.lastIndex -= 1;\n    match = interpolateRegExp.exec(str);\n  }\n  result += str.substring(strIdx).replace(/%%/g, \"%\");\n  return result;\n}\nfunction continuePrint(cont, arg) {\n  return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nfunction toConsole(arg) {\n  // Don't remove the lambda here, see #1357\n  return continuePrint(function (x) {\n    return console.log(x);\n  }, arg);\n}\nfunction toConsoleError(arg) {\n  return continuePrint(function (x) {\n    return console.error(x);\n  }, arg);\n}\nfunction toText(arg) {\n  return continuePrint(function (x) {\n    return x;\n  }, arg);\n}\nfunction toFail(arg) {\n  return continuePrint(function (x) {\n    throw new Error(x);\n  }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n  var sign = \"\";\n  flags = flags || \"\";\n  format = format || \"\";\n  if ((0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.isNumeric)(rep)) {\n    if (format.toLowerCase() !== \"x\") {\n      if (isLessThan(rep, 0)) {\n        rep = (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.multiply)(rep, -1);\n        sign = \"-\";\n      } else {\n        if (flags.indexOf(\" \") >= 0) {\n          sign = \" \";\n        } else if (flags.indexOf(\"+\") >= 0) {\n          sign = \"+\";\n        }\n      }\n    }\n    precision = precision == null ? null : parseInt(precision, 10);\n    switch (format) {\n      case \"f\":\n      case \"F\":\n        precision = precision != null ? precision : 6;\n        rep = (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toFixed)(rep, precision);\n        break;\n      case \"g\":\n      case \"G\":\n        rep = precision != null ? (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toPrecision)(rep, precision) : (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toPrecision)(rep);\n        break;\n      case \"e\":\n      case \"E\":\n        rep = precision != null ? (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toExponential)(rep, precision) : (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toExponential)(rep);\n        break;\n      case \"x\":\n        rep = (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(rep);\n        break;\n      case \"X\":\n        rep = (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(rep).toUpperCase();\n        break;\n      default:\n        // AOid\n        rep = String(rep);\n        break;\n    }\n  } else if (rep instanceof Date) {\n    rep = (0,_Date_js__WEBPACK_IMPORTED_MODULE_1__.toString)(rep);\n  } else {\n    rep = (0,_Types_js__WEBPACK_IMPORTED_MODULE_2__.toString)(rep);\n  }\n  padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n  if (!isNaN(padLength)) {\n    var zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n    var minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n    var ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n    if (ch === \"0\") {\n      rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n      rep = sign + rep;\n    } else {\n      rep = padLeft(sign + rep, padLength, ch, minusFlag);\n    }\n  } else {\n    rep = sign + rep;\n  }\n  return rep;\n}\nfunction createPrinter(cont, _strParts, _matches) {\n  var _result = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  var padArg = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n  return function () {\n    // Make copies of the values passed by reference because the function can be used multiple times\n    var result = _result;\n    var strParts = _strParts.slice();\n    var matches = _matches.slice();\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    for (var _i2 = 0, _args = args; _i2 < _args.length; _i2++) {\n      var arg = _args[_i2];\n      var _matches$ = _slicedToArray(matches[0], 6),\n        flags = _matches$[2],\n        _padLength = _matches$[3],\n        precision = _matches$[4],\n        _format2 = _matches$[5];\n      var padLength = _padLength;\n      if (padArg >= 0) {\n        padLength = padArg;\n        padArg = -1;\n      } else if (padLength === \"*\") {\n        if (arg < 0) {\n          throw new Error(\"Non-negative number required\");\n        }\n        padArg = arg;\n        continue;\n      }\n      result += strParts[0];\n      result += formatReplacement(arg, flags, padLength, precision, _format2);\n      strParts.splice(0, 1);\n      matches.splice(0, 1);\n    }\n    if (matches.length === 0) {\n      result += strParts[0];\n      return cont(result);\n    } else {\n      return createPrinter(cont, strParts, matches, result, padArg);\n    }\n  };\n}\nfunction fsFormat(str) {\n  return function (cont) {\n    fsFormatRegExp.lastIndex = 0;\n    var strParts = [];\n    var matches = [];\n    var strIdx = 0;\n    var match = fsFormatRegExp.exec(str);\n    while (match) {\n      // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n      // Note: we don't use negative lookbehind because some browsers don't support it yet\n      var matchIndex = match.index + (match[1] || \"\").length;\n      strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n      matches.push(match);\n      strIdx = fsFormatRegExp.lastIndex;\n      // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n      fsFormatRegExp.lastIndex -= 1;\n      match = fsFormatRegExp.exec(str);\n    }\n    if (strParts.length === 0) {\n      return cont(str.replace(/%%/g, \"%\"));\n    } else {\n      strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n      return createPrinter(cont, strParts, matches);\n    }\n  };\n}\nfunction format(str) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n  if (_typeof(str) === \"object\" && args.length > 0) {\n    // Called with culture info\n    str = args[0];\n    args.shift();\n  }\n  return str.replace(formatRegExp, function (_, idx, padLength, format, precision, pattern) {\n    if (idx < 0 || idx >= args.length) {\n      throw new Error(\"Index must be greater or equal to zero and less than the arguments' length.\");\n    }\n    var rep = args[idx];\n    if ((0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.isNumeric)(rep)) {\n      precision = precision == null ? null : parseInt(precision, 10);\n      switch (format) {\n        case \"f\":\n        case \"F\":\n          precision = precision != null ? precision : 2;\n          rep = (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toFixed)(rep, precision);\n          break;\n        case \"g\":\n        case \"G\":\n          rep = precision != null ? (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toPrecision)(rep, precision) : (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toPrecision)(rep);\n          break;\n        case \"e\":\n        case \"E\":\n          rep = precision != null ? (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toExponential)(rep, precision) : (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toExponential)(rep);\n          break;\n        case \"p\":\n        case \"P\":\n          precision = precision != null ? precision : 2;\n          rep = (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toFixed)((0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.multiply)(rep, 100), precision) + \" %\";\n          break;\n        case \"d\":\n        case \"D\":\n          rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n          break;\n        case \"x\":\n        case \"X\":\n          rep = precision != null ? padLeft((0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(rep), precision, \"0\") : (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toHex)(rep);\n          if (format === \"X\") {\n            rep = rep.toUpperCase();\n          }\n          break;\n        default:\n          if (pattern) {\n            var sign = \"\";\n            rep = pattern.replace(/([0#,]+)(\\.[0#]+)?/, function (_, intPart, decimalPart) {\n              if (isLessThan(rep, 0)) {\n                rep = (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.multiply)(rep, -1);\n                sign = \"-\";\n              }\n              var decimalPartLength = decimalPart != null ? decimalPart.length : 0;\n              rep = (0,_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.toFixed)(rep, Math.max(decimalPartLength - 1, 0));\n              // Thousands separator\n              if (intPart.indexOf(\",\") > 0) {\n                var _rep$split = rep.split(\".\"),\n                  _rep$split2 = _slicedToArray(_rep$split, 2),\n                  _intPart = _rep$split2[0],\n                  _decimalPart = _rep$split2[1];\n                var i = _intPart.length % 3;\n                var thousandGroups = Math.floor(_intPart.length / 3);\n                var thousands = i > 0 ? _intPart.substr(0, i) + (thousandGroups > 0 ? \",\" : \"\") : \"\";\n                for (var j = 0; j < thousandGroups; j++) {\n                  thousands += _intPart.substr(i + j * 3, 3) + (j < thousandGroups - 1 ? \",\" : \"\");\n                }\n                rep = _decimalPart ? thousands + \".\" + _decimalPart : thousands;\n              }\n              // In .NET you can mix 0/# placeholders but for simplicity we only check the left most character\n              intPart = intPart.replace(/,/g, \"\");\n              var intPartLength = intPart.length > 0 && intPart[0] === \"0\" ? intPart.length : 0;\n              return padLeft(rep, intPartLength - sign.length + decimalPartLength, \"0\");\n            });\n            rep = sign + rep;\n          }\n      }\n    } else if (rep instanceof Date) {\n      rep = (0,_Date_js__WEBPACK_IMPORTED_MODULE_1__.toString)(rep, pattern || format);\n    } else {\n      rep = (0,_Types_js__WEBPACK_IMPORTED_MODULE_2__.toString)(rep);\n    }\n    padLength = parseInt((padLength || \" \").substring(1), 10);\n    if (!isNaN(padLength)) {\n      rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n    }\n    return rep;\n  });\n}\nfunction endsWith(str, search) {\n  var idx = str.lastIndexOf(search);\n  return idx >= 0 && idx === str.length - search.length;\n}\nfunction initialize(n, f) {\n  if (n < 0) {\n    throw new Error(\"String length must be non-negative\");\n  }\n  var xs = new Array(n);\n  for (var i = 0; i < n; i++) {\n    xs[i] = f(i);\n  }\n  return xs.join(\"\");\n}\nfunction insert(str, startIndex, value) {\n  if (startIndex < 0 || startIndex > str.length) {\n    throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n  }\n  return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nfunction isNullOrEmpty(str) {\n  return typeof str !== \"string\" || str.length === 0;\n}\nfunction isNullOrWhiteSpace(str) {\n  return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nfunction concat() {\n  for (var _len4 = arguments.length, xs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    xs[_key4] = arguments[_key4];\n  }\n  return xs.map(function (x) {\n    return String(x);\n  }).join(\"\");\n}\nfunction join(delimiter, xs) {\n  if (Array.isArray(xs)) {\n    return xs.join(delimiter);\n  } else {\n    return Array.from(xs).join(delimiter);\n  }\n}\nfunction joinWithIndices(delimiter, xs, startIndex, count) {\n  var endIndexPlusOne = startIndex + count;\n  if (endIndexPlusOne > xs.length) {\n    throw new Error(\"Index and count must refer to a location within the buffer.\");\n  }\n  return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n  throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nfunction toBase64String(inArray) {\n  var str = \"\";\n  for (var i = 0; i < inArray.length; i++) {\n    str += String.fromCharCode(inArray[i]);\n  }\n  return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nfunction fromBase64String(b64Encoded) {\n  var binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n  var bytes = new Uint8Array(binary.length);\n  for (var i = 0; i < binary.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n  return bytes;\n}\nfunction padLeft(str, len, ch, isRight) {\n  ch = ch || \" \";\n  len = len - str.length;\n  for (var i = 0; i < len; i++) {\n    str = isRight ? str + ch : ch + str;\n  }\n  return str;\n}\nfunction padRight(str, len, ch) {\n  return padLeft(str, len, ch, true);\n}\nfunction remove(str, startIndex, count) {\n  if (startIndex >= str.length) {\n    throw new Error(\"startIndex must be less than length of string\");\n  }\n  if (typeof count === \"number\" && startIndex + count > str.length) {\n    throw new Error(\"Index and count must refer to a location within the string.\");\n  }\n  return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nfunction replace(str, search, replace) {\n  return str.replace(new RegExp((0,_RegExp_js__WEBPACK_IMPORTED_MODULE_3__.escape)(search), \"g\"), replace);\n}\nfunction replicate(n, x) {\n  return initialize(n, function () {\n    return x;\n  });\n}\nfunction getCharAtIndex(input, index) {\n  if (index < 0 || index >= input.length) {\n    throw new Error(\"Index was outside the bounds of the array.\");\n  }\n  return input[index];\n}\nfunction split(str, splitters, count, options) {\n  count = typeof count === \"number\" ? count : undefined;\n  options = typeof options === \"number\" ? options : 0;\n  if (count && count < 0) {\n    throw new Error(\"Count cannot be less than zero\");\n  }\n  if (count === 0) {\n    return [];\n  }\n  var removeEmpty = (options & 1) === 1;\n  var trim = (options & 2) === 2;\n  splitters = splitters || [];\n  splitters = splitters.filter(function (x) {\n    return x;\n  }).map(_RegExp_js__WEBPACK_IMPORTED_MODULE_3__.escape);\n  splitters = splitters.length > 0 ? splitters : [\"\\\\s\"];\n  var splits = [];\n  var reg = new RegExp(splitters.join(\"|\"), \"g\");\n  var findSplits = true;\n  var i = 0;\n  do {\n    var match = reg.exec(str);\n    if (match === null) {\n      var candidate = trim ? str.substring(i).trim() : str.substring(i);\n      if (!removeEmpty || candidate.length > 0) {\n        splits.push(candidate);\n      }\n      findSplits = false;\n    } else {\n      var _candidate = trim ? str.substring(i, match.index).trim() : str.substring(i, match.index);\n      if (!removeEmpty || _candidate.length > 0) {\n        if (count != null && splits.length + 1 === count) {\n          splits.push(trim ? str.substring(i).trim() : str.substring(i));\n          findSplits = false;\n        } else {\n          splits.push(_candidate);\n        }\n      }\n      i = reg.lastIndex;\n    }\n  } while (findSplits);\n  return splits;\n}\nfunction trim(str) {\n  for (var _len5 = arguments.length, chars = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    chars[_key5 - 1] = arguments[_key5];\n  }\n  if (chars.length === 0) {\n    return str.trim();\n  }\n  var pattern = \"[\" + (0,_RegExp_js__WEBPACK_IMPORTED_MODULE_3__.escape)(chars.join(\"\")) + \"]+\";\n  return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nfunction trimStart(str) {\n  for (var _len6 = arguments.length, chars = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n    chars[_key6 - 1] = arguments[_key6];\n  }\n  return chars.length === 0 ? str.trimStart() : str.replace(new RegExp(\"^[\" + (0,_RegExp_js__WEBPACK_IMPORTED_MODULE_3__.escape)(chars.join(\"\")) + \"]+\"), \"\");\n}\nfunction trimEnd(str) {\n  for (var _len7 = arguments.length, chars = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n    chars[_key7 - 1] = arguments[_key7];\n  }\n  return chars.length === 0 ? str.trimEnd() : str.replace(new RegExp(\"[\" + (0,_RegExp_js__WEBPACK_IMPORTED_MODULE_3__.escape)(chars.join(\"\")) + \"]+$\"), \"\");\n}\nfunction filter(pred, x) {\n  return x.split(\"\").filter(function (c) {\n    return pred(c);\n  }).join(\"\");\n}\nfunction substring(str, startIndex, length) {\n  if (startIndex + (length || 0) > str.length) {\n    throw new Error(\"Invalid startIndex and/or length\");\n  }\n  return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\nfunction fmt(strs) {\n  for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    args[_key8 - 1] = arguments[_key8];\n  }\n  return {\n    strs: strs,\n    args: args\n  };\n}\nfunction fmtWith(fmts) {\n  return function (strs) {\n    for (var _len9 = arguments.length, args = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {\n      args[_key9 - 1] = arguments[_key9];\n    }\n    return {\n      strs: strs,\n      args: args,\n      fmts: fmts\n    };\n  };\n}\nfunction getFormat(s) {\n  return s.fmts ? s.strs.reduce(function (acc, newPart, index) {\n    return acc + \"{\".concat(String(index - 1) + s.fmts[index - 1], \"}\") + newPart;\n  }) : s.strs.reduce(function (acc, newPart, index) {\n    return acc + \"{\".concat(index - 1, \"}\") + newPart;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/System.Text.js":
/*!****************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/System.Text.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StringBuilder\": () => (/* binding */ StringBuilder),\n/* harmony export */   \"StringBuilder$reflection\": () => (/* binding */ StringBuilder$reflection),\n/* harmony export */   \"StringBuilder_$ctor_Z18115A39\": () => (/* binding */ StringBuilder_$ctor_Z18115A39),\n/* harmony export */   \"StringBuilder_$ctor_Z524259A4\": () => (/* binding */ StringBuilder_$ctor_Z524259A4),\n/* harmony export */   \"StringBuilder_$ctor_Z721C83C5\": () => (/* binding */ StringBuilder_$ctor_Z721C83C5),\n/* harmony export */   \"StringBuilder_$ctor\": () => (/* binding */ StringBuilder_$ctor),\n/* harmony export */   \"StringBuilder__Append_Z721C83C5\": () => (/* binding */ StringBuilder__Append_Z721C83C5),\n/* harmony export */   \"StringBuilder__Append_244C7CD6\": () => (/* binding */ StringBuilder__Append_244C7CD6),\n/* harmony export */   \"StringBuilder__Append_Z524259A4\": () => (/* binding */ StringBuilder__Append_Z524259A4),\n/* harmony export */   \"StringBuilder__Append_5E38073B\": () => (/* binding */ StringBuilder__Append_5E38073B),\n/* harmony export */   \"StringBuilder__Append_Z1FBCCD16\": () => (/* binding */ StringBuilder__Append_Z1FBCCD16),\n/* harmony export */   \"StringBuilder__Append_4E60E31B\": () => (/* binding */ StringBuilder__Append_4E60E31B),\n/* harmony export */   \"StringBuilder__Append_695F1130\": () => (/* binding */ StringBuilder__Append_695F1130),\n/* harmony export */   \"StringBuilder__Append_43A65C09\": () => (/* binding */ StringBuilder__Append_43A65C09),\n/* harmony export */   \"StringBuilder__AppendFormat_433E080\": () => (/* binding */ StringBuilder__AppendFormat_433E080),\n/* harmony export */   \"StringBuilder__AppendLine\": () => (/* binding */ StringBuilder__AppendLine),\n/* harmony export */   \"StringBuilder__AppendLine_Z721C83C5\": () => (/* binding */ StringBuilder__AppendLine_Z721C83C5),\n/* harmony export */   \"StringBuilder__get_Length\": () => (/* binding */ StringBuilder__get_Length),\n/* harmony export */   \"StringBuilder__ToString_Z37302880\": () => (/* binding */ StringBuilder__ToString_Z37302880),\n/* harmony export */   \"StringBuilder__Clear\": () => (/* binding */ StringBuilder__Clear)\n/* harmony export */ });\n/* harmony import */ var _String_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./String.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/String.js\");\n/* harmony import */ var _Reflection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reflection.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Reflection.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Types.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\nvar StringBuilder = /*#__PURE__*/function () {\n  function StringBuilder(value, capacity) {\n    _classCallCheck(this, StringBuilder);\n    this.buf = [];\n    if (!(0,_String_js__WEBPACK_IMPORTED_MODULE_0__.isNullOrEmpty)(value)) {\n      void this.buf.push(value);\n    }\n  }\n  _createClass(StringBuilder, [{\n    key: \"toString\",\n    value: function toString() {\n      var __ = this;\n      return (0,_String_js__WEBPACK_IMPORTED_MODULE_0__.join)(\"\", __.buf);\n    }\n  }]);\n  return StringBuilder;\n}();\nfunction StringBuilder$reflection() {\n  return (0,_Reflection_js__WEBPACK_IMPORTED_MODULE_1__.class_type)(\"System.Text.StringBuilder\", void 0, StringBuilder);\n}\nfunction StringBuilder_$ctor_Z18115A39(value, capacity) {\n  return new StringBuilder(value, capacity);\n}\nfunction StringBuilder_$ctor_Z524259A4(capacity) {\n  return StringBuilder_$ctor_Z18115A39(\"\", capacity);\n}\nfunction StringBuilder_$ctor_Z721C83C5(value) {\n  return StringBuilder_$ctor_Z18115A39(value, 16);\n}\nfunction StringBuilder_$ctor() {\n  return StringBuilder_$ctor_Z18115A39(\"\", 16);\n}\nfunction StringBuilder__Append_Z721C83C5(x, s) {\n  void x.buf.push(s);\n  return x;\n}\nfunction StringBuilder__Append_244C7CD6(x, c) {\n  void x.buf.push(c);\n  return x;\n}\nfunction StringBuilder__Append_Z524259A4(x, o) {\n  void x.buf.push((0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.int32ToString)(o));\n  return x;\n}\nfunction StringBuilder__Append_5E38073B(x, o) {\n  void x.buf.push(o.toString());\n  return x;\n}\nfunction StringBuilder__Append_Z1FBCCD16(x, o) {\n  void x.buf.push((0,_Types_js__WEBPACK_IMPORTED_MODULE_3__.toString)(o));\n  return x;\n}\nfunction StringBuilder__Append_4E60E31B(x, o) {\n  void x.buf.push((0,_Types_js__WEBPACK_IMPORTED_MODULE_3__.toString)(o));\n  return x;\n}\nfunction StringBuilder__Append_695F1130(x, cs) {\n  void x.buf.push(cs.join(''));\n  return x;\n}\nfunction StringBuilder__Append_43A65C09(x, s) {\n  void x.buf.push((0,_Types_js__WEBPACK_IMPORTED_MODULE_3__.toString)(s));\n  return x;\n}\nfunction StringBuilder__AppendFormat_433E080(x, fmt, o) {\n  void x.buf.push((0,_String_js__WEBPACK_IMPORTED_MODULE_0__.format)(fmt, o));\n  return x;\n}\nfunction StringBuilder__AppendLine(x) {\n  void x.buf.push(\"\\n\");\n  return x;\n}\nfunction StringBuilder__AppendLine_Z721C83C5(x, s) {\n  void x.buf.push(s);\n  void x.buf.push(\"\\n\");\n  return x;\n}\nfunction StringBuilder__get_Length(x) {\n  var len = 0;\n  for (var i = x.buf.length - 1; i >= 0; i--) {\n    len = len + x.buf[i].length | 0;\n  }\n  return len | 0;\n}\nfunction StringBuilder__ToString_Z37302880(x, firstIndex, length) {\n  return (0,_String_js__WEBPACK_IMPORTED_MODULE_0__.substring)((0,_Types_js__WEBPACK_IMPORTED_MODULE_3__.toString)(x), firstIndex, length);\n}\nfunction StringBuilder__Clear(x) {\n  (0,_Util_js__WEBPACK_IMPORTED_MODULE_2__.clear)(x.buf);\n  return x;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/System.Text.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/TimeSpan.js":
/*!*************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/TimeSpan.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"fromTicks\": () => (/* binding */ fromTicks),\n/* harmony export */   \"fromDays\": () => (/* binding */ fromDays),\n/* harmony export */   \"fromHours\": () => (/* binding */ fromHours),\n/* harmony export */   \"fromMinutes\": () => (/* binding */ fromMinutes),\n/* harmony export */   \"fromSeconds\": () => (/* binding */ fromSeconds),\n/* harmony export */   \"days\": () => (/* binding */ days),\n/* harmony export */   \"hours\": () => (/* binding */ hours),\n/* harmony export */   \"minutes\": () => (/* binding */ minutes),\n/* harmony export */   \"seconds\": () => (/* binding */ seconds),\n/* harmony export */   \"milliseconds\": () => (/* binding */ milliseconds),\n/* harmony export */   \"ticks\": () => (/* binding */ ticks),\n/* harmony export */   \"totalDays\": () => (/* binding */ totalDays),\n/* harmony export */   \"totalHours\": () => (/* binding */ totalHours),\n/* harmony export */   \"totalMinutes\": () => (/* binding */ totalMinutes),\n/* harmony export */   \"totalSeconds\": () => (/* binding */ totalSeconds),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"op_Addition\": () => (/* binding */ op_Addition),\n/* harmony export */   \"op_Subtraction\": () => (/* binding */ op_Subtraction),\n/* harmony export */   \"op_Multiply\": () => (/* binding */ op_Multiply),\n/* harmony export */   \"op_Division\": () => (/* binding */ op_Division),\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"compareTo\": () => (/* binding */ compareTo),\n/* harmony export */   \"duration\": () => (/* binding */ duration),\n/* harmony export */   \"toString\": () => (/* binding */ toString),\n/* harmony export */   \"parse\": () => (/* binding */ parse),\n/* harmony export */   \"tryParse\": () => (/* binding */ tryParse)\n/* harmony export */ });\n/* harmony import */ var _Long_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Long.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Long.js\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n// tslint:disable:max-line-length\n\n\n// TimeSpan in runtime just becomes a number representing milliseconds\n/**\n * Calls:\n * - `Math.ceil` if the `value` is **negative**\n * - `Math.floor` if the `value` is **positive**\n * @param value Value to round\n */\nfunction signedRound(value) {\n  return value < 0 ? Math.ceil(value) : Math.floor(value);\n}\nfunction create() {\n  var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var h = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var m = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var ms = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  switch (arguments.length) {\n    case 1:\n      // ticks\n      return fromTicks(arguments[0]);\n    case 3:\n      // h,m,s\n      d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;\n      break;\n    default:\n      // d,h,m,s,ms\n      break;\n  }\n  return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\nfunction fromTicks(ticks) {\n  return (0,_Long_js__WEBPACK_IMPORTED_MODULE_0__.toNumber)((0,_Long_js__WEBPACK_IMPORTED_MODULE_0__.op_Division)(ticks, 10000));\n}\nfunction fromDays(d) {\n  return create(d, 0, 0, 0);\n}\nfunction fromHours(h) {\n  return create(h, 0, 0);\n}\nfunction fromMinutes(m) {\n  return create(0, m, 0);\n}\nfunction fromSeconds(s) {\n  return create(0, 0, s);\n}\nfunction days(ts) {\n  return signedRound(ts / 86400000);\n}\nfunction hours(ts) {\n  return signedRound(ts % 86400000 / 3600000);\n}\nfunction minutes(ts) {\n  return signedRound(ts % 3600000 / 60000);\n}\nfunction seconds(ts) {\n  return signedRound(ts % 60000 / 1000);\n}\nfunction milliseconds(ts) {\n  return signedRound(ts % 1000);\n}\nfunction ticks(ts) {\n  return (0,_Long_js__WEBPACK_IMPORTED_MODULE_0__.op_Multiply)((0,_Long_js__WEBPACK_IMPORTED_MODULE_0__.fromNumber)(ts), 10000);\n}\nfunction totalDays(ts) {\n  return ts / 86400000;\n}\nfunction totalHours(ts) {\n  return ts / 3600000;\n}\nfunction totalMinutes(ts) {\n  return ts / 60000;\n}\nfunction totalSeconds(ts) {\n  return ts / 1000;\n}\nfunction negate(ts) {\n  return ts * -1;\n}\nfunction add(ts1, ts2) {\n  return ts1 + ts2;\n}\nfunction subtract(ts1, ts2) {\n  return ts1 - ts2;\n}\nfunction multiply(ts, factor) {\n  return ts * factor;\n}\nfunction divide(ts, b) {\n  return ts / b;\n}\nvar op_Addition = add;\nvar op_Subtraction = subtract;\nvar op_Multiply = multiply;\nvar op_Division = divide;\nvar compare = _Util_js__WEBPACK_IMPORTED_MODULE_1__.comparePrimitives;\nvar compareTo = _Util_js__WEBPACK_IMPORTED_MODULE_1__.comparePrimitives;\nfunction duration(x) {\n  return Math.abs(x);\n}\nfunction toString(ts) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"c\";\n  var _provider = arguments.length > 2 ? arguments[2] : undefined;\n  if ([\"c\", \"g\", \"G\"].indexOf(format) === -1) {\n    throw new Error(\"Custom formats are not supported\");\n  }\n  var d = Math.abs(days(ts));\n  var h = Math.abs(hours(ts));\n  var m = Math.abs(minutes(ts));\n  var s = Math.abs(seconds(ts));\n  var ms = Math.abs(milliseconds(ts));\n  var sign = ts < 0 ? \"-\" : \"\";\n  return \"\".concat(sign).concat(d === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"c\" ? d + \".\" : d + \":\").concat(format === \"g\" ? h : (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.padWithZeros)(h, 2), \":\").concat((0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.padWithZeros)(m, 2), \":\").concat((0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.padWithZeros)(s, 2)).concat(ms === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"g\" ? \".\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.padWithZeros)(ms, 3) : \".\" + (0,_Util_js__WEBPACK_IMPORTED_MODULE_1__.padLeftAndRightWithZeros)(ms, 3, 7));\n}\nfunction parse(str) {\n  var firstDot = str.search(\"\\\\.\");\n  var firstColon = str.search(\"\\\\:\");\n  if (firstDot === -1 && firstColon === -1) {\n    // There is only a day ex: 4\n    var d = parseInt(str, 0);\n    if (isNaN(d)) {\n      throw new Error(\"String '\".concat(str, \"' was not recognized as a valid TimeSpan.\"));\n    } else {\n      return create(d, 0, 0, 0, 0);\n    }\n  }\n  if (firstColon > 0) {\n    // process time part\n    // WIP: (-?)(((\\d+)\\.)?([0-9]|0[0-9]|1[0-9]|2[0-3]):(\\d+)(:\\d+(\\.\\d{1,7})?)?|\\d+(?:(?!\\.)))\n    var r = /^(-?)((\\d+)\\.)?(?:0*)([0-9]|0[0-9]|1[0-9]|2[0-3]):(?:0*)([0-5][0-9]|[0-9])(:(?:0*)([0-5][0-9]|[0-9]))?\\.?(\\d+)?$/.exec(str);\n    if (r != null && r[4] != null && r[5] != null) {\n      var _d = 0;\n      var ms = 0;\n      var s = 0;\n      var sign = r[1] != null && r[1] === \"-\" ? -1 : 1;\n      var h = +r[4];\n      var m = +r[5];\n      if (r[3] != null) {\n        _d = +r[3];\n      }\n      if (r[7] != null) {\n        s = +r[7];\n      }\n      if (r[8] != null) {\n        // Depending on the number of decimals passed, we need to adapt the numbers\n        switch (r[8].length) {\n          case 1:\n            ms = +r[8] * 100;\n            break;\n          case 2:\n            ms = +r[8] * 10;\n            break;\n          case 3:\n            ms = +r[8];\n            break;\n          case 4:\n            ms = +r[8] / 10;\n            break;\n          case 5:\n            ms = +r[8] / 100;\n            break;\n          case 6:\n            ms = +r[8] / 1000;\n            break;\n          case 7:\n            ms = +r[8] / 10000;\n            break;\n          default:\n            throw new Error(\"String '\".concat(str, \"' was not recognized as a valid TimeSpan.\"));\n        }\n      }\n      return sign * create(_d, h, m, s, ms);\n    }\n  }\n  throw new Error(\"String '\".concat(str, \"' was not recognized as a valid TimeSpan.\"));\n}\nfunction tryParse(v, defValue) {\n  try {\n    defValue.contents = parse(v);\n    return true;\n  } catch (_a) {\n    return false;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/TimeSpan.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js":
/*!**********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"seqToString\": () => (/* binding */ seqToString),\n/* harmony export */   \"toString\": () => (/* binding */ toString),\n/* harmony export */   \"unionToString\": () => (/* binding */ unionToString),\n/* harmony export */   \"Union\": () => (/* binding */ Union),\n/* harmony export */   \"Record\": () => (/* binding */ Record),\n/* harmony export */   \"FSharpRef\": () => (/* binding */ FSharpRef),\n/* harmony export */   \"Exception\": () => (/* binding */ Exception),\n/* harmony export */   \"isException\": () => (/* binding */ isException),\n/* harmony export */   \"FSharpException\": () => (/* binding */ FSharpException),\n/* harmony export */   \"MatchFailureException\": () => (/* binding */ MatchFailureException),\n/* harmony export */   \"Attribute\": () => (/* binding */ Attribute)\n/* harmony export */ });\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\nfunction seqToString(self) {\n  var count = 0;\n  var str = \"[\";\n  var _iterator = _createForOfIteratorHelper(self),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var x = _step.value;\n      if (count === 0) {\n        str += toString(x);\n      } else if (count === 100) {\n        str += \"; ...\";\n        break;\n      } else {\n        str += \"; \" + toString(x);\n      }\n      count++;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return str + \"]\";\n}\nfunction toString(x) {\n  var callStack = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (x != null && _typeof(x) === \"object\") {\n    if (typeof x.toString === \"function\") {\n      return x.toString();\n    } else if (Symbol.iterator in x) {\n      return seqToString(x);\n    } else {\n      // TODO: Date?\n      var cons = Object.getPrototypeOf(x).constructor;\n      return cons === Object && callStack < 10\n      // Same format as recordToString\n      ? \"{ \" + Object.entries(x).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          k = _ref2[0],\n          v = _ref2[1];\n        return k + \" = \" + toString(v, callStack + 1);\n      }).join(\"\\n  \") + \" }\" : cons.name;\n    }\n  }\n  return String(x);\n}\nfunction unionToString(name, fields) {\n  if (fields.length === 0) {\n    return name;\n  } else {\n    var fieldStr = \"\";\n    var withParens = true;\n    if (fields.length === 1) {\n      fieldStr = toString(fields[0]);\n      withParens = fieldStr.indexOf(\" \") >= 0;\n    } else {\n      fieldStr = fields.map(function (x) {\n        return toString(x);\n      }).join(\", \");\n    }\n    return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n  }\n}\nvar Union = /*#__PURE__*/function () {\n  function Union() {\n    _classCallCheck(this, Union);\n  }\n  _createClass(Union, [{\n    key: \"name\",\n    get: function get() {\n      return this.cases()[this.tag];\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return unionToString(this.name, this.fields);\n    }\n  }, {\n    key: \"GetHashCode\",\n    value: function GetHashCode() {\n      var hashes = this.fields.map(function (x) {\n        return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.structuralHash)(x);\n      });\n      hashes.splice(0, 0, (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.numberHash)(this.tag));\n      return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.combineHashCodes)(hashes);\n    }\n  }, {\n    key: \"Equals\",\n    value: function Equals(other) {\n      if (this === other) {\n        return true;\n      } else if (!(0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.sameConstructor)(this, other)) {\n        return false;\n      } else if (this.tag === other.tag) {\n        return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.equalArrays)(this.fields, other.fields);\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"CompareTo\",\n    value: function CompareTo(other) {\n      if (this === other) {\n        return 0;\n      } else if (!(0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.sameConstructor)(this, other)) {\n        return -1;\n      } else if (this.tag === other.tag) {\n        return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.compareArrays)(this.fields, other.fields);\n      } else {\n        return this.tag < other.tag ? -1 : 1;\n      }\n    }\n  }]);\n  return Union;\n}();\nfunction recordToJSON(self) {\n  var o = {};\n  var keys = Object.keys(self);\n  for (var i = 0; i < keys.length; i++) {\n    o[keys[i]] = self[keys[i]];\n  }\n  return o;\n}\nfunction recordToString(self) {\n  return \"{ \" + Object.entries(self).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      k = _ref4[0],\n      v = _ref4[1];\n    return k + \" = \" + toString(v);\n  }).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n  var hashes = Object.values(self).map(function (v) {\n    return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.structuralHash)(v);\n  });\n  return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.combineHashCodes)(hashes);\n}\nfunction recordEquals(self, other) {\n  if (self === other) {\n    return true;\n  } else if (!(0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.sameConstructor)(self, other)) {\n    return false;\n  } else {\n    var thisNames = Object.keys(self);\n    for (var i = 0; i < thisNames.length; i++) {\n      if (!(0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.equals)(self[thisNames[i]], other[thisNames[i]])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\nfunction recordCompareTo(self, other) {\n  if (self === other) {\n    return 0;\n  } else if (!(0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.sameConstructor)(self, other)) {\n    return -1;\n  } else {\n    var thisNames = Object.keys(self);\n    for (var i = 0; i < thisNames.length; i++) {\n      var result = (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.compare)(self[thisNames[i]], other[thisNames[i]]);\n      if (result !== 0) {\n        return result;\n      }\n    }\n    return 0;\n  }\n}\nvar Record = /*#__PURE__*/function () {\n  function Record() {\n    _classCallCheck(this, Record);\n  }\n  _createClass(Record, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return recordToJSON(this);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return recordToString(this);\n    }\n  }, {\n    key: \"GetHashCode\",\n    value: function GetHashCode() {\n      return recordGetHashCode(this);\n    }\n  }, {\n    key: \"Equals\",\n    value: function Equals(other) {\n      return recordEquals(this, other);\n    }\n  }, {\n    key: \"CompareTo\",\n    value: function CompareTo(other) {\n      return recordCompareTo(this, other);\n    }\n  }]);\n  return Record;\n}();\nvar FSharpRef = /*#__PURE__*/function () {\n  function FSharpRef(contentsOrGetter, setter) {\n    _classCallCheck(this, FSharpRef);\n    if (typeof setter === \"function\") {\n      this.getter = contentsOrGetter;\n      this.setter = setter;\n    } else {\n      this.getter = function () {\n        return contentsOrGetter;\n      };\n      this.setter = function (v) {\n        contentsOrGetter = v;\n      };\n    }\n  }\n  _createClass(FSharpRef, [{\n    key: \"contents\",\n    get: function get() {\n      return this.getter();\n    },\n    set: function set(v) {\n      this.setter(v);\n    }\n  }]);\n  return FSharpRef;\n}();\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nvar Exception = /*#__PURE__*/_createClass(function Exception(message) {\n  _classCallCheck(this, Exception);\n  this.message = message;\n});\nfunction isException(x) {\n  return x instanceof Exception || x instanceof Error;\n}\nvar FSharpException = /*#__PURE__*/function (_Exception) {\n  _inherits(FSharpException, _Exception);\n  var _super = _createSuper(FSharpException);\n  function FSharpException() {\n    _classCallCheck(this, FSharpException);\n    return _super.apply(this, arguments);\n  }\n  _createClass(FSharpException, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return recordToJSON(this);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return recordToString(this);\n    }\n  }, {\n    key: \"GetHashCode\",\n    value: function GetHashCode() {\n      return recordGetHashCode(this);\n    }\n  }, {\n    key: \"Equals\",\n    value: function Equals(other) {\n      return recordEquals(this, other);\n    }\n  }, {\n    key: \"CompareTo\",\n    value: function CompareTo(other) {\n      return recordCompareTo(this, other);\n    }\n  }]);\n  return FSharpException;\n}(Exception);\nvar MatchFailureException = /*#__PURE__*/function (_FSharpException) {\n  _inherits(MatchFailureException, _FSharpException);\n  var _super2 = _createSuper(MatchFailureException);\n  function MatchFailureException(arg1, arg2, arg3) {\n    var _this;\n    _classCallCheck(this, MatchFailureException);\n    _this = _super2.call(this);\n    _this.arg1 = arg1;\n    _this.arg2 = arg2 | 0;\n    _this.arg3 = arg3 | 0;\n    _this.message = \"The match cases were incomplete\";\n    return _this;\n  }\n  return _createClass(MatchFailureException);\n}(FSharpException);\nvar Attribute = /*#__PURE__*/_createClass(function Attribute() {\n  _classCallCheck(this, Attribute);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Types.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js":
/*!*********************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isIterable\": () => (/* binding */ isIterable),\n/* harmony export */   \"isArrayLike\": () => (/* binding */ isArrayLike),\n/* harmony export */   \"isDisposable\": () => (/* binding */ isDisposable),\n/* harmony export */   \"disposeSafe\": () => (/* binding */ disposeSafe),\n/* harmony export */   \"sameConstructor\": () => (/* binding */ sameConstructor),\n/* harmony export */   \"Enumerator\": () => (/* binding */ Enumerator),\n/* harmony export */   \"getEnumerator\": () => (/* binding */ getEnumerator),\n/* harmony export */   \"toIterator\": () => (/* binding */ toIterator),\n/* harmony export */   \"Comparer\": () => (/* binding */ Comparer),\n/* harmony export */   \"comparerFromEqualityComparer\": () => (/* binding */ comparerFromEqualityComparer),\n/* harmony export */   \"assertEqual\": () => (/* binding */ assertEqual),\n/* harmony export */   \"assertNotEqual\": () => (/* binding */ assertNotEqual),\n/* harmony export */   \"Lazy\": () => (/* binding */ Lazy),\n/* harmony export */   \"lazyFromValue\": () => (/* binding */ lazyFromValue),\n/* harmony export */   \"padWithZeros\": () => (/* binding */ padWithZeros),\n/* harmony export */   \"padLeftAndRightWithZeros\": () => (/* binding */ padLeftAndRightWithZeros),\n/* harmony export */   \"dateOffset\": () => (/* binding */ dateOffset),\n/* harmony export */   \"int16ToString\": () => (/* binding */ int16ToString),\n/* harmony export */   \"int32ToString\": () => (/* binding */ int32ToString),\n/* harmony export */   \"ObjectRef\": () => (/* binding */ ObjectRef),\n/* harmony export */   \"stringHash\": () => (/* binding */ stringHash),\n/* harmony export */   \"numberHash\": () => (/* binding */ numberHash),\n/* harmony export */   \"combineHashCodes\": () => (/* binding */ combineHashCodes),\n/* harmony export */   \"physicalHash\": () => (/* binding */ physicalHash),\n/* harmony export */   \"identityHash\": () => (/* binding */ identityHash),\n/* harmony export */   \"dateHash\": () => (/* binding */ dateHash),\n/* harmony export */   \"arrayHash\": () => (/* binding */ arrayHash),\n/* harmony export */   \"structuralHash\": () => (/* binding */ structuralHash),\n/* harmony export */   \"fastStructuralHash\": () => (/* binding */ fastStructuralHash),\n/* harmony export */   \"safeHash\": () => (/* binding */ safeHash),\n/* harmony export */   \"equalArraysWith\": () => (/* binding */ equalArraysWith),\n/* harmony export */   \"equalArrays\": () => (/* binding */ equalArrays),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"compareDates\": () => (/* binding */ compareDates),\n/* harmony export */   \"comparePrimitives\": () => (/* binding */ comparePrimitives),\n/* harmony export */   \"compareArraysWith\": () => (/* binding */ compareArraysWith),\n/* harmony export */   \"compareArrays\": () => (/* binding */ compareArrays),\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"clamp\": () => (/* binding */ clamp),\n/* harmony export */   \"createAtom\": () => (/* binding */ createAtom),\n/* harmony export */   \"createObj\": () => (/* binding */ createObj),\n/* harmony export */   \"jsOptions\": () => (/* binding */ jsOptions),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"sign\": () => (/* binding */ sign),\n/* harmony export */   \"unescapeDataString\": () => (/* binding */ unescapeDataString),\n/* harmony export */   \"escapeDataString\": () => (/* binding */ escapeDataString),\n/* harmony export */   \"escapeUriString\": () => (/* binding */ escapeUriString),\n/* harmony export */   \"count\": () => (/* binding */ count),\n/* harmony export */   \"clear\": () => (/* binding */ clear),\n/* harmony export */   \"uncurry\": () => (/* binding */ uncurry),\n/* harmony export */   \"curry\": () => (/* binding */ curry),\n/* harmony export */   \"checkArity\": () => (/* binding */ checkArity),\n/* harmony export */   \"partialApply\": () => (/* binding */ partialApply),\n/* harmony export */   \"mapCurriedArgs\": () => (/* binding */ mapCurriedArgs)\n/* harmony export */ });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n// tslint:disable:ban-types\nfunction isIterable(x) {\n  return x != null && _typeof(x) === \"object\" && Symbol.iterator in x;\n}\nfunction isArrayLike(x) {\n  return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n  return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n  return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n  return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n  return typeof x.GetHashCode === \"function\";\n}\nfunction isDisposable(x) {\n  return x != null && typeof x.Dispose === \"function\";\n}\nfunction disposeSafe(x) {\n  if (isDisposable(x)) {\n    x.Dispose();\n  }\n}\nfunction sameConstructor(x, y) {\n  return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nvar Enumerator = /*#__PURE__*/function () {\n  function Enumerator(iter) {\n    _classCallCheck(this, Enumerator);\n    this.iter = iter;\n  }\n  _createClass(Enumerator, [{\n    key: \"System.Collections.Generic.IEnumerator`1.get_Current\",\n    value: function SystemCollectionsGenericIEnumerator1Get_Current() {\n      return this.current;\n    }\n  }, {\n    key: \"System.Collections.IEnumerator.get_Current\",\n    value: function SystemCollectionsIEnumeratorGet_Current() {\n      return this.current;\n    }\n  }, {\n    key: \"System.Collections.IEnumerator.MoveNext\",\n    value: function SystemCollectionsIEnumeratorMoveNext() {\n      var cur = this.iter.next();\n      this.current = cur.value;\n      return !cur.done;\n    }\n  }, {\n    key: \"System.Collections.IEnumerator.Reset\",\n    value: function SystemCollectionsIEnumeratorReset() {\n      throw new Error(\"JS iterators cannot be reset\");\n    }\n  }, {\n    key: \"Dispose\",\n    value: function Dispose() {\n      return;\n    }\n  }]);\n  return Enumerator;\n}();\nfunction getEnumerator(o) {\n  return typeof o.GetEnumerator === \"function\" ? o.GetEnumerator() : new Enumerator(o[Symbol.iterator]());\n}\nfunction toIterator(en) {\n  var _ref;\n  return _ref = {}, _defineProperty(_ref, Symbol.iterator, function () {\n    return this;\n  }), _defineProperty(_ref, \"next\", function next() {\n    var hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n    var current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n    return {\n      done: !hasNext,\n      value: current\n    };\n  }), _ref;\n}\nvar Comparer = /*#__PURE__*/_createClass(function Comparer(f) {\n  _classCallCheck(this, Comparer);\n  this.Compare = f || compare;\n});\nfunction comparerFromEqualityComparer(comparer) {\n  // Sometimes IEqualityComparer also implements IComparer\n  if (isComparer(comparer)) {\n    return new Comparer(comparer.Compare);\n  } else {\n    return new Comparer(function (x, y) {\n      var xhash = comparer.GetHashCode(x);\n      var yhash = comparer.GetHashCode(y);\n      if (xhash === yhash) {\n        return comparer.Equals(x, y) ? 0 : -1;\n      } else {\n        return xhash < yhash ? -1 : 1;\n      }\n    });\n  }\n}\nfunction assertEqual(actual, expected, msg) {\n  if (!equals(actual, expected)) {\n    throw Object.assign(new Error(msg || \"Expected: \".concat(expected, \" - Actual: \").concat(actual)), {\n      actual: actual,\n      expected: expected\n    });\n  }\n}\nfunction assertNotEqual(actual, expected, msg) {\n  if (equals(actual, expected)) {\n    throw Object.assign(new Error(msg || \"Expected: \".concat(expected, \" - Actual: \").concat(actual)), {\n      actual: actual,\n      expected: expected\n    });\n  }\n}\nvar Lazy = /*#__PURE__*/function () {\n  function Lazy(factory) {\n    _classCallCheck(this, Lazy);\n    this.factory = factory;\n    this.isValueCreated = false;\n  }\n  _createClass(Lazy, [{\n    key: \"Value\",\n    get: function get() {\n      if (!this.isValueCreated) {\n        this.createdValue = this.factory();\n        this.isValueCreated = true;\n      }\n      return this.createdValue;\n    }\n  }, {\n    key: \"IsValueCreated\",\n    get: function get() {\n      return this.isValueCreated;\n    }\n  }]);\n  return Lazy;\n}();\nfunction lazyFromValue(v) {\n  return new Lazy(function () {\n    return v;\n  });\n}\nfunction padWithZeros(i, length) {\n  var str = i.toString(10);\n  while (str.length < length) {\n    str = \"0\" + str;\n  }\n  return str;\n}\nfunction padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n  var str = i.toString(10);\n  while (str.length < lengthLeft) {\n    str = \"0\" + str;\n  }\n  while (str.length < lengthRight) {\n    str = str + \"0\";\n  }\n  return str;\n}\nfunction dateOffset(date) {\n  var date1 = date;\n  return typeof date1.offset === \"number\" ? date1.offset : date.kind === 1 /* UTC */ ? 0 : date.getTimezoneOffset() * -60000;\n}\nfunction int16ToString(i, radix) {\n  i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n  return i.toString(radix);\n}\nfunction int32ToString(i, radix) {\n  i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n  return i.toString(radix);\n}\nvar ObjectRef = /*#__PURE__*/function () {\n  function ObjectRef() {\n    _classCallCheck(this, ObjectRef);\n  }\n  _createClass(ObjectRef, null, [{\n    key: \"id\",\n    value: function id(o) {\n      if (!ObjectRef.idMap.has(o)) {\n        ObjectRef.idMap.set(o, ++ObjectRef.count);\n      }\n      return ObjectRef.idMap.get(o);\n    }\n  }]);\n  return ObjectRef;\n}();\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nfunction stringHash(s) {\n  var i = 0;\n  var h = 5381;\n  var len = s.length;\n  while (i < len) {\n    h = h * 33 ^ s.charCodeAt(i++);\n  }\n  return h;\n}\nfunction numberHash(x) {\n  return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nfunction combineHashCodes(hashes) {\n  if (hashes.length === 0) {\n    return 0;\n  }\n  return hashes.reduce(function (h1, h2) {\n    return (h1 << 5) + h1 ^ h2;\n  });\n}\nfunction physicalHash(x) {\n  if (x == null) {\n    return 0;\n  }\n  switch (_typeof(x)) {\n    case \"boolean\":\n      return x ? 1 : 0;\n    case \"number\":\n      return numberHash(x);\n    case \"string\":\n      return stringHash(x);\n    default:\n      return numberHash(ObjectRef.id(x));\n  }\n}\nfunction identityHash(x) {\n  if (x == null) {\n    return 0;\n  } else if (isHashable(x)) {\n    return x.GetHashCode();\n  } else {\n    return physicalHash(x);\n  }\n}\nfunction dateHash(x) {\n  return x.getTime();\n}\nfunction arrayHash(x) {\n  var len = x.length;\n  var hashes = new Array(len);\n  for (var i = 0; i < len; i++) {\n    hashes[i] = structuralHash(x[i]);\n  }\n  return combineHashCodes(hashes);\n}\nfunction structuralHash(x) {\n  if (x == null) {\n    return 0;\n  }\n  switch (_typeof(x)) {\n    case \"boolean\":\n      return x ? 1 : 0;\n    case \"number\":\n      return numberHash(x);\n    case \"string\":\n      return stringHash(x);\n    default:\n      {\n        if (isHashable(x)) {\n          return x.GetHashCode();\n        } else if (isArrayLike(x)) {\n          return arrayHash(x);\n        } else if (x instanceof Date) {\n          return dateHash(x);\n        } else if (Object.getPrototypeOf(x).constructor === Object) {\n          // TODO: check call-stack to prevent cyclic objects?\n          var hashes = Object.values(x).map(function (v) {\n            return structuralHash(v);\n          });\n          return combineHashCodes(hashes);\n        } else {\n          // Classes don't implement GetHashCode by default, but must use identity hashing\n          return numberHash(ObjectRef.id(x));\n          // return stringHash(String(x));\n        }\n      }\n  }\n}\n// Intended for custom numeric types, like long or decimal\nfunction fastStructuralHash(x) {\n  return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nfunction safeHash(x) {\n  return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nfunction equalArraysWith(x, y, eq) {\n  if (x == null) {\n    return y == null;\n  }\n  if (y == null) {\n    return false;\n  }\n  if (x.length !== y.length) {\n    return false;\n  }\n  for (var i = 0; i < x.length; i++) {\n    if (!eq(x[i], y[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equalArrays(x, y) {\n  return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n  var xKeys = Object.keys(x);\n  var yKeys = Object.keys(y);\n  if (xKeys.length !== yKeys.length) {\n    return false;\n  }\n  xKeys.sort();\n  yKeys.sort();\n  for (var i = 0; i < xKeys.length; i++) {\n    if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equals(x, y) {\n  if (x === y) {\n    return true;\n  } else if (x == null) {\n    return y == null;\n  } else if (y == null) {\n    return false;\n  } else if (_typeof(x) !== \"object\") {\n    return false;\n  } else if (isEquatable(x)) {\n    return x.Equals(y);\n  } else if (isArrayLike(x)) {\n    return isArrayLike(y) && equalArrays(x, y);\n  } else if (x instanceof Date) {\n    return y instanceof Date && compareDates(x, y) === 0;\n  } else {\n    return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n  }\n}\nfunction compareDates(x, y) {\n  var xtime;\n  var ytime;\n  // DateTimeOffset and DateTime deals with equality differently.\n  if (\"offset\" in x && \"offset\" in y) {\n    xtime = x.getTime();\n    ytime = y.getTime();\n  } else {\n    xtime = x.getTime() + dateOffset(x);\n    ytime = y.getTime() + dateOffset(y);\n  }\n  return xtime === ytime ? 0 : xtime < ytime ? -1 : 1;\n}\nfunction comparePrimitives(x, y) {\n  return x === y ? 0 : x < y ? -1 : 1;\n}\nfunction compareArraysWith(x, y, comp) {\n  if (x == null) {\n    return y == null ? 0 : 1;\n  }\n  if (y == null) {\n    return -1;\n  }\n  if (x.length !== y.length) {\n    return x.length < y.length ? -1 : 1;\n  }\n  for (var i = 0, j = 0; i < x.length; i++) {\n    j = comp(x[i], y[i]);\n    if (j !== 0) {\n      return j;\n    }\n  }\n  return 0;\n}\nfunction compareArrays(x, y) {\n  return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n  var xKeys = Object.keys(x);\n  var yKeys = Object.keys(y);\n  if (xKeys.length !== yKeys.length) {\n    return xKeys.length < yKeys.length ? -1 : 1;\n  }\n  xKeys.sort();\n  yKeys.sort();\n  for (var i = 0, j = 0; i < xKeys.length; i++) {\n    var key = xKeys[i];\n    if (key !== yKeys[i]) {\n      return key < yKeys[i] ? -1 : 1;\n    } else {\n      j = compare(x[key], y[key]);\n      if (j !== 0) {\n        return j;\n      }\n    }\n  }\n  return 0;\n}\nfunction compare(x, y) {\n  if (x === y) {\n    return 0;\n  } else if (x == null) {\n    return y == null ? 0 : -1;\n  } else if (y == null) {\n    return 1;\n  } else if (_typeof(x) !== \"object\") {\n    return x < y ? -1 : 1;\n  } else if (isComparable(x)) {\n    return x.CompareTo(y);\n  } else if (isArrayLike(x)) {\n    return isArrayLike(y) ? compareArrays(x, y) : -1;\n  } else if (x instanceof Date) {\n    return y instanceof Date ? compareDates(x, y) : -1;\n  } else {\n    return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n  }\n}\nfunction min(comparer, x, y) {\n  return comparer(x, y) < 0 ? x : y;\n}\nfunction max(comparer, x, y) {\n  return comparer(x, y) > 0 ? x : y;\n}\nfunction clamp(comparer, value, min, max) {\n  return comparer(value, min) < 0 ? min : comparer(value, max) > 0 ? max : value;\n}\nfunction createAtom(value) {\n  var atom = value;\n  return function (value, isSetter) {\n    if (!isSetter) {\n      return atom;\n    } else {\n      atom = value;\n      return void 0;\n    }\n  };\n}\nfunction createObj(fields) {\n  var obj = {};\n  var _iterator = _createForOfIteratorHelper(fields),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var kv = _step.value;\n      obj[kv[0]] = kv[1];\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return obj;\n}\nfunction jsOptions(mutator) {\n  var opts = {};\n  mutator(opts);\n  return opts;\n}\nfunction round(value) {\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var m = Math.pow(10, digits);\n  var n = +(digits ? value * m : value).toFixed(8);\n  var i = Math.floor(n);\n  var f = n - i;\n  var e = 1e-8;\n  var r = f > 0.5 - e && f < 0.5 + e ? i % 2 === 0 ? i : i + 1 : Math.round(n);\n  return digits ? r / m : r;\n}\nfunction sign(x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nfunction unescapeDataString(s) {\n  // https://stackoverflow.com/a/4458580/524236\n  return decodeURIComponent(s.replace(/\\+/g, \"%20\"));\n}\nfunction escapeDataString(s) {\n  return encodeURIComponent(s).replace(/!/g, \"%21\").replace(/'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\").replace(/\\*/g, \"%2A\");\n}\nfunction escapeUriString(s) {\n  return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nfunction count(col) {\n  if (isArrayLike(col)) {\n    return col.length;\n  } else {\n    var _count = 0;\n    var _iterator2 = _createForOfIteratorHelper(col),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _ = _step2.value;\n        _count++;\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return _count;\n  }\n}\nfunction clear(col) {\n  if (isArrayLike(col)) {\n    col.splice(0);\n  } else {\n    col.clear();\n  }\n}\nvar CURRIED = Symbol(\"curried\");\nfunction uncurry(arity, f) {\n  // f may be a function option with None value\n  if (f == null || f.length > 1) {\n    return f;\n  }\n  var uncurried = function uncurried() {\n    var res = f;\n    for (var i = 0; i < arity; i++) {\n      res = res(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    }\n    return res;\n  };\n  uncurried[CURRIED] = f;\n  return uncurried;\n}\nfunction _curry(args, arity, f) {\n  return function (arg) {\n    return arity === 1 ? f.apply(void 0, _toConsumableArray(args.concat([arg])))\n    // Note it's important to generate a new args array every time\n    // because a partially applied function can be run multiple times\n    : _curry(args.concat([arg]), arity - 1, f);\n  };\n}\nfunction curry(arity, f) {\n  if (f == null || f.length === 1) {\n    return f;\n  } else if (CURRIED in f) {\n    return f[CURRIED];\n  } else {\n    return _curry([], arity, f);\n  }\n}\nfunction checkArity(arity, f) {\n  return f.length > arity ? function () {\n    for (var _len = arguments.length, args1 = new Array(_len), _key = 0; _key < _len; _key++) {\n      args1[_key] = arguments[_key];\n    }\n    return function () {\n      for (var _len2 = arguments.length, args2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args2[_key2] = arguments[_key2];\n      }\n      return f.apply(undefined, args1.concat(args2));\n    };\n  } : f;\n}\nfunction partialApply(arity, f, args) {\n  if (f == null) {\n    return undefined;\n  } else if (CURRIED in f) {\n    f = f[CURRIED];\n    for (var i = 0; i < args.length; i++) {\n      f = f(args[i]);\n    }\n    return f;\n  } else {\n    return _curry(args, arity, f);\n  }\n}\nfunction mapCurriedArgs(fn, mappings) {\n  function mapArg(fn, arg, mappings, idx) {\n    var mapping = mappings[idx];\n    if (mapping !== 0) {\n      var expectedArity = mapping[0];\n      var actualArity = mapping[1];\n      if (expectedArity > 1) {\n        arg = curry(expectedArity, arg);\n      }\n      if (actualArity > 1) {\n        arg = uncurry(actualArity, arg);\n      }\n    }\n    var res = fn(arg);\n    if (idx + 1 === mappings.length) {\n      return res;\n    } else {\n      return function (arg) {\n        return mapArg(res, arg, mappings, idx + 1);\n      };\n    }\n  }\n  return function (arg) {\n    return mapArg(fn, arg, mappings, 0);\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/lib/big.js":
/*!************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/lib/big.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Big\": () => (/* binding */ Big),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Util.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Util.js\");\n/* harmony import */ var _Numeric_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Numeric.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Numeric.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// Adapted from https://github.com/MikeMcl/big.js/blob/0f94dc9110d55c4f324a47ba6a2e832ce23ac589/big.mjs\n/* tslint:disable */\n\n\n// The shared prototype object.\nvar P = _defineProperty({\n  GetHashCode: function GetHashCode() {\n    return (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.combineHashCodes)([this.s, this.e].concat(this.c));\n  },\n  Equals: function Equals(x) {\n    return !this.cmp(x);\n  },\n  CompareTo: function CompareTo(x) {\n    return this.cmp(x);\n  }\n}, _Numeric_js__WEBPACK_IMPORTED_MODULE_1__.symbol, function () {\n  var _this = this;\n  return {\n    multiply: function multiply(y) {\n      return _this.mul(y);\n    },\n    toPrecision: function toPrecision(sd) {\n      return _this.toPrecision(sd);\n    },\n    toExponential: function toExponential(dp) {\n      return _this.toExponential(dp);\n    },\n    toFixed: function toFixed(dp) {\n      return _this.toFixed(dp);\n    },\n    toHex: function toHex() {\n      return (Number(_this) >>> 0).toString(16);\n    }\n  };\n});\n/*\n *  big.js v6.0.3\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2020 Michael Mclaughlin\n *  https://github.com/MikeMcl/big.js/LICENCE.md\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28,\n  // 0 to MAX_DP\n  /*\n   * The rounding mode (RM) used when rounding to the above decimal places.\n   *\n   *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n   *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n   *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n   *  3  Away from zero.                                  (ROUND_UP)\n   */\n  RM = 1,\n  // 0, 1, 2 or 3\n  // The maximum value of DP and Big.DP.\n  MAX_DP = 1E6,\n  // 0 to 1000000\n  // The maximum magnitude of the exponent argument to the pow method.\n  MAX_POWER = 1E6,\n  // 1 to 1000000\n  /*\n   * The negative exponent (NE) at and beneath which toString returns exponential notation.\n   * (JavaScript numbers: -7)\n   * -1000000 is the minimum recommended exponent value of a Big.\n   */\n  NE = -29,\n  // 0 to -1000000\n  /*\n   * The positive exponent (PE) at and above which toString returns exponential notation.\n   * (JavaScript numbers: 21)\n   * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\n   */\n  PE = 29,\n  // 0 to 1000000\n  /*\n   * When true, an error will be thrown if a primitive number is passed to the Big constructor,\n   * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\n   * primitive number without a loss of precision.\n   */\n  STRICT = false,\n  // true or false\n  /**************************************************************************************************/\n  // Error messages.\n  NAME = '[big.js] ',\n  INVALID = NAME + 'Invalid ',\n  INVALID_DP = INVALID + 'decimal places',\n  INVALID_RM = INVALID + 'rounding mode',\n  DIV_BY_ZERO = NAME + 'Division by zero',\n  UNDEFINED = void 0,\n  NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n */\nfunction _Big_() {\n  /*\n   * The Big constructor and exported function.\n   * Create and return a new instance of a Big number object.\n   *\n   * n {number|string|Big} A numeric value.\n   */\n  function Big(n) {\n    var x = this;\n    // Enable constructor usage without new.\n    if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\n    // Duplicate.\n    if (n instanceof Big) {\n      x.s = n.s;\n      x.e = n.e;\n      x.c = n.c.slice();\n      normalize(x);\n    } else {\n      if (typeof n !== 'string') {\n        if (Big.strict === true) {\n          throw TypeError(INVALID + 'number');\n        }\n        // Minus zero?\n        n = n === 0 && 1 / n < 0 ? '-0' : String(n);\n      }\n      parse(x, n);\n    }\n    // Retain a reference to this Big constructor.\n    // Shadow Big.prototype.constructor which points to Object.\n    x.constructor = Big;\n  }\n  Big.prototype = P;\n  Big.DP = DP;\n  Big.RM = RM;\n  Big.NE = NE;\n  Big.PE = PE;\n  Big.strict = STRICT;\n  return Big;\n}\nfunction normalize(x) {\n  // x = round(x, DP, 0);\n  if (x.c.length > 1 && !x.c[0]) {\n    var i = x.c.findIndex(function (x) {\n      return x;\n    });\n    x.c = x.c.slice(i);\n    x.e = x.e - i;\n  }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n  var e, i, nl;\n  if (!NUMERIC.test(n)) {\n    throw Error(INVALID + 'number');\n  }\n  // Determine sign.\n  x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n  // Decimal point?\n  if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\n  // Exponential form?\n  if ((i = n.search(/e/i)) > 0) {\n    // Determine exponent.\n    if (e < 0) e = i;\n    e += +n.slice(i + 1);\n    n = n.substring(0, i);\n  } else if (e < 0) {\n    // Integer.\n    e = n.length;\n  }\n  nl = n.length;\n  // Determine leading zeros before decimal point.\n  for (i = 0; i < e && i < nl && n.charAt(i) == '0';) ++i;\n  // original version (ignores decimal point).\n  // // Determine leading zeros.\n  // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n  if (i == nl) {\n    // Zero.\n    x.c = [x.e = 0];\n  } else {\n    x.e = e - i - 1;\n    x.c = [];\n    // Convert string to array of digits without leading zeros\n    for (e = 0; i < nl;) x.c[e++] = +n.charAt(i++);\n    // older version (doesn't keep trailing zeroes).\n    // // Determine trailing zeros.\n    // for (; nl > 0 && n.charAt(--nl) == '0';);\n    // // Convert string to array of digits without leading/trailing zeros.\n    // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n  }\n\n  x = round(x, Big.DP + 1, Big.RM);\n  return x;\n}\n/*\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\n *\n * x {Big} The Big to round.\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, sd, rm, more) {\n  var xc = x.c;\n  if (rm === UNDEFINED) rm = Big.RM;\n  if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\n    throw Error(INVALID_RM);\n  }\n  if (sd < 1) {\n    more = rm === 3 && (more || !!xc[0]) || sd === 0 && (rm === 1 && xc[0] >= 5 || rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED)));\n    xc.length = 1;\n    if (more) {\n      // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n      x.e = x.e - sd + 1;\n      xc[0] = 1;\n    } else {\n      // Zero.\n      xc[0] = x.e = 0;\n    }\n  } else if (sd < xc.length) {\n    // xc[sd] is the digit after the digit that may be rounded up.\n    var isZero = xc.findIndex(function (xci, idx) {\n      return idx >= sd && xci > 0;\n    }) < 0;\n    more = rm === 1 && xc[sd] >= 5 || rm === 2 && (xc[sd] > 5 || xc[sd] === 5 && (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) || rm === 3 && (more || !isZero);\n    // Remove any digits after the required precision.\n    xc.length = sd--;\n    // Round up?\n    if (more) {\n      // Rounding up may mean the previous digit has to be rounded up.\n      for (; ++xc[sd] > 9;) {\n        xc[sd] = 0;\n        if (!sd--) {\n          ++x.e;\n          xc.unshift(1);\n        }\n      }\n    }\n    // Remove trailing zeros.\n    for (sd = xc.length; !xc[--sd];) xc.pop();\n  }\n  return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n */\nfunction stringify(x, doExponential, isNonzero) {\n  var e = x.e,\n    s = x.c.join(''),\n    n = s.length;\n  // Exponential notation?\n  if (doExponential) {\n    s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n    // Normal notation.\n  } else if (e < 0) {\n    for (; ++e;) s = '0' + s;\n    s = '0.' + s;\n  } else if (e > 0) {\n    if (++e > n) {\n      for (e -= n; e--;) s += '0';\n    } else if (e < n) {\n      s = s.slice(0, e) + '.' + s.slice(e);\n    }\n  } else if (n > 1) {\n    s = s.charAt(0) + '.' + s.slice(1);\n  }\n  return x.s < 0 && isNonzero ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n  var x = new this.constructor(this);\n  x.s = 1;\n  return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n */\nP.cmp = function (y) {\n  var isneg,\n    Big = this.constructor,\n    x = new Big(this),\n    y = new Big(y),\n    xc = x.c,\n    yc = y.c,\n    i = x.s,\n    j = y.s,\n    k = x.e,\n    l = y.e;\n  // Either zero?\n  if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\n  // Signs differ?\n  if (i != j) return i;\n  isneg = i < 0;\n  // Compare exponents.\n  if (k != l) return k > l ^ isneg ? 1 : -1;\n  // Compare digit by digit.\n  j = Math.max(xc.length, yc.length);\n  for (i = 0; i < j; i++) {\n    k = i < xc.length ? xc[i] : 0;\n    l = i < yc.length ? yc[i] : 0;\n    if (k != l) return k > l ^ isneg ? 1 : -1;\n  }\n  return 0;\n  // original version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n  // j = (k = xc.length) < (l = yc.length) ? k : l;\n  // // Compare digit by digit.\n  // for (i = -1; ++i < j;) {\n  //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n  // }\n  // // Compare lengths.\n  // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n  var Big = this.constructor,\n    x = new Big(this),\n    y = new Big(y),\n    a = x.c,\n    // dividend\n    b = y.c,\n    // divisor\n    k = x.s == y.s ? 1 : -1,\n    dp = Big.DP;\n  if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n    throw Error(INVALID_DP);\n  }\n  // Divisor is zero?\n  if (!b[0]) {\n    throw Error(DIV_BY_ZERO);\n  }\n  // Dividend is 0? Return +-0.\n  if (!a[0]) {\n    y.s = k;\n    y.c = [y.e = 0];\n    return y;\n  }\n  var bl,\n    bt,\n    n,\n    cmp,\n    ri,\n    bz = b.slice(),\n    ai = bl = b.length,\n    al = a.length,\n    r = a.slice(0, bl),\n    // remainder\n    rl = r.length,\n    q = y,\n    // quotient\n    qc = q.c = [],\n    qi = 0,\n    p = dp + (q.e = x.e - y.e) + 1; // precision of the result\n  q.s = k;\n  k = p < 0 ? 0 : p;\n  // Create version of divisor with leading zero.\n  bz.unshift(0);\n  // Add zeros to make remainder as long as divisor.\n  for (; rl++ < bl;) r.push(0);\n  do {\n    // n is how many times the divisor goes into current remainder.\n    for (n = 0; n < 10; n++) {\n      // Compare divisor and remainder.\n      if (bl != (rl = r.length)) {\n        cmp = bl > rl ? 1 : -1;\n      } else {\n        for (ri = -1, cmp = 0; ++ri < bl;) {\n          if (b[ri] != r[ri]) {\n            cmp = b[ri] > r[ri] ? 1 : -1;\n            break;\n          }\n        }\n      }\n      // If divisor < remainder, subtract divisor from remainder.\n      if (cmp < 0) {\n        // Remainder can't be more than 1 digit longer than divisor.\n        // Equalise lengths using divisor with extra leading zero?\n        for (bt = rl == bl ? b : bz; rl;) {\n          if (r[--rl] < bt[rl]) {\n            ri = rl;\n            for (; ri && !r[--ri];) r[ri] = 9;\n            --r[ri];\n            r[rl] += 10;\n          }\n          r[rl] -= bt[rl];\n        }\n        for (; !r[0];) r.shift();\n      } else {\n        break;\n      }\n    }\n    // Add the digit n to the result array.\n    qc[qi++] = cmp ? n : ++n;\n    // Update the remainder.\n    if (r[0] && cmp) r[rl] = a[ai] || 0;else r = [a[ai]];\n  } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n  // Leading zero? Do not remove if result is simply zero (qi == 1).\n  if (!qc[0] && qi != 1) {\n    // There can't be more than one zero.\n    qc.shift();\n    q.e--;\n    p--;\n  }\n  // Round?\n  if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\n  return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n  return this.cmp(y) === 0;\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n  return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n  return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n  return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n  return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n  var i,\n    j,\n    t,\n    xlty,\n    Big = this.constructor,\n    x = new Big(this),\n    y = new Big(y),\n    a = x.s,\n    b = y.s;\n  // Signs differ?\n  if (a != b) {\n    y.s = -b;\n    return x.plus(y);\n  }\n  var xc = x.c.slice(),\n    xe = x.e,\n    yc = y.c,\n    ye = y.e;\n  // Either zero?\n  if (!xc[0] || !yc[0]) {\n    if (yc[0]) {\n      y.s = -b;\n    } else if (xc[0]) {\n      y = new Big(x);\n    } else {\n      y.s = 1;\n    }\n    return y;\n  }\n  // Determine which is the bigger number. Prepend zeros to equalise exponents.\n  if (a = xe - ye) {\n    if (xlty = a < 0) {\n      a = -a;\n      t = xc;\n    } else {\n      ye = xe;\n      t = yc;\n    }\n    t.reverse();\n    for (b = a; b--;) t.push(0);\n    t.reverse();\n  } else {\n    // Exponents equal. Check digit by digit.\n    j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n    for (a = b = 0; b < j; b++) {\n      if (xc[b] != yc[b]) {\n        xlty = xc[b] < yc[b];\n        break;\n      }\n    }\n  }\n  // x < y? Point xc to the array of the bigger number.\n  if (xlty) {\n    t = xc;\n    xc = yc;\n    yc = t;\n    y.s = -y.s;\n  }\n  /*\n   * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n   * needs to start at yc.length.\n   */\n  if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\n  // Subtract yc from xc.\n  for (b = i; j > a;) {\n    if (xc[--j] < yc[j]) {\n      for (i = j; i && !xc[--i];) xc[i] = 9;\n      --xc[i];\n      xc[j] += 10;\n    }\n    xc[j] -= yc[j];\n  }\n  // Remove trailing zeros.\n  for (; xc[--b] === 0;) xc.pop();\n  // Remove leading zeros and adjust exponent accordingly.\n  for (; xc[0] === 0;) {\n    xc.shift();\n    --ye;\n  }\n  if (!xc[0]) {\n    // n - n = +0\n    y.s = 1;\n    // Result must be zero.\n    xc = [ye = 0];\n  }\n  y.c = xc;\n  y.e = ye;\n  return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n  var ygtx,\n    Big = this.constructor,\n    x = new Big(this),\n    y = new Big(y),\n    a = x.s,\n    b = y.s;\n  if (!y.c[0]) {\n    throw Error(DIV_BY_ZERO);\n  }\n  x.s = y.s = 1;\n  ygtx = y.cmp(x) == 1;\n  x.s = a;\n  y.s = b;\n  if (ygtx) return new Big(x);\n  a = Big.DP;\n  b = Big.RM;\n  Big.DP = Big.RM = 0;\n  x = x.div(y);\n  Big.DP = a;\n  Big.RM = b;\n  return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n  var e,\n    k,\n    t,\n    Big = this.constructor,\n    x = new Big(this),\n    y = new Big(y);\n  // Signs differ?\n  if (x.s != y.s) {\n    y.s = -y.s;\n    return x.minus(y);\n  }\n  var xe = x.e,\n    xc = x.c,\n    ye = y.e,\n    yc = y.c;\n  // Either zero?\n  if (!xc[0] || !yc[0]) {\n    if (!yc[0]) {\n      if (xc[0]) {\n        y = new Big(x);\n      } else {\n        y.s = x.s;\n      }\n    }\n    return y;\n  }\n  xc = xc.slice();\n  // Prepend zeros to equalise exponents.\n  // Note: reverse faster than unshifts.\n  if (e = xe - ye) {\n    if (e > 0) {\n      ye = xe;\n      t = yc;\n    } else {\n      e = -e;\n      t = xc;\n    }\n    t.reverse();\n    for (; e--;) t.push(0);\n    t.reverse();\n  }\n  // Point xc to the longer array.\n  if (xc.length - yc.length < 0) {\n    t = yc;\n    yc = xc;\n    xc = t;\n  }\n  e = yc.length;\n  // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n  for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n  if (k) {\n    xc.unshift(k);\n    ++ye;\n  }\n  // Remove trailing zeros.\n  for (e = xc.length; xc[--e] === 0;) xc.pop();\n  y.c = xc;\n  y.e = ye;\n  return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n  var Big = this.constructor,\n    x = new Big(this),\n    y = new Big('1'),\n    one = new Big('1'),\n    isneg = n < 0;\n  if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\n    throw Error(INVALID + 'exponent');\n  }\n  if (isneg) n = -n;\n  for (;;) {\n    if (n & 1) y = y.times(x);\n    n >>= 1;\n    if (!n) break;\n    x = x.times(x);\n  }\n  return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.prec = function (sd, rm) {\n  if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n    throw Error(INVALID + 'precision');\n  }\n  return round(new this.constructor(this), sd, rm);\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\n * using rounding mode rm, or Big.RM if rm is not specified.\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.round = function (dp, rm) {\n  if (dp === UNDEFINED) dp = 0;else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\n    throw Error(INVALID_DP);\n  }\n  return round(new this.constructor(this), dp + this.e + 1, rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n  var r,\n    c,\n    t,\n    Big = this.constructor,\n    x = new Big(this),\n    s = x.s,\n    e = x.e,\n    half = new Big('0.5');\n  // Zero?\n  if (!x.c[0]) return new Big(x);\n  // Negative?\n  if (s < 0) {\n    throw Error(NAME + 'No square root');\n  }\n  // Estimate.\n  s = Math.sqrt(x + '');\n  // Math.sqrt underflow/overflow?\n  // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n  if (s === 0 || s === 1 / 0) {\n    c = x.c.join('');\n    if (!(c.length + e & 1)) c += '0';\n    s = Math.sqrt(c);\n    e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n    r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n  } else {\n    r = new Big(s + '');\n  }\n  e = r.e + (Big.DP += 4);\n  // Newton-Raphson iteration.\n  do {\n    t = r;\n    r = half.times(t.plus(x.div(t)));\n  } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n  return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n  var c,\n    Big = this.constructor,\n    x = new Big(this),\n    y = new Big(y),\n    xc = x.c,\n    yc = y.c,\n    a = xc.length,\n    b = yc.length,\n    i = x.e,\n    j = y.e;\n  // Determine sign of result.\n  y.s = x.s == y.s ? 1 : -1;\n  // Return signed 0 if either 0.\n  if (!xc[0] || !yc[0]) {\n    y.c = [y.e = 0];\n    return y;\n  }\n  // Initialise exponent of result as x.e + y.e.\n  y.e = i + j;\n  // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n  if (a < b) {\n    c = xc;\n    xc = yc;\n    yc = c;\n    j = a;\n    a = b;\n    b = j;\n  }\n  // Initialise coefficient array of result with zeros.\n  for (c = new Array(j = a + b); j--;) c[j] = 0;\n  // Multiply.\n  // i is initially xc.length.\n  for (i = b; i--;) {\n    b = 0;\n    // a is yc.length.\n    for (j = a + i; j > i;) {\n      // Current sum of products at this digit position, plus carry.\n      b = c[j] + yc[i] * xc[j - i - 1] + b;\n      c[j--] = b % 10;\n      // carry\n      b = b / 10 | 0;\n    }\n    c[j] = b;\n  }\n  // Increment result exponent if there is a final carry, otherwise remove leading zero.\n  if (b) ++y.e;else c.shift();\n  // Remove trailing zeros.\n  for (i = c.length; !c[--i];) c.pop();\n  y.c = c;\n  return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toExponential = function (dp, rm) {\n  var x = this,\n    n = x.c[0];\n  if (dp !== UNDEFINED) {\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n      throw Error(INVALID_DP);\n    }\n    x = round(new x.constructor(x), ++dp, rm);\n    for (; x.c.length < dp;) x.c.push(0);\n  }\n  return stringify(x, true, !!n);\n};\n/*\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp, rm) {\n  var x = this,\n    n = x.c[0];\n  if (dp !== UNDEFINED) {\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n      throw Error(INVALID_DP);\n    }\n    x = round(new x.constructor(x), dp + x.e + 1, rm);\n    // x.e may have changed if the value is rounded up.\n    for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\n  }\n  return stringify(x, false, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toJSON = P.toString = function () {\n  var x = this,\n    Big = x.constructor;\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\n};\n/*\n * Return the value of this Big as a primitve number.\n */\nP.toNumber = function () {\n  var n = Number(stringify(this, true, true));\n  if (this.constructor.strict === true && !this.eq(n.toString())) {\n    throw Error(NAME + 'Imprecise conversion');\n  }\n  return n;\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * rounding mode rm, or Big.RM if rm is not specified.\n * Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toPrecision = function (sd, rm) {\n  var x = this,\n    Big = x.constructor,\n    n = x.c[0];\n  if (sd !== UNDEFINED) {\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n      throw Error(INVALID + 'precision');\n    }\n    x = round(new Big(x), sd, rm);\n    for (; x.c.length < sd;) x.c.push(0);\n  }\n  return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = function () {\n  var x = this,\n    Big = x.constructor;\n  if (Big.strict === true) {\n    throw Error(NAME + 'valueOf disallowed');\n  }\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\n};\n// Export\nvar Big = _Big_();\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Big);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/lib/big.js\n");

/***/ }),

/***/ "./src/Client/.fable/fable_modules/fable-library.3.7.2/lib/long.js":
/*!*************************************************************************!*\
  !*** ./src/Client/.fable/fable_modules/fable-library.3.7.2/lib/long.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Long\": () => (/* binding */ Long),\n/* harmony export */   \"isLong\": () => (/* binding */ isLong),\n/* harmony export */   \"fromInt\": () => (/* binding */ fromInt),\n/* harmony export */   \"fromNumber\": () => (/* binding */ fromNumber),\n/* harmony export */   \"fromBits\": () => (/* binding */ fromBits),\n/* harmony export */   \"fromString\": () => (/* binding */ fromString),\n/* harmony export */   \"fromValue\": () => (/* binding */ fromValue),\n/* harmony export */   \"ZERO\": () => (/* binding */ ZERO),\n/* harmony export */   \"UZERO\": () => (/* binding */ UZERO),\n/* harmony export */   \"ONE\": () => (/* binding */ ONE),\n/* harmony export */   \"UONE\": () => (/* binding */ UONE),\n/* harmony export */   \"NEG_ONE\": () => (/* binding */ NEG_ONE),\n/* harmony export */   \"MAX_VALUE\": () => (/* binding */ MAX_VALUE),\n/* harmony export */   \"MAX_UNSIGNED_VALUE\": () => (/* binding */ MAX_UNSIGNED_VALUE),\n/* harmony export */   \"MIN_VALUE\": () => (/* binding */ MIN_VALUE),\n/* harmony export */   \"toInt\": () => (/* binding */ toInt),\n/* harmony export */   \"toNumber\": () => (/* binding */ toNumber),\n/* harmony export */   \"toString\": () => (/* binding */ toString),\n/* harmony export */   \"getHighBits\": () => (/* binding */ getHighBits),\n/* harmony export */   \"getHighBitsUnsigned\": () => (/* binding */ getHighBitsUnsigned),\n/* harmony export */   \"getLowBits\": () => (/* binding */ getLowBits),\n/* harmony export */   \"getLowBitsUnsigned\": () => (/* binding */ getLowBitsUnsigned),\n/* harmony export */   \"getNumBitsAbs\": () => (/* binding */ getNumBitsAbs),\n/* harmony export */   \"isZero\": () => (/* binding */ isZero),\n/* harmony export */   \"isNegative\": () => (/* binding */ isNegative),\n/* harmony export */   \"isPositive\": () => (/* binding */ isPositive),\n/* harmony export */   \"isOdd\": () => (/* binding */ isOdd),\n/* harmony export */   \"isEven\": () => (/* binding */ isEven),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"notEquals\": () => (/* binding */ notEquals),\n/* harmony export */   \"lessThan\": () => (/* binding */ lessThan),\n/* harmony export */   \"lessThanOrEqual\": () => (/* binding */ lessThanOrEqual),\n/* harmony export */   \"greaterThan\": () => (/* binding */ greaterThan),\n/* harmony export */   \"greaterThanOrEqual\": () => (/* binding */ greaterThanOrEqual),\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiply\": () => (/* binding */ _multiply),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"modulo\": () => (/* binding */ modulo),\n/* harmony export */   \"not\": () => (/* binding */ not),\n/* harmony export */   \"and\": () => (/* binding */ and),\n/* harmony export */   \"or\": () => (/* binding */ or),\n/* harmony export */   \"xor\": () => (/* binding */ xor),\n/* harmony export */   \"shiftLeft\": () => (/* binding */ shiftLeft),\n/* harmony export */   \"shiftRight\": () => (/* binding */ shiftRight),\n/* harmony export */   \"shiftRightUnsigned\": () => (/* binding */ shiftRightUnsigned),\n/* harmony export */   \"rotateLeft\": () => (/* binding */ rotateLeft),\n/* harmony export */   \"rotateRight\": () => (/* binding */ rotateRight),\n/* harmony export */   \"toSigned\": () => (/* binding */ toSigned),\n/* harmony export */   \"toUnsigned\": () => (/* binding */ toUnsigned),\n/* harmony export */   \"toBytes\": () => (/* binding */ toBytes),\n/* harmony export */   \"toBytesLE\": () => (/* binding */ toBytesLE),\n/* harmony export */   \"toBytesBE\": () => (/* binding */ toBytesBE),\n/* harmony export */   \"fromBytes\": () => (/* binding */ fromBytes),\n/* harmony export */   \"fromBytesLE\": () => (/* binding */ fromBytesLE),\n/* harmony export */   \"fromBytesBE\": () => (/* binding */ fromBytesBE)\n/* harmony export */ });\n/* harmony import */ var _Numeric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Numeric.js */ \"./src/Client/.fable/fable_modules/fable-library.3.7.2/Numeric.js\");\n// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\n\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n} catch (e) {\n  // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nfunction Long(low, high, unsigned) {\n  /**\n   * The low 32 bits as a signed value.\n   * @type {number}\n   */\n  this.low = low | 0;\n  /**\n   * The high 32 bits as a signed value.\n   * @type {number}\n   */\n  this.high = high | 0;\n  /**\n   * Whether unsigned or not.\n   * @type {boolean}\n   */\n  this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n  var h1 = this.unsigned ? 1 : 0;\n  h1 = (h1 << 5) + h1 ^ this.high;\n  h1 = (h1 << 5) + h1 ^ this.low;\n  return h1;\n};\nLong.prototype.Equals = function (x) {\n  return equals(this, x);\n};\nLong.prototype.CompareTo = function (x) {\n  return compare(this, x);\n};\nLong.prototype.toString = function (radix) {\n  return toString(this, radix);\n};\nLong.prototype.toJSON = function () {\n  return toString(this);\n};\nLong.prototype[_Numeric_js__WEBPACK_IMPORTED_MODULE_0__.symbol] = function () {\n  var x = this;\n  return {\n    multiply: function multiply(y) {\n      return _multiply(x, y);\n    },\n    toPrecision: function toPrecision(sd) {\n      return String(x) + 0 .toPrecision(sd).substr(1);\n    },\n    toExponential: function toExponential(dp) {\n      return String(x) + 0 .toExponential(dp).substr(1);\n    },\n    toFixed: function toFixed(dp) {\n      return String(x) + 0 .toFixed(dp).substr(1);\n    },\n    toHex: function toHex() {\n      return toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16);\n    }\n  };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", {\n  value: true\n});\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nfunction isLong(obj) {\n  return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromInt(value, unsigned) {\n  var obj, cachedObj, cache;\n  if (unsigned) {\n    value >>>= 0;\n    if (cache = 0 <= value && value < 256) {\n      cachedObj = UINT_CACHE[value];\n      if (cachedObj) return cachedObj;\n    }\n    obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n    if (cache) UINT_CACHE[value] = obj;\n    return obj;\n  } else {\n    value |= 0;\n    if (cache = -128 <= value && value < 128) {\n      cachedObj = INT_CACHE[value];\n      if (cachedObj) return cachedObj;\n    }\n    obj = fromBits(value, value < 0 ? -1 : 0, false);\n    if (cache) INT_CACHE[value] = obj;\n    return obj;\n  }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromNumber(value, unsigned) {\n  if (isNaN(value)) return unsigned ? UZERO : ZERO;\n  if (unsigned) {\n    if (value < 0) return UZERO;\n    if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n  } else {\n    if (value <= -TWO_PWR_63_DBL) return MIN_VALUE;\n    if (value + 1 >= TWO_PWR_63_DBL) return MAX_VALUE;\n  }\n  if (value < 0) return negate(fromNumber(-value, unsigned));\n  return fromBits(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromBits(lowBits, highBits, unsigned) {\n  return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nfunction fromString(str, unsigned, radix) {\n  if (str.length === 0) throw Error('empty string');\n  if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\") return ZERO;\n  if (typeof unsigned === 'number') {\n    // For goog.math.long compatibility\n    radix = unsigned, unsigned = false;\n  } else {\n    unsigned = !!unsigned;\n  }\n  radix = radix || 10;\n  if (radix < 2 || 36 < radix) throw RangeError('radix');\n  var p = str.indexOf('-');\n  if (p > 0) throw Error('interior hyphen');else if (p === 0) {\n    return negate(fromString(str.substring(1), unsigned, radix));\n  }\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = fromNumber(pow_dbl(radix, 8));\n  var result = ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i),\n      value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = fromNumber(pow_dbl(radix, size));\n      result = add(_multiply(result, power), fromNumber(value));\n    } else {\n      result = _multiply(result, radixToPower);\n      result = add(result, fromNumber(value));\n    }\n  }\n  result.unsigned = unsigned;\n  return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromValue(val, unsigned) {\n  if (typeof val === 'number') return fromNumber(val, unsigned);\n  if (typeof val === 'string') return fromString(val, unsigned);\n  // Throws for non-objects, converts non-instanceof Long:\n  return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nvar ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nvar UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nvar ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nvar UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nvar NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nvar MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nvar MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nfunction toInt($this) {\n  return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nfunction toNumber($this) {\n  if ($this.unsigned) return ($this.high >>> 0) * TWO_PWR_32_DBL + ($this.low >>> 0);\n  return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nfunction toString($this, radix) {\n  radix = radix || 10;\n  if (radix < 2 || 36 < radix) throw RangeError('radix');\n  if (isZero($this)) return '0';\n  if (isNegative($this)) {\n    // Unsigned Longs are never negative\n    if (equals($this, MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = fromNumber(radix),\n        div = divide($this, radixLong),\n        rem1 = subtract(_multiply(div, radixLong), $this);\n      return toString(div, radix) + toInt(rem1).toString(radix);\n    } else return '-' + toString(negate($this), radix);\n  }\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned),\n    rem = $this;\n  var result = '';\n  while (true) {\n    var remDiv = divide(rem, radixToPower),\n      intval = toInt(subtract(rem, _multiply(remDiv, radixToPower))) >>> 0,\n      digits = intval.toString(radix);\n    rem = remDiv;\n    if (isZero(rem)) return digits + result;else {\n      while (digits.length < 6) digits = '0' + digits;\n      result = '' + digits + result;\n    }\n  }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nfunction getHighBits($this) {\n  return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nfunction getHighBitsUnsigned($this) {\n  return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nfunction getLowBits($this) {\n  return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nfunction getLowBitsUnsigned($this) {\n  return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nfunction getNumBitsAbs($this) {\n  if (isNegative($this))\n    // Unsigned Longs are never negative\n    return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n  var val = $this.high != 0 ? $this.high : $this.low;\n  for (var bit = 31; bit > 0; bit--) if ((val & 1 << bit) != 0) break;\n  return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nfunction isZero($this) {\n  return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nfunction isNegative($this) {\n  return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nfunction isPositive($this) {\n  return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nfunction isOdd($this) {\n  return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nfunction isEven($this) {\n  return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nfunction equals($this, other) {\n  if (!isLong(other)) other = fromValue(other);\n  if ($this.unsigned !== other.unsigned && $this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n  return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nfunction notEquals($this, other) {\n  return !equals($this, /* validates */other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nfunction lessThan($this, other) {\n  return compare($this, /* validates */other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nfunction lessThanOrEqual($this, other) {\n  return compare($this, /* validates */other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nfunction greaterThan($this, other) {\n  return compare($this, /* validates */other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nfunction greaterThanOrEqual($this, other) {\n  return compare($this, /* validates */other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nfunction compare($this, other) {\n  if (!isLong(other)) other = fromValue(other);\n  if (equals($this, other)) return 0;\n  var thisNeg = isNegative($this),\n    otherNeg = isNegative(other);\n  if (thisNeg && !otherNeg) return -1;\n  if (!thisNeg && otherNeg) return 1;\n  // At this point the sign bits are the same\n  if (!$this.unsigned) return isNegative(subtract($this, other)) ? -1 : 1;\n  // Both are positive if at least one is unsigned\n  return other.high >>> 0 > $this.high >>> 0 || other.high === $this.high && other.low >>> 0 > $this.low >>> 0 ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nfunction negate($this) {\n  if (!$this.unsigned && equals($this, MIN_VALUE)) return MIN_VALUE;\n  return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nfunction add($this, addend) {\n  if (!isLong(addend)) addend = fromValue(addend);\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n  var a48 = $this.high >>> 16;\n  var a32 = $this.high & 0xFFFF;\n  var a16 = $this.low >>> 16;\n  var a00 = $this.low & 0xFFFF;\n  var b48 = addend.high >>> 16;\n  var b32 = addend.high & 0xFFFF;\n  var b16 = addend.low >>> 16;\n  var b00 = addend.low & 0xFFFF;\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return fromBits(c16 << 16 | c00, c48 << 16 | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nfunction subtract($this, subtrahend) {\n  if (!isLong(subtrahend)) subtrahend = fromValue(subtrahend);\n  return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nfunction _multiply($this, multiplier) {\n  if (isZero($this)) return $this.unsigned ? UZERO : ZERO;\n  if (!isLong(multiplier)) multiplier = fromValue(multiplier);\n  // use wasm support if present\n  if (wasm) {\n    var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n    return fromBits(low, wasm.get_high(), $this.unsigned);\n  }\n  if (isZero(multiplier)) return $this.unsigned ? UZERO : ZERO;\n  if (equals($this, MIN_VALUE)) return isOdd(multiplier) ? MIN_VALUE : ZERO;\n  if (equals(multiplier, MIN_VALUE)) return isOdd($this) ? MIN_VALUE : ZERO;\n  if (isNegative($this)) {\n    if (isNegative(multiplier)) return _multiply(negate($this), negate(multiplier));else return negate(_multiply(negate($this), multiplier));\n  } else if (isNegative(multiplier)) return negate(_multiply($this, negate(multiplier)));\n  // If both longs are small, use float multiplication\n  if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24)) return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n  // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n  var a48 = $this.high >>> 16;\n  var a32 = $this.high & 0xFFFF;\n  var a16 = $this.low >>> 16;\n  var a00 = $this.low & 0xFFFF;\n  var b48 = multiplier.high >>> 16;\n  var b32 = multiplier.high & 0xFFFF;\n  var b16 = multiplier.low >>> 16;\n  var b00 = multiplier.low & 0xFFFF;\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return fromBits(c16 << 16 | c00, c48 << 16 | c32, $this.unsigned);\n}\n\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nfunction divide($this, divisor) {\n  if (!isLong(divisor)) divisor = fromValue(divisor);\n  if (isZero(divisor)) throw Error('division by zero');\n  // use wasm support if present\n  if (wasm) {\n    // guard against signed division overflow: the largest\n    // negative number / -1 would be 1 larger than the largest\n    // positive number, due to two's complement.\n    if (!$this.unsigned && $this.high === -0x80000000 && divisor.low === -1 && divisor.high === -1) {\n      // be consistent with non-wasm code path\n      return $this;\n    }\n    var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n    return fromBits(low, wasm.get_high(), $this.unsigned);\n  }\n  if (isZero($this)) return $this.unsigned ? UZERO : ZERO;\n  var approx, rem, res;\n  if (!$this.unsigned) {\n    // This section is only relevant for signed longs and is derived from the\n    // closure library as a whole.\n    if (equals($this, MIN_VALUE)) {\n      if (equals(divisor, ONE) || equals(divisor, NEG_ONE)) return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n      else if (equals(divisor, MIN_VALUE)) return ONE;else {\n        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n        var halfThis = shiftRight($this, 1);\n        approx = shiftLeft(divide(halfThis, divisor), 1);\n        if (equals(approx, ZERO)) {\n          return isNegative(divisor) ? ONE : NEG_ONE;\n        } else {\n          rem = subtract($this, _multiply(divisor, approx));\n          res = add(approx, divide(rem, divisor));\n          return res;\n        }\n      }\n    } else if (equals(divisor, MIN_VALUE)) return $this.unsigned ? UZERO : ZERO;\n    if (isNegative($this)) {\n      if (isNegative(divisor)) return divide(negate($this), negate(divisor));\n      return negate(divide(negate($this), divisor));\n    } else if (isNegative(divisor)) return negate(divide($this, negate(divisor)));\n    res = ZERO;\n  } else {\n    // The algorithm below has not been made for unsigned longs. It's therefore\n    // required to take special care of the MSB prior to running it.\n    if (!divisor.unsigned) divisor = toUnsigned(divisor);\n    if (greaterThan(divisor, $this)) return UZERO;\n    if (greaterThan(divisor, shiftRightUnsigned($this, 1)))\n      // 15 >>> 1 = 7 ; with divisor = 8 ; true\n      return UONE;\n    res = UZERO;\n  }\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  rem = $this;\n  while (greaterThanOrEqual(rem, divisor)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n      delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48),\n      // Decrease the approximation until it is smaller than the remainder.  Note\n      // that if it is too large, the product overflows and is negative.\n      approxRes = fromNumber(approx),\n      approxRem = _multiply(approxRes, divisor);\n    while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n      approx -= delta;\n      approxRes = fromNumber(approx, $this.unsigned);\n      approxRem = _multiply(approxRes, divisor);\n    }\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (isZero(approxRes)) approxRes = ONE;\n    res = add(res, approxRes);\n    rem = subtract(rem, approxRem);\n  }\n  return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nfunction modulo($this, divisor) {\n  if (!isLong(divisor)) divisor = fromValue(divisor);\n  // use wasm support if present\n  if (wasm) {\n    var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n    return fromBits(low, wasm.get_high(), $this.unsigned);\n  }\n  return subtract($this, _multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nfunction not($this) {\n  return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nfunction and($this, other) {\n  if (!isLong(other)) other = fromValue(other);\n  return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nfunction or($this, other) {\n  if (!isLong(other)) other = fromValue(other);\n  return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nfunction xor($this, other) {\n  if (!isLong(other)) other = fromValue(other);\n  return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nfunction shiftLeft($this, numBits) {\n  if (isLong(numBits)) numBits = toInt(numBits);\n  if ((numBits &= 63) === 0) return $this;else if (numBits < 32) return fromBits($this.low << numBits, $this.high << numBits | $this.low >>> 32 - numBits, $this.unsigned);else return fromBits(0, $this.low << numBits - 32, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nfunction shiftRight($this, numBits) {\n  if (isLong(numBits)) numBits = toInt(numBits);\n  if ((numBits &= 63) === 0) return $this;else if (numBits < 32) return fromBits($this.low >>> numBits | $this.high << 32 - numBits, $this.high >> numBits, $this.unsigned);else return fromBits($this.high >> numBits - 32, $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nfunction shiftRightUnsigned($this, numBits) {\n  if (isLong(numBits)) numBits = toInt(numBits);\n  numBits &= 63;\n  if (numBits === 0) return $this;else {\n    var high = $this.high;\n    if (numBits < 32) {\n      var low = $this.low;\n      return fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits, $this.unsigned);\n    } else if (numBits === 32) return fromBits(high, 0, $this.unsigned);else return fromBits(high >>> numBits - 32, 0, $this.unsigned);\n  }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nvar rotateLeft = function rotateLeft(numBits) {\n  var b;\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  if (numBits < 32) {\n    b = 32 - numBits;\n    return fromBits(this.low << numBits | this.high >>> b, this.high << numBits | this.low >>> b, this.unsigned);\n  }\n  numBits -= 32;\n  b = 32 - numBits;\n  return fromBits(this.high << numBits | this.low >>> b, this.low << numBits | this.high >>> b, this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nvar rotateRight = function rotateRight(numBits) {\n  var b;\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  if (numBits < 32) {\n    b = 32 - numBits;\n    return fromBits(this.high << b | this.low >>> numBits, this.low << b | this.high >>> numBits, this.unsigned);\n  }\n  numBits -= 32;\n  b = 32 - numBits;\n  return fromBits(this.low << b | this.high >>> numBits, this.high << b | this.low >>> numBits, this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nfunction toSigned($this) {\n  if (!$this.unsigned) return $this;\n  return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nfunction toUnsigned($this) {\n  if ($this.unsigned) return $this;\n  return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nfunction toBytes($this, le) {\n  return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nfunction toBytesLE($this) {\n  var hi = $this.high,\n    lo = $this.low;\n  return [lo & 0xff, lo >>> 8 & 0xff, lo >>> 16 & 0xff, lo >>> 24, hi & 0xff, hi >>> 8 & 0xff, hi >>> 16 & 0xff, hi >>> 24];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nfunction toBytesBE($this) {\n  var hi = $this.high,\n    lo = $this.low;\n  return [hi >>> 24, hi >>> 16 & 0xff, hi >>> 8 & 0xff, hi & 0xff, lo >>> 24, lo >>> 16 & 0xff, lo >>> 8 & 0xff, lo & 0xff];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nfunction fromBytes(bytes, unsigned, le) {\n  return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nfunction fromBytesLE(bytes, unsigned) {\n  return new Long(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nfunction fromBytesBE(bytes, unsigned) {\n  return new Long(bytes[4] << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7], bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], unsigned);\n}\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Client/.fable/fable_modules/fable-library.3.7.2/lib/long.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			if (cachedModule.error !== undefined) throw cachedModule.error;
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		try {
/******/ 			var execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };
/******/ 			__webpack_require__.i.forEach(function(handler) { handler(execOptions); });
/******/ 			module = execOptions.module;
/******/ 			execOptions.factory.call(module.exports, module, module.exports, execOptions.require);
/******/ 		} catch(e) {
/******/ 			module.error = e;
/******/ 			throw e;
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = __webpack_module_cache__;
/******/ 	
/******/ 	// expose the module execution interceptor
/******/ 	__webpack_require__.i = [];
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript update chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.hu = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + "." + __webpack_require__.h() + ".hot-update.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get update manifest filename */
/******/ 	(() => {
/******/ 		__webpack_require__.hmrF = () => ("app." + __webpack_require__.h() + ".hot-update.json");
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/getFullHash */
/******/ 	(() => {
/******/ 		__webpack_require__.h = () => ("5f80fe153ec5d09c3772")
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		// data-webpack is not used as build has no uniqueName
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hot module replacement */
/******/ 	(() => {
/******/ 		var currentModuleData = {};
/******/ 		var installedModules = __webpack_require__.c;
/******/ 		
/******/ 		// module and require creation
/******/ 		var currentChildModule;
/******/ 		var currentParents = [];
/******/ 		
/******/ 		// status
/******/ 		var registeredStatusHandlers = [];
/******/ 		var currentStatus = "idle";
/******/ 		
/******/ 		// while downloading
/******/ 		var blockingPromises;
/******/ 		
/******/ 		// The update info
/******/ 		var currentUpdateApplyHandlers;
/******/ 		var queuedInvalidatedModules;
/******/ 		
/******/ 		// eslint-disable-next-line no-unused-vars
/******/ 		__webpack_require__.hmrD = currentModuleData;
/******/ 		
/******/ 		__webpack_require__.i.push(function (options) {
/******/ 			var module = options.module;
/******/ 			var require = createRequire(options.require, options.id);
/******/ 			module.hot = createModuleHotObject(options.id, module);
/******/ 			module.parents = currentParents;
/******/ 			module.children = [];
/******/ 			currentParents = [];
/******/ 			options.require = require;
/******/ 		});
/******/ 		
/******/ 		__webpack_require__.hmrC = {};
/******/ 		__webpack_require__.hmrI = {};
/******/ 		
/******/ 		function createRequire(require, moduleId) {
/******/ 			var me = installedModules[moduleId];
/******/ 			if (!me) return require;
/******/ 			var fn = function (request) {
/******/ 				if (me.hot.active) {
/******/ 					if (installedModules[request]) {
/******/ 						var parents = installedModules[request].parents;
/******/ 						if (parents.indexOf(moduleId) === -1) {
/******/ 							parents.push(moduleId);
/******/ 						}
/******/ 					} else {
/******/ 						currentParents = [moduleId];
/******/ 						currentChildModule = request;
/******/ 					}
/******/ 					if (me.children.indexOf(request) === -1) {
/******/ 						me.children.push(request);
/******/ 					}
/******/ 				} else {
/******/ 					console.warn(
/******/ 						"[HMR] unexpected require(" +
/******/ 							request +
/******/ 							") from disposed module " +
/******/ 							moduleId
/******/ 					);
/******/ 					currentParents = [];
/******/ 				}
/******/ 				return require(request);
/******/ 			};
/******/ 			var createPropertyDescriptor = function (name) {
/******/ 				return {
/******/ 					configurable: true,
/******/ 					enumerable: true,
/******/ 					get: function () {
/******/ 						return require[name];
/******/ 					},
/******/ 					set: function (value) {
/******/ 						require[name] = value;
/******/ 					}
/******/ 				};
/******/ 			};
/******/ 			for (var name in require) {
/******/ 				if (Object.prototype.hasOwnProperty.call(require, name) && name !== "e") {
/******/ 					Object.defineProperty(fn, name, createPropertyDescriptor(name));
/******/ 				}
/******/ 			}
/******/ 			fn.e = function (chunkId) {
/******/ 				return trackBlockingPromise(require.e(chunkId));
/******/ 			};
/******/ 			return fn;
/******/ 		}
/******/ 		
/******/ 		function createModuleHotObject(moduleId, me) {
/******/ 			var _main = currentChildModule !== moduleId;
/******/ 			var hot = {
/******/ 				// private stuff
/******/ 				_acceptedDependencies: {},
/******/ 				_acceptedErrorHandlers: {},
/******/ 				_declinedDependencies: {},
/******/ 				_selfAccepted: false,
/******/ 				_selfDeclined: false,
/******/ 				_selfInvalidated: false,
/******/ 				_disposeHandlers: [],
/******/ 				_main: _main,
/******/ 				_requireSelf: function () {
/******/ 					currentParents = me.parents.slice();
/******/ 					currentChildModule = _main ? undefined : moduleId;
/******/ 					__webpack_require__(moduleId);
/******/ 				},
/******/ 		
/******/ 				// Module API
/******/ 				active: true,
/******/ 				accept: function (dep, callback, errorHandler) {
/******/ 					if (dep === undefined) hot._selfAccepted = true;
/******/ 					else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 					else if (typeof dep === "object" && dep !== null) {
/******/ 						for (var i = 0; i < dep.length; i++) {
/******/ 							hot._acceptedDependencies[dep[i]] = callback || function () {};
/******/ 							hot._acceptedErrorHandlers[dep[i]] = errorHandler;
/******/ 						}
/******/ 					} else {
/******/ 						hot._acceptedDependencies[dep] = callback || function () {};
/******/ 						hot._acceptedErrorHandlers[dep] = errorHandler;
/******/ 					}
/******/ 				},
/******/ 				decline: function (dep) {
/******/ 					if (dep === undefined) hot._selfDeclined = true;
/******/ 					else if (typeof dep === "object" && dep !== null)
/******/ 						for (var i = 0; i < dep.length; i++)
/******/ 							hot._declinedDependencies[dep[i]] = true;
/******/ 					else hot._declinedDependencies[dep] = true;
/******/ 				},
/******/ 				dispose: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				addDisposeHandler: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				removeDisposeHandler: function (callback) {
/******/ 					var idx = hot._disposeHandlers.indexOf(callback);
/******/ 					if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 				},
/******/ 				invalidate: function () {
/******/ 					this._selfInvalidated = true;
/******/ 					switch (currentStatus) {
/******/ 						case "idle":
/******/ 							currentUpdateApplyHandlers = [];
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							setStatus("ready");
/******/ 							break;
/******/ 						case "ready":
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							break;
/******/ 						case "prepare":
/******/ 						case "check":
/******/ 						case "dispose":
/******/ 						case "apply":
/******/ 							(queuedInvalidatedModules = queuedInvalidatedModules || []).push(
/******/ 								moduleId
/******/ 							);
/******/ 							break;
/******/ 						default:
/******/ 							// ignore requests in error states
/******/ 							break;
/******/ 					}
/******/ 				},
/******/ 		
/******/ 				// Management API
/******/ 				check: hotCheck,
/******/ 				apply: hotApply,
/******/ 				status: function (l) {
/******/ 					if (!l) return currentStatus;
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				addStatusHandler: function (l) {
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				removeStatusHandler: function (l) {
/******/ 					var idx = registeredStatusHandlers.indexOf(l);
/******/ 					if (idx >= 0) registeredStatusHandlers.splice(idx, 1);
/******/ 				},
/******/ 		
/******/ 				//inherit from previous dispose call
/******/ 				data: currentModuleData[moduleId]
/******/ 			};
/******/ 			currentChildModule = undefined;
/******/ 			return hot;
/******/ 		}
/******/ 		
/******/ 		function setStatus(newStatus) {
/******/ 			currentStatus = newStatus;
/******/ 			var results = [];
/******/ 		
/******/ 			for (var i = 0; i < registeredStatusHandlers.length; i++)
/******/ 				results[i] = registeredStatusHandlers[i].call(null, newStatus);
/******/ 		
/******/ 			return Promise.all(results);
/******/ 		}
/******/ 		
/******/ 		function trackBlockingPromise(promise) {
/******/ 			switch (currentStatus) {
/******/ 				case "ready":
/******/ 					setStatus("prepare");
/******/ 					blockingPromises.push(promise);
/******/ 					waitForBlockingPromises(function () {
/******/ 						return setStatus("ready");
/******/ 					});
/******/ 					return promise;
/******/ 				case "prepare":
/******/ 					blockingPromises.push(promise);
/******/ 					return promise;
/******/ 				default:
/******/ 					return promise;
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function waitForBlockingPromises(fn) {
/******/ 			if (blockingPromises.length === 0) return fn();
/******/ 			var blocker = blockingPromises;
/******/ 			blockingPromises = [];
/******/ 			return Promise.all(blocker).then(function () {
/******/ 				return waitForBlockingPromises(fn);
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function hotCheck(applyOnUpdate) {
/******/ 			if (currentStatus !== "idle") {
/******/ 				throw new Error("check() is only allowed in idle status");
/******/ 			}
/******/ 			return setStatus("check")
/******/ 				.then(__webpack_require__.hmrM)
/******/ 				.then(function (update) {
/******/ 					if (!update) {
/******/ 						return setStatus(applyInvalidatedModules() ? "ready" : "idle").then(
/******/ 							function () {
/******/ 								return null;
/******/ 							}
/******/ 						);
/******/ 					}
/******/ 		
/******/ 					return setStatus("prepare").then(function () {
/******/ 						var updatedModules = [];
/******/ 						blockingPromises = [];
/******/ 						currentUpdateApplyHandlers = [];
/******/ 		
/******/ 						return Promise.all(
/******/ 							Object.keys(__webpack_require__.hmrC).reduce(function (
/******/ 								promises,
/******/ 								key
/******/ 							) {
/******/ 								__webpack_require__.hmrC[key](
/******/ 									update.c,
/******/ 									update.r,
/******/ 									update.m,
/******/ 									promises,
/******/ 									currentUpdateApplyHandlers,
/******/ 									updatedModules
/******/ 								);
/******/ 								return promises;
/******/ 							},
/******/ 							[])
/******/ 						).then(function () {
/******/ 							return waitForBlockingPromises(function () {
/******/ 								if (applyOnUpdate) {
/******/ 									return internalApply(applyOnUpdate);
/******/ 								} else {
/******/ 									return setStatus("ready").then(function () {
/******/ 										return updatedModules;
/******/ 									});
/******/ 								}
/******/ 							});
/******/ 						});
/******/ 					});
/******/ 				});
/******/ 		}
/******/ 		
/******/ 		function hotApply(options) {
/******/ 			if (currentStatus !== "ready") {
/******/ 				return Promise.resolve().then(function () {
/******/ 					throw new Error("apply() is only allowed in ready status");
/******/ 				});
/******/ 			}
/******/ 			return internalApply(options);
/******/ 		}
/******/ 		
/******/ 		function internalApply(options) {
/******/ 			options = options || {};
/******/ 		
/******/ 			applyInvalidatedModules();
/******/ 		
/******/ 			var results = currentUpdateApplyHandlers.map(function (handler) {
/******/ 				return handler(options);
/******/ 			});
/******/ 			currentUpdateApplyHandlers = undefined;
/******/ 		
/******/ 			var errors = results
/******/ 				.map(function (r) {
/******/ 					return r.error;
/******/ 				})
/******/ 				.filter(Boolean);
/******/ 		
/******/ 			if (errors.length > 0) {
/******/ 				return setStatus("abort").then(function () {
/******/ 					throw errors[0];
/******/ 				});
/******/ 			}
/******/ 		
/******/ 			// Now in "dispose" phase
/******/ 			var disposePromise = setStatus("dispose");
/******/ 		
/******/ 			results.forEach(function (result) {
/******/ 				if (result.dispose) result.dispose();
/******/ 			});
/******/ 		
/******/ 			// Now in "apply" phase
/******/ 			var applyPromise = setStatus("apply");
/******/ 		
/******/ 			var error;
/******/ 			var reportError = function (err) {
/******/ 				if (!error) error = err;
/******/ 			};
/******/ 		
/******/ 			var outdatedModules = [];
/******/ 			results.forEach(function (result) {
/******/ 				if (result.apply) {
/******/ 					var modules = result.apply(reportError);
/******/ 					if (modules) {
/******/ 						for (var i = 0; i < modules.length; i++) {
/******/ 							outdatedModules.push(modules[i]);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			});
/******/ 		
/******/ 			return Promise.all([disposePromise, applyPromise]).then(function () {
/******/ 				// handle errors in accept handlers and self accepted module load
/******/ 				if (error) {
/******/ 					return setStatus("fail").then(function () {
/******/ 						throw error;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				if (queuedInvalidatedModules) {
/******/ 					return internalApply(options).then(function (list) {
/******/ 						outdatedModules.forEach(function (moduleId) {
/******/ 							if (list.indexOf(moduleId) < 0) list.push(moduleId);
/******/ 						});
/******/ 						return list;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				return setStatus("idle").then(function () {
/******/ 					return outdatedModules;
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function applyInvalidatedModules() {
/******/ 			if (queuedInvalidatedModules) {
/******/ 				if (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];
/******/ 				Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 					queuedInvalidatedModules.forEach(function (moduleId) {
/******/ 						__webpack_require__.hmrI[key](
/******/ 							moduleId,
/******/ 							currentUpdateApplyHandlers
/******/ 						);
/******/ 					});
/******/ 				});
/******/ 				queuedInvalidatedModules = undefined;
/******/ 				return true;
/******/ 			}
/******/ 		}
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = __webpack_require__.hmrS_jsonp = __webpack_require__.hmrS_jsonp || {
/******/ 			"app": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		var currentUpdatedModulesList;
/******/ 		var waitingUpdateResolves = {};
/******/ 		function loadUpdateChunk(chunkId) {
/******/ 			return new Promise((resolve, reject) => {
/******/ 				waitingUpdateResolves[chunkId] = resolve;
/******/ 				// start update chunk loading
/******/ 				var url = __webpack_require__.p + __webpack_require__.hu(chunkId);
/******/ 				// create error before stack unwound to get useful stacktrace later
/******/ 				var error = new Error();
/******/ 				var loadingEnded = (event) => {
/******/ 					if(waitingUpdateResolves[chunkId]) {
/******/ 						waitingUpdateResolves[chunkId] = undefined
/******/ 						var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 						var realSrc = event && event.target && event.target.src;
/******/ 						error.message = 'Loading hot update chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 						error.name = 'ChunkLoadError';
/******/ 						error.type = errorType;
/******/ 						error.request = realSrc;
/******/ 						reject(error);
/******/ 					}
/******/ 				};
/******/ 				__webpack_require__.l(url, loadingEnded);
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		self["webpackHotUpdate"] = (chunkId, moreModules, runtime) => {
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					currentUpdate[moduleId] = moreModules[moduleId];
/******/ 					if(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);
/******/ 				}
/******/ 			}
/******/ 			if(runtime) currentUpdateRuntime.push(runtime);
/******/ 			if(waitingUpdateResolves[chunkId]) {
/******/ 				waitingUpdateResolves[chunkId]();
/******/ 				waitingUpdateResolves[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var currentUpdateChunks;
/******/ 		var currentUpdate;
/******/ 		var currentUpdateRemovedChunks;
/******/ 		var currentUpdateRuntime;
/******/ 		function applyHandler(options) {
/******/ 			if (__webpack_require__.f) delete __webpack_require__.f.jsonpHmr;
/******/ 			currentUpdateChunks = undefined;
/******/ 			function getAffectedModuleEffects(updateModuleId) {
/******/ 				var outdatedModules = [updateModuleId];
/******/ 				var outdatedDependencies = {};
/******/ 		
/******/ 				var queue = outdatedModules.map(function (id) {
/******/ 					return {
/******/ 						chain: [id],
/******/ 						id: id
/******/ 					};
/******/ 				});
/******/ 				while (queue.length > 0) {
/******/ 					var queueItem = queue.pop();
/******/ 					var moduleId = queueItem.id;
/******/ 					var chain = queueItem.chain;
/******/ 					var module = __webpack_require__.c[moduleId];
/******/ 					if (
/******/ 						!module ||
/******/ 						(module.hot._selfAccepted && !module.hot._selfInvalidated)
/******/ 					)
/******/ 						continue;
/******/ 					if (module.hot._selfDeclined) {
/******/ 						return {
/******/ 							type: "self-declined",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					if (module.hot._main) {
/******/ 						return {
/******/ 							type: "unaccepted",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					for (var i = 0; i < module.parents.length; i++) {
/******/ 						var parentId = module.parents[i];
/******/ 						var parent = __webpack_require__.c[parentId];
/******/ 						if (!parent) continue;
/******/ 						if (parent.hot._declinedDependencies[moduleId]) {
/******/ 							return {
/******/ 								type: "declined",
/******/ 								chain: chain.concat([parentId]),
/******/ 								moduleId: moduleId,
/******/ 								parentId: parentId
/******/ 							};
/******/ 						}
/******/ 						if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 						if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 							if (!outdatedDependencies[parentId])
/******/ 								outdatedDependencies[parentId] = [];
/******/ 							addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 							continue;
/******/ 						}
/******/ 						delete outdatedDependencies[parentId];
/******/ 						outdatedModules.push(parentId);
/******/ 						queue.push({
/******/ 							chain: chain.concat([parentId]),
/******/ 							id: parentId
/******/ 						});
/******/ 					}
/******/ 				}
/******/ 		
/******/ 				return {
/******/ 					type: "accepted",
/******/ 					moduleId: updateModuleId,
/******/ 					outdatedModules: outdatedModules,
/******/ 					outdatedDependencies: outdatedDependencies
/******/ 				};
/******/ 			}
/******/ 		
/******/ 			function addAllToSet(a, b) {
/******/ 				for (var i = 0; i < b.length; i++) {
/******/ 					var item = b[i];
/******/ 					if (a.indexOf(item) === -1) a.push(item);
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			// at begin all updates modules are outdated
/******/ 			// the "outdated" status can propagate to parents if they don't accept the children
/******/ 			var outdatedDependencies = {};
/******/ 			var outdatedModules = [];
/******/ 			var appliedUpdate = {};
/******/ 		
/******/ 			var warnUnexpectedRequire = function warnUnexpectedRequire(module) {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" + module.id + ") to disposed module"
/******/ 				);
/******/ 			};
/******/ 		
/******/ 			for (var moduleId in currentUpdate) {
/******/ 				if (__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 					var newModuleFactory = currentUpdate[moduleId];
/******/ 					/** @type {TODO} */
/******/ 					var result;
/******/ 					if (newModuleFactory) {
/******/ 						result = getAffectedModuleEffects(moduleId);
/******/ 					} else {
/******/ 						result = {
/******/ 							type: "disposed",
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					/** @type {Error|false} */
/******/ 					var abortError = false;
/******/ 					var doApply = false;
/******/ 					var doDispose = false;
/******/ 					var chainInfo = "";
/******/ 					if (result.chain) {
/******/ 						chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 					}
/******/ 					switch (result.type) {
/******/ 						case "self-declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of self decline: " +
/******/ 										result.moduleId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of declined dependency: " +
/******/ 										result.moduleId +
/******/ 										" in " +
/******/ 										result.parentId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "unaccepted":
/******/ 							if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 							if (!options.ignoreUnaccepted)
/******/ 								abortError = new Error(
/******/ 									"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "accepted":
/******/ 							if (options.onAccepted) options.onAccepted(result);
/******/ 							doApply = true;
/******/ 							break;
/******/ 						case "disposed":
/******/ 							if (options.onDisposed) options.onDisposed(result);
/******/ 							doDispose = true;
/******/ 							break;
/******/ 						default:
/******/ 							throw new Error("Unexception type " + result.type);
/******/ 					}
/******/ 					if (abortError) {
/******/ 						return {
/******/ 							error: abortError
/******/ 						};
/******/ 					}
/******/ 					if (doApply) {
/******/ 						appliedUpdate[moduleId] = newModuleFactory;
/******/ 						addAllToSet(outdatedModules, result.outdatedModules);
/******/ 						for (moduleId in result.outdatedDependencies) {
/******/ 							if (__webpack_require__.o(result.outdatedDependencies, moduleId)) {
/******/ 								if (!outdatedDependencies[moduleId])
/******/ 									outdatedDependencies[moduleId] = [];
/******/ 								addAllToSet(
/******/ 									outdatedDependencies[moduleId],
/******/ 									result.outdatedDependencies[moduleId]
/******/ 								);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 					if (doDispose) {
/******/ 						addAllToSet(outdatedModules, [result.moduleId]);
/******/ 						appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 			currentUpdate = undefined;
/******/ 		
/******/ 			// Store self accepted outdated modules to require them later by the module system
/******/ 			var outdatedSelfAcceptedModules = [];
/******/ 			for (var j = 0; j < outdatedModules.length; j++) {
/******/ 				var outdatedModuleId = outdatedModules[j];
/******/ 				var module = __webpack_require__.c[outdatedModuleId];
/******/ 				if (
/******/ 					module &&
/******/ 					(module.hot._selfAccepted || module.hot._main) &&
/******/ 					// removed self-accepted modules should not be required
/******/ 					appliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&
/******/ 					// when called invalidate self-accepting is not possible
/******/ 					!module.hot._selfInvalidated
/******/ 				) {
/******/ 					outdatedSelfAcceptedModules.push({
/******/ 						module: outdatedModuleId,
/******/ 						require: module.hot._requireSelf,
/******/ 						errorHandler: module.hot._selfAccepted
/******/ 					});
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			var moduleOutdatedDependencies;
/******/ 		
/******/ 			return {
/******/ 				dispose: function () {
/******/ 					currentUpdateRemovedChunks.forEach(function (chunkId) {
/******/ 						delete installedChunks[chunkId];
/******/ 					});
/******/ 					currentUpdateRemovedChunks = undefined;
/******/ 		
/******/ 					var idx;
/******/ 					var queue = outdatedModules.slice();
/******/ 					while (queue.length > 0) {
/******/ 						var moduleId = queue.pop();
/******/ 						var module = __webpack_require__.c[moduleId];
/******/ 						if (!module) continue;
/******/ 		
/******/ 						var data = {};
/******/ 		
/******/ 						// Call dispose handlers
/******/ 						var disposeHandlers = module.hot._disposeHandlers;
/******/ 						for (j = 0; j < disposeHandlers.length; j++) {
/******/ 							disposeHandlers[j].call(null, data);
/******/ 						}
/******/ 						__webpack_require__.hmrD[moduleId] = data;
/******/ 		
/******/ 						// disable module (this disables requires from this module)
/******/ 						module.hot.active = false;
/******/ 		
/******/ 						// remove module from cache
/******/ 						delete __webpack_require__.c[moduleId];
/******/ 		
/******/ 						// when disposing there is no need to call dispose handler
/******/ 						delete outdatedDependencies[moduleId];
/******/ 		
/******/ 						// remove "parents" references from all children
/******/ 						for (j = 0; j < module.children.length; j++) {
/******/ 							var child = __webpack_require__.c[module.children[j]];
/******/ 							if (!child) continue;
/******/ 							idx = child.parents.indexOf(moduleId);
/******/ 							if (idx >= 0) {
/******/ 								child.parents.splice(idx, 1);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// remove outdated dependency from module children
/******/ 					var dependency;
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									dependency = moduleOutdatedDependencies[j];
/******/ 									idx = module.children.indexOf(dependency);
/******/ 									if (idx >= 0) module.children.splice(idx, 1);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				},
/******/ 				apply: function (reportError) {
/******/ 					// insert new code
/******/ 					for (var updateModuleId in appliedUpdate) {
/******/ 						if (__webpack_require__.o(appliedUpdate, updateModuleId)) {
/******/ 							__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// run new runtime modules
/******/ 					for (var i = 0; i < currentUpdateRuntime.length; i++) {
/******/ 						currentUpdateRuntime[i](__webpack_require__);
/******/ 					}
/******/ 		
/******/ 					// call accept handlers
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							var module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								var callbacks = [];
/******/ 								var errorHandlers = [];
/******/ 								var dependenciesForCallbacks = [];
/******/ 								for (var j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									var dependency = moduleOutdatedDependencies[j];
/******/ 									var acceptCallback =
/******/ 										module.hot._acceptedDependencies[dependency];
/******/ 									var errorHandler =
/******/ 										module.hot._acceptedErrorHandlers[dependency];
/******/ 									if (acceptCallback) {
/******/ 										if (callbacks.indexOf(acceptCallback) !== -1) continue;
/******/ 										callbacks.push(acceptCallback);
/******/ 										errorHandlers.push(errorHandler);
/******/ 										dependenciesForCallbacks.push(dependency);
/******/ 									}
/******/ 								}
/******/ 								for (var k = 0; k < callbacks.length; k++) {
/******/ 									try {
/******/ 										callbacks[k].call(null, moduleOutdatedDependencies);
/******/ 									} catch (err) {
/******/ 										if (typeof errorHandlers[k] === "function") {
/******/ 											try {
/******/ 												errorHandlers[k](err, {
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k]
/******/ 												});
/******/ 											} catch (err2) {
/******/ 												if (options.onErrored) {
/******/ 													options.onErrored({
/******/ 														type: "accept-error-handler-errored",
/******/ 														moduleId: outdatedModuleId,
/******/ 														dependencyId: dependenciesForCallbacks[k],
/******/ 														error: err2,
/******/ 														originalError: err
/******/ 													});
/******/ 												}
/******/ 												if (!options.ignoreErrored) {
/******/ 													reportError(err2);
/******/ 													reportError(err);
/******/ 												}
/******/ 											}
/******/ 										} else {
/******/ 											if (options.onErrored) {
/******/ 												options.onErrored({
/******/ 													type: "accept-errored",
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k],
/******/ 													error: err
/******/ 												});
/******/ 											}
/******/ 											if (!options.ignoreErrored) {
/******/ 												reportError(err);
/******/ 											}
/******/ 										}
/******/ 									}
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// Load self accepted modules
/******/ 					for (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {
/******/ 						var item = outdatedSelfAcceptedModules[o];
/******/ 						var moduleId = item.module;
/******/ 						try {
/******/ 							item.require(moduleId);
/******/ 						} catch (err) {
/******/ 							if (typeof item.errorHandler === "function") {
/******/ 								try {
/******/ 									item.errorHandler(err, {
/******/ 										moduleId: moduleId,
/******/ 										module: __webpack_require__.c[moduleId]
/******/ 									});
/******/ 								} catch (err2) {
/******/ 									if (options.onErrored) {
/******/ 										options.onErrored({
/******/ 											type: "self-accept-error-handler-errored",
/******/ 											moduleId: moduleId,
/******/ 											error: err2,
/******/ 											originalError: err
/******/ 										});
/******/ 									}
/******/ 									if (!options.ignoreErrored) {
/******/ 										reportError(err2);
/******/ 										reportError(err);
/******/ 									}
/******/ 								}
/******/ 							} else {
/******/ 								if (options.onErrored) {
/******/ 									options.onErrored({
/******/ 										type: "self-accept-errored",
/******/ 										moduleId: moduleId,
/******/ 										error: err
/******/ 									});
/******/ 								}
/******/ 								if (!options.ignoreErrored) {
/******/ 									reportError(err);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					return outdatedModules;
/******/ 				}
/******/ 			};
/******/ 		}
/******/ 		__webpack_require__.hmrI.jsonp = function (moduleId, applyHandlers) {
/******/ 			if (!currentUpdate) {
/******/ 				currentUpdate = {};
/******/ 				currentUpdateRuntime = [];
/******/ 				currentUpdateRemovedChunks = [];
/******/ 				applyHandlers.push(applyHandler);
/******/ 			}
/******/ 			if (!__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 				currentUpdate[moduleId] = __webpack_require__.m[moduleId];
/******/ 			}
/******/ 		};
/******/ 		__webpack_require__.hmrC.jsonp = function (
/******/ 			chunkIds,
/******/ 			removedChunks,
/******/ 			removedModules,
/******/ 			promises,
/******/ 			applyHandlers,
/******/ 			updatedModulesList
/******/ 		) {
/******/ 			applyHandlers.push(applyHandler);
/******/ 			currentUpdateChunks = {};
/******/ 			currentUpdateRemovedChunks = removedChunks;
/******/ 			currentUpdate = removedModules.reduce(function (obj, key) {
/******/ 				obj[key] = false;
/******/ 				return obj;
/******/ 			}, {});
/******/ 			currentUpdateRuntime = [];
/******/ 			chunkIds.forEach(function (chunkId) {
/******/ 				if (
/******/ 					__webpack_require__.o(installedChunks, chunkId) &&
/******/ 					installedChunks[chunkId] !== undefined
/******/ 				) {
/******/ 					promises.push(loadUpdateChunk(chunkId, updatedModulesList));
/******/ 					currentUpdateChunks[chunkId] = true;
/******/ 				}
/******/ 			});
/******/ 			if (__webpack_require__.f) {
/******/ 				__webpack_require__.f.jsonpHmr = function (chunkId, promises) {
/******/ 					if (
/******/ 						currentUpdateChunks &&
/******/ 						!__webpack_require__.o(currentUpdateChunks, chunkId) &&
/******/ 						__webpack_require__.o(installedChunks, chunkId) &&
/******/ 						installedChunks[chunkId] !== undefined
/******/ 					) {
/******/ 						promises.push(loadUpdateChunk(chunkId));
/******/ 						currentUpdateChunks[chunkId] = true;
/******/ 					}
/******/ 				};
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.hmrM = () => {
/******/ 			if (typeof fetch === "undefined") throw new Error("No browser support: need fetch API");
/******/ 			return fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((response) => {
/******/ 				if(response.status === 404) return; // no update available
/******/ 				if(!response.ok) throw new Error("Failed to fetch update manifest " + response.statusText);
/******/ 				return response.json();
/******/ 			});
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// module cache are used so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors"], () => (__webpack_require__("./src/Client/.fable/HSCode.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;